{"initialLink":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13","sanitizedLink":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13","finalLink":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488","htmlEmbed":"<script>window.contexterSetup=window.contexterSetup||function(){window.contexterSetupComplete=!0;class ContexterLink extends HTMLAnchorElement{constructor(){super()}connectedCallback(){this.setAttribute(\"target\",\"_blank\")}}customElements.define(\"contexter-link\",ContexterLink,{extends:\"a\"}),customElements.define(\"contexter-inner\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__inner\"}}),customElements.define(\"contexter-thumbnail\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__thumbnail\"}}),customElements.define(\"contexter-byline\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__byline\"}}),customElements.define(\"contexter-keywordset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__keywordset\"}}),customElements.define(\"contexter-linkset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__linkset\"}}),customElements.define(\"contexter-meta\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__meta\"}}),customElements.define(\"contexter-summary\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"p-summary entry-summary\"}}),customElements.define(\"contexter-box-head\",class extends HTMLElement{constructor(){super()}connectedCallback(){this.className=\"contexter-box__head\"}}),customElements.define(\"contexter-box-inner\",class extends HTMLElement{constructor(){super()}connectedCallback(){}});class ContexterBox extends HTMLElement{constructor(){super(),this.first=!0,this.shadow=this.attachShadow({mode:\"open\"})}connectedCallback(){if(this.first){this.first=!1;var style=document.createElement(\"style\"),lightDomStyle=(style.innerHTML=`:host {--background: #f5f6f7;--border: darkblue;--blue: #0000ee;--font-color: black;--inner-border: black;font-family: Franklin,Arial,Helvetica,sans-serif;font-size: 14px;background: var(--background);width: 600px;color: var(--font-color);min-height: 90px;display: block;padding: 8px;border: 1px solid var(--border);cursor: pointer;box-sizing: border-box;margin: 6px;contain: content;margin: 6px auto;}// can only select top-level nodes with slotted::slotted(*) {max-width: 100%;display:block;}::slotted([slot=thumbnail]) {max-width: 100%;display:block;}::slotted([slot=header]) {width: 100%;font-size: 1.25rem;font-weight: bold;display:block;margin-bottom: 6px;}::slotted([slot=author]) {max-width: 50%;font-size: 12px;display:inline-block;float: left;}::slotted([slot=time]) {max-width: 50%;font-size: 12px;display:inline-block;float: right;}::slotted([slot=summary]) {width: 100%;margin-top: 6px;padding: 10px 2px;border-top: 1px solid var(--inner-border);font-size: 15px;display:inline-block;margin-bottom: 6px;}contexter-meta {height: auto;margin-bottom: 4px;width: 100%;display: grid;position: relative;min-height: 16px;grid-template-columns: repeat(2, 1fr);}::slotted([slot=keywords]) {width: 80%;padding: 2px 4px;border-top: 1px solid var(--inner-border);font-size: 11px;display: block;float: right;font-style: italic;text-align: right;grid-column: 2/2;grid-row: 1;align-self: end;justify-self: end;}::slotted([slot=keywords]):empty {border-top: 0px solid var(--inner-border);}::slotted([slot=archive-link]) {font-size: 1em;display: inline;}::slotted([slot=archive-link])::after {content: \"|\";display: inline;color: var(--font-color);text-decoration: none;margin: 0 .5em;}::slotted([slot=read-link]) {font-size: 1em;display: inline;}contexter-linkset {width: 80%;padding: 2px 4px;font-size: 13px;float: left;font-weight: bold;grid-row: 1;grid-column: 1/2;align-self: end;justify-self: start;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {:host {width: 310px;}}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){:host {--background: #354150;--border: #1f2b37;--blue: #55b0ff;--font-color: #ffffff;--inner-border: #787a7c;background: var(--background);border: 1px solid var(--border)}}`,document.createElement(\"style\"));lightDomStyle.innerHTML=`contexter-box {contain: content;}contexter-box .read-link {font-weight: bold;}contexter-box a {color: #0000ee;}contexter-box img {width: 100%;border: 0;padding: 0;margin: 0;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {...}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){contexter-box a {color: #55b0ff;}}`,this.appendChild(lightDomStyle),this.shadow.appendChild(style);const innerContainer=document.createElement(\"contexter-box-inner\"),innerSlotThumbnail=(this.shadow.appendChild(innerContainer),document.createElement(\"slot\")),innerSlotHeader=(innerSlotThumbnail.name=\"thumbnail\",innerContainer.appendChild(innerSlotThumbnail),document.createElement(\"slot\")),innerSlotAuthor=(innerSlotHeader.name=\"header\",innerContainer.appendChild(innerSlotHeader),document.createElement(\"slot\")),innerSlotTime=(innerSlotAuthor.name=\"author\",innerContainer.appendChild(innerSlotAuthor),document.createElement(\"slot\")),innerSlotSummary=(innerSlotTime.name=\"time\",innerContainer.appendChild(innerSlotTime),document.createElement(\"slot\")),metaContainer=(innerSlotSummary.name=\"summary\",innerContainer.appendChild(innerSlotSummary),document.createElement(\"contexter-meta\")),innerSlotInfo=(innerContainer.appendChild(metaContainer),document.createElement(\"slot\")),linkContainer=(innerSlotInfo.name=\"keywords\",metaContainer.appendChild(innerSlotInfo),document.createElement(\"contexter-linkset\")),innerSlotArchiveLink=(metaContainer.appendChild(linkContainer),document.createElement(\"slot\")),innerSlotReadLink=(innerSlotArchiveLink.name=\"archive-link\",linkContainer.appendChild(innerSlotArchiveLink),document.createElement(\"slot\"));innerSlotReadLink.name=\"read-link\",linkContainer.appendChild(innerSlotReadLink),this.className=\"contexter-box\",this.onclick=e=>{if(!e.target.className.includes(\"read-link\")&&!e.target.className.includes(\"title-link\")){const mainLinks=this.querySelectorAll(\"a.main-link\");mainLinks[0].click()}}}}}customElements.define(\"contexter-box\",ContexterBox)},window.contexterSetupComplete||window.contexterSetup();</script><contexter-box class=\"link-card h-entry hentry\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\"><contexter-thumbnail class=\"thumbnail\" slot=\"thumbnail\"></contexter-thumbnail><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><a is=\"contexter-link\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\" itemprop=\"url\">Developers Meeting 7 : A standard way to query in ActivityPub</a></contexter-box-head></contexter-box-head><time class=\"dt-published published\" slot=\"time\" itemprop=\"datePublished\" datetime=\"2022-11-07T04:53:24.185Z\">10/6/2022</time><contexter-summary class=\"p-summary entry-summary\" itemprop=\"abstract\" slot=\"summary\"><p>Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...</p></contexter-summary><contexter-keywordset itemprop=\"keywords\" slot=\"keywords\"></contexter-keywordset><a is=\"contexter-link\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\" class=\"read-link main-link\" itemprop=\"sameAs\" slot=\"read-link\">Read</a></contexter-box>","linkId":"35c03a3b13dd79fde64e47924f423e38946b11c7","data":{"originalLink":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13","sanitizedLink":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13","canonical":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488","htmlText":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Developers Meeting 7 : A standard way to query in ActivityPub - #13 by Sebastian - SocialHub</title>\n    <meta name=\"description\" content=\"Meeting Minutes here\n\n\nFollowing Developers Meeting 6 : Groups and Improving C2S (ended) : \n\nPlease note: Due to upcoming holidays it will be the first TUE of the month, July 5.\n(not the second one) \n2022-07-05T16:00:00&amp;hellip;\">\n    <meta name=\"generator\" content=\"Discourse 2.9.0.beta11 - https://github.com/discourse/discourse version 46e9f402ebe6abc3fa51c6d938a5b01826b3b7d2\">\n<link rel=\"icon\" type=\"image/png\" href=\"https://socialhub.activitypub.rocks/uploads/default/optimized/1X/b7023860b3d7df97ea10ba3c7ab11cb046a77c7a_2_32x32.png\">\n<link rel=\"apple-touch-icon\" type=\"image/png\" href=\"https://socialhub.activitypub.rocks/uploads/default/optimized/1X/8faac84234dc73d074dadaa2bcf24dc746b8647f_2_180x180.png\">\n<meta name=\"theme-color\" media=\"all\" content=\"#ffffff\">\n\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, user-scalable=yes, viewport-fit=cover\">\n<link rel=\"canonical\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\" />\n\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"https://socialhub.activitypub.rocks/opensearch.xml\" title=\"SocialHub Search\">\n\n    <link href=\"/stylesheets/color_definitions_light_2_3_57ac14b34aaf138b67daa3e820efb513b07a5287.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" class=\"light-scheme\"/>\n\n  <link href=\"/stylesheets/desktop_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"desktop\"  />\n\n\n\n  <link href=\"/stylesheets/discourse-assign_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-assign\"  />\n  <link href=\"/stylesheets/discourse-calendar_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-calendar\"  />\n  <link href=\"/stylesheets/discourse-canned-replies_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-canned-replies\"  />\n  <link href=\"/stylesheets/discourse-checklist_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-checklist\"  />\n  <link href=\"/stylesheets/discourse-details_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-details\"  />\n  <link href=\"/stylesheets/discourse-footnote_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-footnote\"  />\n  <link href=\"/stylesheets/discourse-graphviz_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-graphviz\"  />\n  <link href=\"/stylesheets/discourse-local-dates_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-local-dates\"  />\n  <link href=\"/stylesheets/discourse-locations_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-locations\"  />\n  <link href=\"/stylesheets/discourse-math_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-math\"  />\n  <link href=\"/stylesheets/discourse-narrative-bot_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-narrative-bot\"  />\n  <link href=\"/stylesheets/discourse-policy_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-policy\"  />\n  <link href=\"/stylesheets/discourse-presence_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-presence\"  />\n  <link href=\"/stylesheets/discourse-saved-searches_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-saved-searches\"  />\n  <link href=\"/stylesheets/discourse-shared-edits_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-shared-edits\"  />\n  <link href=\"/stylesheets/discourse-solved_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-solved\"  />\n  <link href=\"/stylesheets/discourse-spoiler-alert_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-spoiler-alert\"  />\n  <link href=\"/stylesheets/discourse-voting_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-voting\"  />\n  <link href=\"/stylesheets/discourse-whos-online_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-whos-online\"  />\n  <link href=\"/stylesheets/lazy-yt_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"lazy-yt\"  />\n  <link href=\"/stylesheets/poll_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"poll\"  />\n  <link href=\"/stylesheets/discourse-calendar_desktop_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-calendar_desktop\"  />\n  <link href=\"/stylesheets/discourse-locations_desktop_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-locations_desktop\"  />\n  <link href=\"/stylesheets/discourse-voting_desktop_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"discourse-voting_desktop\"  />\n  <link href=\"/stylesheets/poll_desktop_b5cc0a1a3d64f31d9d8063c12ddc71cef0380f96.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"poll_desktop\"  />\n\n  <link href=\"/stylesheets/desktop_theme_4_826a7e48684517d4d5ee5e3906b43bc26359b1d6.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"desktop_theme\" data-theme-id=\"4\" data-theme-name=\"custom header links\"/>\n<link href=\"/stylesheets/desktop_theme_5_c3d059da062cbc14e2460188310d9697154f7609.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"desktop_theme\" data-theme-id=\"5\" data-theme-name=\"discotoc\"/>\n<link href=\"/stylesheets/desktop_theme_8_274473663a59473e2a570ea6ebb18dc7048f2798.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"desktop_theme\" data-theme-id=\"8\" data-theme-name=\"socialhub theme\"/>\n<link href=\"/stylesheets/desktop_theme_3_d1b0aac548606fe1eaaf0acb21966a5c76d0e3d7.css?__ws=socialhub.activitypub.rocks\" media=\"all\" rel=\"stylesheet\" data-target=\"desktop_theme\" data-theme-id=\"3\" data-theme-name=\"light\"/>\n\n    \n    \n        <link rel=\"alternate nofollow\" type=\"application/rss+xml\" title=\"RSS feed of &#39;Developers Meeting 7 : A standard way to query in ActivityPub&#39;\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488.rss\" />\n    <meta property=\"og:site_name\" content=\"SocialHub\" />\n<meta property=\"og:type\" content=\"website\" />\n<meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:image\" content=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png\" />\n<meta property=\"og:image\" content=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png\" />\n<meta property=\"og:url\" content=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13\" />\n<meta name=\"twitter:url\" content=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13\" />\n<meta property=\"og:title\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\" />\n<meta name=\"twitter:title\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\" />\n<meta property=\"og:description\" content=\"Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...\" />\n<meta name=\"twitter:description\" content=\"Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...\" />\n<meta property=\"article:published_time\" content=\"2022-07-05T19:53:56+00:00\" />\n<meta property=\"og:ignore_canonical\" content=\"true\" />\n\n        <link rel=\"next\" href=\"/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488?page=2\">\n\n    \n  </head>\n  <body class=\"crawler\">\n    \n    <header>\n  <a href=\"/\">\n    SocialHub\n  </a>\n</header>\n\n    <div id=\"main-outlet\" class=\"wrap\" role=\"main\">\n        <div id=\"topic-title\">\n    <h1>\n      <a href=\"/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">Developers Meeting 7 : A standard way to query in ActivityPub</a>\n    </h1>\n\n\n  </div>\n\n  \n\n\n      <div id='post_8' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/Sebastian'><span itemprop='name'>Sebastian</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-06-14T22:26:49Z' class='post-time'>\n                June 14, 2022, 10:26pm\n              </time>\n              <meta itemprop='dateModified' content='2022-06-14T22:26:49Z'>\n          <span itemprop='position'>#8</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <blockquote>\n<p>What do people need to query that isn’t in the AP spec (or other community specs)?</p>\n</blockquote>\n<p>Pops up nearly each day, so will ask the next.<br>\nPersonally same things than e.g. in twitter<br>\n“posted before/after/between”<br>\n“posted from/to”<br>\n“only type=Image”<br>\n“context about Harold and Maude or Robert Frank”<br>\netc.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n          <meta itemprop='keywords' content=''>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"1\" />\n           <span class='post-likes'>1 Like</span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_9' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-06-29T18:11:22Z' class='post-time'>\n                June 29, 2022,  6:11pm\n              </time>\n              <meta itemprop='dateModified' content='2022-06-29T18:11:22Z'>\n          <span itemprop='position'>#9</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <aside class=\"quote group-redaktor.me\" data-username=\"Sebastian\" data-post=\"4\" data-topic=\"2488\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://socialhub.activitypub.rocks/user_avatar/socialhub.activitypub.rocks/sebastian/40/38_2.png\" class=\"avatar\"> Sebastian:</div>\n<blockquote>\n<p>The reason is that at the moment <em>nobody</em> uses SPARQL</p>\n</blockquote>\n</aside>\n<p>I’m using SPARQL! rdf-pub is supporting SPARQL.</p>\n<p>I’m struggeling with some issues in the moment and currently the auth server is down ;-(<br>\nBut in principle you can query the public collection.<br>\nThere is certainly still a lot to learn and, if necessary, to optimise.<br>\nFrom an authentication point of view, it will be exciting.<br>\nI’ll have to test that soon, but at the moment I’m still testing the public collection query.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"1\" />\n          </div>\n\n      </div>\n      <div id='post_10' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-06-29T18:16:13Z' class='post-time'>\n                June 29, 2022,  6:16pm\n              </time>\n              <meta itemprop='dateModified' content='2022-06-29T18:16:13Z'>\n          <span itemprop='position'>#10</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>The <a href=\"https://www.kartevonmorgen.org/\" rel=\"noopener nofollow ugc\">karte von morgen</a> (kvm) adapter, that is doing a one way sync  kvm → rdf-pub uses “hardcore” SPARQL to check, what entries are already in rdf-pub.</p>\n<aside class=\"onebox allowlistedgeneric\" data-onebox-src=\"https://gitlab.com/linkedopenactors/loa-kvm-adapter\">\n  <header class=\"source\">\n      <img src=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/1/1b9ed5c9db3047a561e2ca4cbcbc8a1623700ed9.png\" class=\"site-icon\" width=\"32\" height=\"32\">\n\n      <a href=\"https://gitlab.com/linkedopenactors/loa-kvm-adapter\" target=\"_blank\" rel=\"noopener nofollow ugc\">GitLab</a>\n  </header>\n\n  <article class=\"onebox-body\">\n    <img src=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/f/fe4b1d5aafa8836d57e0ef41f5dc260bb700df8a_2_500x500.jpeg\" class=\"thumbnail onebox-avatar\" width=\"500\" height=\"500\" srcset=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/f/fe4b1d5aafa8836d57e0ef41f5dc260bb700df8a_2_500x500.jpeg, https://socialhub.activitypub.rocks/uploads/default/optimized/2X/f/fe4b1d5aafa8836d57e0ef41f5dc260bb700df8a_2_750x750.jpeg 1.5x, https://socialhub.activitypub.rocks/uploads/default/optimized/2X/f/fe4b1d5aafa8836d57e0ef41f5dc260bb700df8a_2_1000x1000.jpeg 2x\" data-small-upload=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/f/fe4b1d5aafa8836d57e0ef41f5dc260bb700df8a_2_10x10.png\">\n\n<h3><a href=\"https://gitlab.com/linkedopenactors/loa-kvm-adapter\" target=\"_blank\" rel=\"noopener nofollow ugc\">linkedopenactors / loa-kvm-adapter · GitLab</a></h3>\n\n  <p>Bridge between karte von morgen and rdf-pub</p>\n\n\n  </article>\n\n  <div class=\"onebox-metadata\">\n    \n    \n  </div>\n\n  <div style=\"clear: both\"></div>\n</aside>\n\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"2\" />\n           <span class='post-likes'>2 Likes</span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_11' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-06-29T18:23:33Z' class='post-time'>\n                June 29, 2022,  6:23pm\n              </time>\n              <meta itemprop='dateModified' content='2022-06-29T18:23:33Z'>\n          <span itemprop='position'>#11</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p><a href=\"https://api.triplydb.com/s/QP_5D2asB\" rel=\"noopener nofollow ugc\">getting all kvm identifiers that are in the public collection</a><br>\n<a href=\"https://api.triplydb.com/s/_pGFQr6Bo\" rel=\"noopener nofollow ugc\">get some activities</a> → the object names are currently bad!</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_12' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/guysoft'><span itemprop='name'>guysoft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-04T21:23:26Z' class='post-time'>\n                July 4, 2022,  9:23pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-04T21:23:26Z'>\n          <span itemprop='position'>#12</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Hey  planning to come.<br>\nI am currently stuck with fedigoup because</p>\n<ol>\n<li>Mastadon is not showing up webfinger queries from it, but Pleroma does. Posted an issue + reproduction code  and logs here:<br>\n<a href=\"https://github.com/mastodon/mastodon/issues/18741\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Account does not show up in search even when webfinger is called · Issue #18741 · mastodon/mastodon · GitHub</a>\n</li>\n</ol>\n<p>And I can’t seem to get a follow activety to work from Pleroma neither.</p>\n<p>I am not sure if its a fastapi bug or something I am missing. If anyone could help me out that would be really helpful!</p>\n<p>Since the meetup I did manage to deploy guppe groups and reproduce the issue with Pleroma. So we have now logs for that.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"1\" />\n           <span class='post-likes'>1 Like</span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_13' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/Sebastian'><span itemprop='name'>Sebastian</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n            <link itemprop=\"image\" href=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png\">\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-05T19:53:56Z' class='post-time'>\n                July 5, 2022,  7:53pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-06T05:30:11Z'>\n          <span itemprop='position'>#13</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <h3>\n<a name=\"meeting-minutes-1\" class=\"anchor\" href=\"#meeting-minutes-1\"></a>Meeting Minutes</h3>\n<p>Super nice meeting, 7 people attended.<br>\nIn the beginning we talked about an Ontology for the Fediverse<br>\n<a href=\"https://github.com/redaktor/vocab\">Repository</a> and <a href=\"https://redaktor.github.io/vocab\">Pages at redaktor.github.io/vocab in 4 languages</a></p>\n<p>Then we came to the core topic of the meeting and checked out the available alternatives for querying which included<br>\n• SPARQL inkl. json-rql<br>\n• GraphQL<br>\n• JSON-LD Framing <a href=\"https://davidwbarratt.com/node/46\" class=\"inline-onebox\">Using JSON-LD Framing as a Query Language | david w barratt</a><br>\nand we weighted the Pros and Cons.<br>\nThe common intent to use <strong>SPARQL</strong> was clear.</p>\n<p>It took three hours until we had a final text.<br>\nSo, all then remaining 4 people showed (yet) interest in the</p>\n<p><strong>Proposal</strong><br>\nre. the Spec. section <a href=\"https://www.w3.org/TR/activitypub/#actors\">4.1 Actor objects</a> “The endpoints mapping MAY include the following properties:”</p>\n<p>We specify a <code>sparql</code> property in the <code>endpoints</code> object of an Actor for querying the public collection of the AP instance you got the profile from.</p>\n<p>Clients must set the content type as specified in the SPARQL specification (1) or to application/ld+json; profile=“<a href=\"https://www.w3.org/ns/activitystreams\" class=\"inline-onebox\">ActivityStreams 2.0 Terms</a>”.<br>\nIn case of the latter this is expecting a query like</p>\n<pre><code class=\"lang-auto\">{\n    \"id\": \"myID\",\n    \"type\": [\"Query\"],\n    \"@where\" : {\n        \"@type\" : \"Person\", \n        \"birthPlace\" : { \"name\": { \"@contains\" : \"London\" }  }\n    }  \n}\n</code></pre>\n<p>The properties for the type <code>Query</code> are defined in <a href=\"https://json-rql.org/#json-rql\" class=\"inline-onebox\">json-rql - v0.6.2 | json-rql - v0.6.2</a></p>\n<hr>\n<ol>\n<li><a href=\"https://www.w3.org/TR/sparql11-protocol/#query-operation\" class=\"inline-onebox\">SPARQL 1.1 Protocol</a></li>\n</ol>\n<hr>\n<p>I will inform others about the final proposal.<br>\n<em>Notes apart from voting:</em><br>\nIt was said that the querying language used (in this case json-rql as default) should be specified in the <code>Query</code> Object to allow for other JSON-based extensions (e.g. GraphQL).</p>\n<hr>\n<p><em>Other Topics</em></p>\n<p>Later steffen brought up another important topic and so;<br>\nWe did also talked about fedi.camp and doing a Call for Participation.</p>\n<p>The problem will be: Fedi Camp is a huge physical camping and the Internet connection is limited.<br>\nWe will discuss solutions with other organisers like if we do 1 live streaming with 1 camera, 1 mic and 1 projector attached and everyone switches off mobiles. Or if we do async sessions like about Topics or AMAs.<br>\nSo that developers and users from anywhere can come together.<br>\nThen I will write a CFP here.</p>\n<p>—-</p>\n<p>Thanks to anyone who attended, happy holidays anyone.</p>\n<p><img src=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png\" alt=\"boat\" data-base62-sha1=\"dBhAeRz1OwjfXYKYCTg7TN8oU8l\" width=\"64\" height=\"32\"> (boat by hamish)</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"2\" />\n          </div>\n\n      </div>\n      <div id='post_14' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-06T08:02:46Z' class='post-time'>\n                July 6, 2022,  8:02am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-06T08:02:46Z'>\n          <span itemprop='position'>#14</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>I found this by accident today. I haven’t looked at it, but it seems to fit the topic and might be interesting for one or the other <a href=\"https://ontop-vkg.org/guide/\" class=\"inline-onebox\" rel=\"noopener nofollow ugc\">Introduction | Ontop</a></p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_16' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-11T12:54:15Z' class='post-time'>\n                July 11, 2022, 12:54pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-11T12:54:15Z'>\n          <span itemprop='position'>#16</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Hi all,<br>\ncurrently i’ve trouble with the idea in the proposal <img src=\"https://socialhub.activitypub.rocks/images/emoji/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"><br>\nBecause i’m not able to find out the public sparql endpoint, if i make a request with an anonymous user <img src=\"https://socialhub.activitypub.rocks/images/emoji/twitter/wink.png?v=12\" title=\":wink:\" class=\"emoji\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"><br>\nI didn’t have an actor/profile to request.</p>\n<p>See also: <a href=\"https://socialhub.activitypub.rocks/t/standard-for-getting-information-about-a-activitypub-server/2516\" class=\"inline-onebox\">Standard for getting information about a ActivityPub Server</a></p>\n<p>Fredy</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"1\" />\n          </div>\n\n      </div>\n      <div id='post_17' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/Sebastian'><span itemprop='name'>Sebastian</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-12T04:13:15Z' class='post-time'>\n                July 12, 2022,  4:13am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-12T04:13:15Z'>\n          <span itemprop='position'>#17</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Sorry, I do not understand “anonymous user”.<br>\nThe “actor/profile” is the document where you find the sparql endpoint too.<br>\nIt is the same document giving you the outbox/inbox/other endpoints.<br>\nIn ActivityPub every user (<code>Actor</code>) MUST have outbox/inbox …<br>\nSee <a href=\"https://www.w3.org/TR/activitypub/#actor-objects\">#actor-objects</a></p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"1\" />\n          </div>\n\n      </div>\n      <div id='post_18' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-12T05:13:18Z' class='post-time'>\n                July 12, 2022,  5:13am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-12T05:13:18Z'>\n          <span itemprop='position'>#18</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <aside class=\"quote group-redaktor.me\" data-username=\"Sebastian\" data-post=\"17\" data-topic=\"2488\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://socialhub.activitypub.rocks/user_avatar/socialhub.activitypub.rocks/sebastian/40/38_2.png\" class=\"avatar\"> Sebastian:</div>\n<blockquote>\n<p>Sorry, I do not understand “anonymous user”.</p>\n</blockquote>\n</aside>\n<p>A not authenticated user.<br>\nIf i didn’t know an actor on an instance, but want to query the public collection.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"2\" />\n          </div>\n\n      </div>\n      <div id='post_19' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/Sebastian'><span itemprop='name'>Sebastian</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-12T15:16:40Z' class='post-time'>\n                July 12, 2022,  3:16pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-12T15:16:40Z'>\n          <span itemprop='position'>#19</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Ah, I see.<br>\nWell, this is not specified either anywhere. So I can only tell how it will work in redaktor:<br>\nAny instance in redaktor is itself a Group Actor.<br>\nThis means if you ask the  instance root URL it would deliver the ActivityStreams Actor representation in response to<br>\n<code>application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"</code><br>\n…<br>\nThere you have <code>sharedInbox</code>.</p>\n<p>Does that make sense in general or does a better way comes to anyones mind?<br>\nIn my Opinion any instance should be reachable as an Actor anyway.<br>\nThen you can speak in the name of your instance and also do things like federated search.</p>\n<p>PS: sorry for responding slowly, träwelling Deutsche Bahn much this week.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_20' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-12T18:17:54Z' class='post-time'>\n                July 12, 2022,  6:17pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-12T18:17:54Z'>\n          <span itemprop='position'>#20</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Hm, that an AP instance is an actor makes sence.<br>\nBut in my opinion it’s more a <a href=\"https://www.w3.org/TR/activitystreams-vocabulary/#dfn-application\" rel=\"noopener nofollow ugc\">application</a> than a group.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"3\" />\n          </div>\n\n      </div>\n      <div id='post_21' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/Sebastian'><span itemprop='name'>Sebastian</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-12T19:48:10Z' class='post-time'>\n                July 12, 2022,  7:48pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-12T19:48:10Z'>\n          <span itemprop='position'>#21</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Well, redaktor is itself an <code>Application</code> but a redaktor instance is<br>\n<code>{\"type\": [\"Group\", \"Service\"]}</code> –<br>\nJust updated  <a href=\"https://redaktor.github.io/vocab/index.en.html\">the Vocabulary Ontology</a> with the new skohub branch.<br>\nI will document semantics there next week.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"1\" />\n          </div>\n\n      </div>\n      <div id='post_22' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/macgirvin'><span itemprop='name'>macgirvin</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-12T21:47:34Z' class='post-time'>\n                July 12, 2022,  9:47pm\n              </time>\n              <meta itemprop='dateModified' content='2022-07-12T21:47:34Z'>\n          <span itemprop='position'>#22</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>We tossed that idea around for a while here and decided that we shouldn’t put any constraints on the instance actor. Some may wish to present as a Group, some as an Application or Service, possibly even an Organization, and some perhaps as a Person (e,g, the admin).</p>\n<p>We do not provide anything like a “public collection” which enumerates the site members. I’m not opposed to the idea, however if it existed, it must conform to local privacy expectations so people can choose to be unlisted in the site collection and the site admin can choose not to provide it at all.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_23' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-13T05:43:52Z' class='post-time'>\n                July 13, 2022,  5:43am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-13T05:43:52Z'>\n          <span itemprop='position'>#23</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <aside class=\"quote group-redaktor.me\" data-username=\"Sebastian\" data-post=\"21\" data-topic=\"2488\" data-full=\"true\">\n<div class=\"title\">\n<div class=\"quote-controls\"></div>\n<img loading=\"lazy\" alt=\"\" width=\"20\" height=\"20\" src=\"https://socialhub.activitypub.rocks/user_avatar/socialhub.activitypub.rocks/sebastian/40/38_2.png\" class=\"avatar\"> Sebastian:</div>\n<blockquote>\n<p>Well, redaktor is itself an <code>Application</code> but a redaktor instance is<br>\n<code>{\"type\": [\"Group\", \"Service\"]}</code> –<br>\nJust updated <a href=\"https://redaktor.github.io/vocab/index.en.html\" rel=\"noopener nofollow ugc\">the Vocabulary Ontology</a> with the new skohub branch.<br>\nI will document semantics there next week.</p>\n</blockquote>\n</aside>\n<p>If a redaktor instance is not an application, what are the activities of a redaktor application ?</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_25' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-13T05:49:47Z' class='post-time'>\n                July 13, 2022,  5:49am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-13T05:49:47Z'>\n          <span itemprop='position'>#25</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>however, if we want to specify a location where application-instance-related features are to be found, then we would have to agree.</p>\n<p><a class=\"mention\" href=\"/u/macgirvin\">@macgirvin</a> am I understanding you correctly? You mean that an actuator in itself is the wrong place for such application instance-related features?</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"1\" />\n          </div>\n\n      </div>\n      <div id='post_26' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/macgirvin'><span itemprop='name'>macgirvin</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-13T07:09:57Z' class='post-time'>\n                July 13, 2022,  7:09am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-13T07:09:57Z'>\n          <span itemprop='position'>#26</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>In the zot6 and nomad protocols which I also develop, in fact we do place instance-related information in the root or site “actor record”, such as cryptographic methods which are supported by this site. My comment was only that we don’t really care what specific type of actor the site uses to present itself; as sometimes we are dealing with a site that is representative of an organization or group  and sometimes as representative of a person or service or application. It seems silly and wrong to constrain it to be a specific type of actor which may or may not fit the underlying purpose and actual management structure of the site.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"1\" />\n           <span class='post-likes'>1 Like</span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"1\" />\n          </div>\n\n      </div>\n      <div id='post_28' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/naturzukunft'><span itemprop='name'>naturzukunft</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-13T07:27:15Z' class='post-time'>\n                July 13, 2022,  7:27am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-13T07:27:15Z'>\n          <span itemprop='position'>#28</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>what i don’t really like about the actor is that there is no common type actor, but the base is as:object. therefore we can rather badly agree that the instance properties belong to a random actor. But we could introduce another actor “instance”, which has instance properties. anyone can then return any actor under a defined url, e.g. root, which is also of the type instance!</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"0\" />\n           <span class='post-likes'></span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"2\" />\n          </div>\n\n      </div>\n      <div id='post_29' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/macgirvin'><span itemprop='name'>macgirvin</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-13T09:02:50Z' class='post-time'>\n                July 13, 2022,  9:02am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-13T09:02:50Z'>\n          <span itemprop='position'>#29</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>What we’ve been doing is to put a site actor at the root of the domain and the let the person/s running the site decide what else they want to do with it and how it will interact.  Those aren’t our choices to make.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"1\" />\n           <span class='post-likes'>1 Like</span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n      <div id='post_30' itemscope itemtype='http://schema.org/DiscussionForumPosting' class='topic-body crawler-post'>\n        <div class='crawler-post-meta'>\n          <div itemprop='publisher' itemscope itemtype=\"http://schema.org/Organization\">\n            <meta itemprop='name' content='Petites Singularités'>\n              <div itemprop='logo' itemscope itemtype=\"http://schema.org/ImageObject\">\n                <meta itemprop='url' content='https://socialhub.activitypub.rocks/uploads/default/original/1X/4d2bcc2cd17698f8d3efb8ffaa6983d11bbf3229.png'>\n              </div>\n          </div>\n          <span class=\"creator\" itemprop=\"author\" itemscope itemtype=\"http://schema.org/Person\">\n            <a itemprop=\"url\" href='https://socialhub.activitypub.rocks/u/Sebastian'><span itemprop='name'>Sebastian</span></a>\n            \n          </span>\n\n          <link itemprop=\"mainEntityOfPage\" href=\"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488\">\n\n            <link itemprop=\"image\" href=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42.png\">\n\n          <span class=\"crawler-post-infos\">\n              <time itemprop='datePublished' datetime='2022-07-13T09:11:29Z' class='post-time'>\n                July 13, 2022,  9:11am\n              </time>\n              <meta itemprop='dateModified' content='2022-07-13T09:27:38Z'>\n          <span itemprop='position'>#30</span>\n          </span>\n        </div>\n        <div class='post' itemprop='articleBody'>\n          <p>Agreed that it makes no sense to specify what Actor-type any groups or commons <em>should</em> be.<br>\nAlso keep in mind that <em>any</em> Object can be an Actor in ActivityPub.<br>\nThis is super important and it is used in various implementations where e.g. an <code>Event</code> can be an Actor too and send for example a reminder etc.</p>\n<p>In the <a href=\"http://redaktor.github.io/vocab/index.en.html\">Ontology</a> the <code>Actor</code> is <strong>just</strong> a skos:Concept (for most used Actor-types) but not an owl:Class [visually no bracket-icon] …<br>\nMaybe this is a bit more intuitive.</p>\n<p>An alternative to constraints in types, we could simply propose special types for<br>\n<code>Actor</code> and <code>Instance</code> which could be used alongside the others.</p>\n<p><div class=\"lightbox-wrapper\"><a class=\"lightbox\" href=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42.png\" data-download-href=\"https://socialhub.activitypub.rocks/uploads/default/712c65ad3f9d533df8d2c4ae83f2f90041917d42\" title=\"Bildschirmfoto 2022-07-13 um 11.13.45\"><img src=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_254x500.png\" alt=\"Bildschirmfoto 2022-07-13 um 11.13.45\" data-base62-sha1=\"g9b4D1Jwe9Gjtp4WZe3BFAC62QO\" width=\"254\" height=\"500\" srcset=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_254x500.png, https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_381x750.png 1.5x, https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_508x1000.png 2x\" data-small-upload=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_10x10.png\"><div class=\"meta\">\n<svg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"><use href=\"#far-image\"></use></svg><span class=\"filename\">Bildschirmfoto 2022-07-13 um 11.13.45</span><span class=\"informations\">556×1094 63.7 KB</span><svg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"><use href=\"#discourse-expand\"></use></svg>\n</div></a></div></p>\n<p>I think there also is a common misconception between what machines and users must “understand” in ActivityPub.<br>\nThis is why I asked Evan, the author of ActivityStreams if we could do a meeting or fedi.camp session because between AS and AP him and James Snell had nice discussions about how to describe potential actions to other machines.<br>\nThis included also plain http workflows but scoped to ActivityPub:<br>\nBasically the other party only needs a resulting <code>Action</code> with a <code>name</code> and maybe an <code>icon</code>.<br>\nIt can then present an according button under the <code>Object</code> with an inReplyTo-Action …<br>\nThere is nothing to understand how this <code>Activity</code> “works”, it is just a special reply to send.</p>\n        </div>\n\n        <meta itemprop='headline' content='Developers Meeting 7 : A standard way to query in ActivityPub'>\n\n        <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n           <meta itemprop=\"interactionType\" content=\"http://schema.org/LikeAction\"/>\n           <meta itemprop=\"userInteractionCount\" content=\"1\" />\n           <span class='post-likes'>1 Like</span>\n         </div>\n\n         <div itemprop=\"interactionStatistic\" itemscope itemtype=\"http://schema.org/InteractionCounter\">\n            <meta itemprop=\"interactionType\" content=\"http://schema.org/CommentAction\"/>\n            <meta itemprop=\"userInteractionCount\" content=\"0\" />\n          </div>\n\n      </div>\n\n    <div role='navigation' itemscope itemtype='http://schema.org/SiteNavigationElement' class=\"topic-body crawler-post\">\n        <span itemprop='name'><b><a rel=\"next\" itemprop=\"url\" href=\"/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488?page=2\">next page →</a></b></span>\n    </div>\n\n\n\n\n\n    </div>\n    <footer class=\"container wrap\">\n  <nav class='crawler-nav'>\n    <ul>\n      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>\n        <span itemprop='name'>\n          <a href='/' itemprop=\"url\">Home </a>\n        </span>\n      </li>\n      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>\n        <span itemprop='name'>\n          <a href='/categories' itemprop=\"url\">Categories </a>\n        </span>\n      </li>\n      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>\n        <span itemprop='name'>\n          <a href='/guidelines' itemprop=\"url\">FAQ/Guidelines </a>\n        </span>\n      </li>\n      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>\n        <span itemprop='name'>\n          <a href='/tos' itemprop=\"url\">Terms of Service </a>\n        </span>\n      </li>\n      <li itemscope itemtype='http://schema.org/SiteNavigationElement'>\n        <span itemprop='name'>\n          <a href='/privacy' itemprop=\"url\">Privacy Policy </a>\n        </span>\n      </li>\n    </ul>\n  </nav>\n  <p class='powered-by-link'>Powered by <a href=\"https://www.discourse.org\">Discourse</a>, best viewed with JavaScript enabled</p>\n</footer>\n\n    \n    \n  </body>\n  \n</html>\n","oembed":false,"readabilityObject":{"title":"Developers Meeting 7 : A standard way to query in ActivityPub","content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"main-outlet\" role=\"main\">\n        \n\n  \n\n\n      <div id=\"post_8\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        <div>\n          \n          \n\n\n          <p><span>\n              <time itemprop=\"datePublished\" datetime=\"2022-06-14T22:26:49Z\">\n                June 14, 2022, 10:26pm\n              </time>\n              <meta itemprop=\"dateModified\" content=\"2022-06-14T22:26:49Z\">\n          <span itemprop=\"position\">#8</span>\n          </span>\n        </p></div>\n        <div itemprop=\"articleBody\">\n          <blockquote>\n<p>What do people need to query that isn’t in the AP spec (or other community specs)?</p>\n</blockquote>\n<p>Pops up nearly each day, so will ask the next.<br>\nPersonally same things than e.g. in twitter<br>\n“posted before/after/between”<br>\n“posted from/to”<br>\n“only type=Image”<br>\n“context about Harold and Maude or Robert Frank”<br>\netc.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n          <meta itemprop=\"keywords\" content=\"\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_9\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          \n<p>I’m using SPARQL! rdf-pub is supporting SPARQL.</p>\n<p>I’m struggeling with some issues in the moment and currently the auth server is down ;-(<br>\nBut in principle you can query the public collection.<br>\nThere is certainly still a lot to learn and, if necessary, to optimise.<br>\nFrom an authentication point of view, it will be exciting.<br>\nI’ll have to test that soon, but at the moment I’m still testing the public collection query.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_10\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>The <a href=\"https://www.kartevonmorgen.org/\" rel=\"noopener nofollow ugc\">karte von morgen</a> (kvm) adapter, that is doing a one way sync  kvm → rdf-pub uses “hardcore” SPARQL to check, what entries are already in rdf-pub.</p>\n\n\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      \n      <div id=\"post_12\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>Hey  planning to come.<br>\nI am currently stuck with fedigoup because</p>\n<ol>\n<li>Mastadon is not showing up webfinger queries from it, but Pleroma does. Posted an issue + reproduction code  and logs here:<br>\n<a href=\"https://github.com/mastodon/mastodon/issues/18741\" rel=\"noopener nofollow ugc\">Account does not show up in search even when webfinger is called · Issue #18741 · mastodon/mastodon · GitHub</a>\n</li>\n</ol>\n<p>And I can’t seem to get a follow activety to work from Pleroma neither.</p>\n<p>I am not sure if its a fastapi bug or something I am missing. If anyone could help me out that would be really helpful!</p>\n<p>Since the meetup I did manage to deploy guppe groups and reproduce the issue with Pleroma. So we have now logs for that.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_13\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <h3>\n<a name=\"meeting-minutes-1\" href=\"#meeting-minutes-1\"></a>Meeting Minutes</h3>\n<p>Super nice meeting, 7 people attended.<br>\nIn the beginning we talked about an Ontology for the Fediverse<br>\n<a href=\"https://github.com/redaktor/vocab\">Repository</a> and <a href=\"https://redaktor.github.io/vocab\">Pages at redaktor.github.io/vocab in 4 languages</a></p>\n<p>Then we came to the core topic of the meeting and checked out the available alternatives for querying which included<br>\n• SPARQL inkl. json-rql<br>\n• GraphQL<br>\n• JSON-LD Framing <a href=\"https://davidwbarratt.com/node/46\">Using JSON-LD Framing as a Query Language | david w barratt</a><br>\nand we weighted the Pros and Cons.<br>\nThe common intent to use <strong>SPARQL</strong> was clear.</p>\n<p>It took three hours until we had a final text.<br>\nSo, all then remaining 4 people showed (yet) interest in the</p>\n<p><strong>Proposal</strong><br>\nre. the Spec. section <a href=\"https://www.w3.org/TR/activitypub/#actors\">4.1 Actor objects</a> “The endpoints mapping MAY include the following properties:”</p>\n<p>We specify a <code>sparql</code> property in the <code>endpoints</code> object of an Actor for querying the public collection of the AP instance you got the profile from.</p>\n<p>Clients must set the content type as specified in the SPARQL specification (1) or to application/ld+json; profile=“<a href=\"https://www.w3.org/ns/activitystreams\">ActivityStreams 2.0 Terms</a>”.<br>\nIn case of the latter this is expecting a query like</p>\n<pre><code>{\n    \"id\": \"myID\",\n    \"type\": [\"Query\"],\n    \"@where\" : {\n        \"@type\" : \"Person\", \n        \"birthPlace\" : { \"name\": { \"@contains\" : \"London\" }  }\n    }  \n}\n</code></pre>\n<p>The properties for the type <code>Query</code> are defined in <a href=\"https://json-rql.org/#json-rql\">json-rql - v0.6.2 | json-rql - v0.6.2</a></p>\n<hr>\n<ol>\n<li><a href=\"https://www.w3.org/TR/sparql11-protocol/#query-operation\">SPARQL 1.1 Protocol</a></li>\n</ol>\n<hr>\n<p>I will inform others about the final proposal.<br>\n<em>Notes apart from voting:</em><br>\nIt was said that the querying language used (in this case json-rql as default) should be specified in the <code>Query</code> Object to allow for other JSON-based extensions (e.g. GraphQL).</p>\n<hr>\n<p><em>Other Topics</em></p>\n<p>Later steffen brought up another important topic and so;<br>\nWe did also talked about fedi.camp and doing a Call for Participation.</p>\n<p>The problem will be: Fedi Camp is a huge physical camping and the Internet connection is limited.<br>\nWe will discuss solutions with other organisers like if we do 1 live streaming with 1 camera, 1 mic and 1 projector attached and everyone switches off mobiles. Or if we do async sessions like about Topics or AMAs.<br>\nSo that developers and users from anywhere can come together.<br>\nThen I will write a CFP here.</p>\n<p>—-</p>\n<p>Thanks to anyone who attended, happy holidays anyone.</p>\n<p><img src=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png\" alt=\"boat\" data-base62-sha1=\"dBhAeRz1OwjfXYKYCTg7TN8oU8l\" width=\"64\" height=\"32\"> (boat by hamish)</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_14\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>I found this by accident today. I haven’t looked at it, but it seems to fit the topic and might be interesting for one or the other <a href=\"https://ontop-vkg.org/guide/\" rel=\"noopener nofollow ugc\">Introduction | Ontop</a></p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_16\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>Hi all,<br>\ncurrently i’ve trouble with the idea in the proposal <img src=\"https://socialhub.activitypub.rocks/images/emoji/twitter/wink.png?v=12\" title=\":wink:\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"><br>\nBecause i’m not able to find out the public sparql endpoint, if i make a request with an anonymous user <img src=\"https://socialhub.activitypub.rocks/images/emoji/twitter/wink.png?v=12\" title=\":wink:\" alt=\":wink:\" loading=\"lazy\" width=\"20\" height=\"20\"><br>\nI didn’t have an actor/profile to request.</p>\n<p>See also: <a href=\"https://socialhub.activitypub.rocks/t/standard-for-getting-information-about-a-activitypub-server/2516\">Standard for getting information about a ActivityPub Server</a></p>\n<p>Fredy</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_17\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>Sorry, I do not understand “anonymous user”.<br>\nThe “actor/profile” is the document where you find the sparql endpoint too.<br>\nIt is the same document giving you the outbox/inbox/other endpoints.<br>\nIn ActivityPub every user (<code>Actor</code>) MUST have outbox/inbox …<br>\nSee <a href=\"https://www.w3.org/TR/activitypub/#actor-objects\">#actor-objects</a></p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_18\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          \n<p>A not authenticated user.<br>\nIf i didn’t know an actor on an instance, but want to query the public collection.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_19\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>Ah, I see.<br>\nWell, this is not specified either anywhere. So I can only tell how it will work in redaktor:<br>\nAny instance in redaktor is itself a Group Actor.<br>\nThis means if you ask the  instance root URL it would deliver the ActivityStreams Actor representation in response to<br>\n<code>application/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"</code><br>\n…<br>\nThere you have <code>sharedInbox</code>.</p>\n<p>Does that make sense in general or does a better way comes to anyones mind?<br>\nIn my Opinion any instance should be reachable as an Actor anyway.<br>\nThen you can speak in the name of your instance and also do things like federated search.</p>\n<p>PS: sorry for responding slowly, träwelling Deutsche Bahn much this week.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_20\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>Hm, that an AP instance is an actor makes sence.<br>\nBut in my opinion it’s more a <a href=\"https://www.w3.org/TR/activitystreams-vocabulary/#dfn-application\" rel=\"noopener nofollow ugc\">application</a> than a group.</p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_21\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>Well, redaktor is itself an <code>Application</code> but a redaktor instance is<br>\n<code>{\"type\": [\"Group\", \"Service\"]}</code> –<br>\nJust updated  <a href=\"https://redaktor.github.io/vocab/index.en.html\">the Vocabulary Ontology</a> with the new skohub branch.<br>\nI will document semantics there next week.</p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_22\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>We tossed that idea around for a while here and decided that we shouldn’t put any constraints on the instance actor. Some may wish to present as a Group, some as an Application or Service, possibly even an Organization, and some perhaps as a Person (e,g, the admin).</p>\n<p>We do not provide anything like a “public collection” which enumerates the site members. I’m not opposed to the idea, however if it existed, it must conform to local privacy expectations so people can choose to be unlisted in the site collection and the site admin can choose not to provide it at all.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_23\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          \n<p>If a redaktor instance is not an application, what are the activities of a redaktor application ?</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_25\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>however, if we want to specify a location where application-instance-related features are to be found, then we would have to agree.</p>\n<p><a href=\"/u/macgirvin\">@macgirvin</a> am I understanding you correctly? You mean that an actuator in itself is the wrong place for such application instance-related features?</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_26\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>In the zot6 and nomad protocols which I also develop, in fact we do place instance-related information in the root or site “actor record”, such as cryptographic methods which are supported by this site. My comment was only that we don’t really care what specific type of actor the site uses to present itself; as sometimes we are dealing with a site that is representative of an organization or group  and sometimes as representative of a person or service or application. It seems silly and wrong to constrain it to be a specific type of actor which may or may not fit the underlying purpose and actual management structure of the site.</p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_28\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>what i don’t really like about the actor is that there is no common type actor, but the base is as:object. therefore we can rather badly agree that the instance properties belong to a random actor. But we could introduce another actor “instance”, which has instance properties. anyone can then return any actor under a defined url, e.g. root, which is also of the type instance!</p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_29\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <p>What we’ve been doing is to put a site actor at the root of the domain and the let the person/s running the site decide what else they want to do with it and how it will interact.  Those aren’t our choices to make.</p>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n      <div id=\"post_30\" itemscope=\"\" itemtype=\"http://schema.org/DiscussionForumPosting\">\n        \n        <div itemprop=\"articleBody\">\n          <p>Agreed that it makes no sense to specify what Actor-type any groups or commons <em>should</em> be.<br>\nAlso keep in mind that <em>any</em> Object can be an Actor in ActivityPub.<br>\nThis is super important and it is used in various implementations where e.g. an <code>Event</code> can be an Actor too and send for example a reminder etc.</p>\n<p>In the <a href=\"http://redaktor.github.io/vocab/index.en.html\">Ontology</a> the <code>Actor</code> is <strong>just</strong> a skos:Concept (for most used Actor-types) but not an owl:Class [visually no bracket-icon] …<br>\nMaybe this is a bit more intuitive.</p>\n<p>An alternative to constraints in types, we could simply propose special types for<br>\n<code>Actor</code> and <code>Instance</code> which could be used alongside the others.</p>\n<div><a href=\"https://socialhub.activitypub.rocks/uploads/default/original/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42.png\" data-download-href=\"https://socialhub.activitypub.rocks/uploads/default/712c65ad3f9d533df8d2c4ae83f2f90041917d42\" title=\"Bildschirmfoto 2022-07-13 um 11.13.45\"><img src=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_254x500.png\" alt=\"Bildschirmfoto 2022-07-13 um 11.13.45\" data-base62-sha1=\"g9b4D1Jwe9Gjtp4WZe3BFAC62QO\" width=\"254\" height=\"500\" srcset=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_254x500.png, https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_381x750.png 1.5x, https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_508x1000.png 2x\" data-small-upload=\"https://socialhub.activitypub.rocks/uploads/default/optimized/2X/7/712c65ad3f9d533df8d2c4ae83f2f90041917d42_2_10x10.png\"></a></div>\n<p>I think there also is a common misconception between what machines and users must “understand” in ActivityPub.<br>\nThis is why I asked Evan, the author of ActivityStreams if we could do a meeting or fedi.camp session because between AS and AP him and James Snell had nice discussions about how to describe potential actions to other machines.<br>\nThis included also plain http workflows but scoped to ActivityPub:<br>\nBasically the other party only needs a resulting <code>Action</code> with a <code>name</code> and maybe an <code>icon</code>.<br>\nIt can then present an according button under the <code>Object</code> with an inReplyTo-Action …<br>\nThere is nothing to understand how this <code>Activity</code> “works”, it is just a special reply to send.</p>\n        </div>\n\n        <meta itemprop=\"headline\" content=\"Developers Meeting 7 : A standard way to query in ActivityPub\">\n\n        \n\n         \n\n      </div>\n\n    \n\n\n\n\n\n    </div></div>","textContent":"\n        \n\n  \n\n\n      \n        \n          \n          \n\n\n          \n              \n                June 14, 2022, 10:26pm\n              \n              \n          #8\n          \n        \n        \n          \nWhat do people need to query that isn’t in the AP spec (or other community specs)?\n\nPops up nearly each day, so will ask the next.\nPersonally same things than e.g. in twitter\n“posted before/after/between”\n“posted from/to”\n“only type=Image”\n“context about Harold and Maude or Robert Frank”\netc.\n        \n\n        \n          \n\n        \n\n         \n\n      \n      \n        \n        \n          \nI’m using SPARQL! rdf-pub is supporting SPARQL.\nI’m struggeling with some issues in the moment and currently the auth server is down ;-(\nBut in principle you can query the public collection.\nThere is certainly still a lot to learn and, if necessary, to optimise.\nFrom an authentication point of view, it will be exciting.\nI’ll have to test that soon, but at the moment I’m still testing the public collection query.\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          The karte von morgen (kvm) adapter, that is doing a one way sync  kvm → rdf-pub uses “hardcore” SPARQL to check, what entries are already in rdf-pub.\n\n\n        \n\n        \n\n        \n\n         \n\n      \n      \n      \n        \n        \n          Hey  planning to come.\nI am currently stuck with fedigoup because\n\nMastadon is not showing up webfinger queries from it, but Pleroma does. Posted an issue + reproduction code  and logs here:\nAccount does not show up in search even when webfinger is called · Issue #18741 · mastodon/mastodon · GitHub\n\n\nAnd I can’t seem to get a follow activety to work from Pleroma neither.\nI am not sure if its a fastapi bug or something I am missing. If anyone could help me out that would be really helpful!\nSince the meetup I did manage to deploy guppe groups and reproduce the issue with Pleroma. So we have now logs for that.\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          \nMeeting Minutes\nSuper nice meeting, 7 people attended.\nIn the beginning we talked about an Ontology for the Fediverse\nRepository and Pages at redaktor.github.io/vocab in 4 languages\nThen we came to the core topic of the meeting and checked out the available alternatives for querying which included\n• SPARQL inkl. json-rql\n• GraphQL\n• JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt\nand we weighted the Pros and Cons.\nThe common intent to use SPARQL was clear.\nIt took three hours until we had a final text.\nSo, all then remaining 4 people showed (yet) interest in the\nProposal\nre. the Spec. section 4.1 Actor objects “The endpoints mapping MAY include the following properties:”\nWe specify a sparql property in the endpoints object of an Actor for querying the public collection of the AP instance you got the profile from.\nClients must set the content type as specified in the SPARQL specification (1) or to application/ld+json; profile=“ActivityStreams 2.0 Terms”.\nIn case of the latter this is expecting a query like\n{\n    \"id\": \"myID\",\n    \"type\": [\"Query\"],\n    \"@where\" : {\n        \"@type\" : \"Person\", \n        \"birthPlace\" : { \"name\": { \"@contains\" : \"London\" }  }\n    }  \n}\n\nThe properties for the type Query are defined in json-rql - v0.6.2 | json-rql - v0.6.2\n\n\nSPARQL 1.1 Protocol\n\n\nI will inform others about the final proposal.\nNotes apart from voting:\nIt was said that the querying language used (in this case json-rql as default) should be specified in the Query Object to allow for other JSON-based extensions (e.g. GraphQL).\n\nOther Topics\nLater steffen brought up another important topic and so;\nWe did also talked about fedi.camp and doing a Call for Participation.\nThe problem will be: Fedi Camp is a huge physical camping and the Internet connection is limited.\nWe will discuss solutions with other organisers like if we do 1 live streaming with 1 camera, 1 mic and 1 projector attached and everyone switches off mobiles. Or if we do async sessions like about Topics or AMAs.\nSo that developers and users from anywhere can come together.\nThen I will write a CFP here.\n—-\nThanks to anyone who attended, happy holidays anyone.\n (boat by hamish)\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        I found this by accident today. I haven’t looked at it, but it seems to fit the topic and might be interesting for one or the other Introduction | Ontop\n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          Hi all,\ncurrently i’ve trouble with the idea in the proposal \nBecause i’m not able to find out the public sparql endpoint, if i make a request with an anonymous user \nI didn’t have an actor/profile to request.\nSee also: Standard for getting information about a ActivityPub Server\nFredy\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        Sorry, I do not understand “anonymous user”.\nThe “actor/profile” is the document where you find the sparql endpoint too.\nIt is the same document giving you the outbox/inbox/other endpoints.\nIn ActivityPub every user (Actor) MUST have outbox/inbox …\nSee #actor-objects\n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          \nA not authenticated user.\nIf i didn’t know an actor on an instance, but want to query the public collection.\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          Ah, I see.\nWell, this is not specified either anywhere. So I can only tell how it will work in redaktor:\nAny instance in redaktor is itself a Group Actor.\nThis means if you ask the  instance root URL it would deliver the ActivityStreams Actor representation in response to\napplication/ld+json; profile=\"https://www.w3.org/ns/activitystreams\"\n…\nThere you have sharedInbox.\nDoes that make sense in general or does a better way comes to anyones mind?\nIn my Opinion any instance should be reachable as an Actor anyway.\nThen you can speak in the name of your instance and also do things like federated search.\nPS: sorry for responding slowly, träwelling Deutsche Bahn much this week.\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        Hm, that an AP instance is an actor makes sence.\nBut in my opinion it’s more a application than a group.\n\n        \n\n        \n\n         \n\n      \n      \n        \n        Well, redaktor is itself an Application but a redaktor instance is\n{\"type\": [\"Group\", \"Service\"]} –\nJust updated  the Vocabulary Ontology with the new skohub branch.\nI will document semantics there next week.\n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          We tossed that idea around for a while here and decided that we shouldn’t put any constraints on the instance actor. Some may wish to present as a Group, some as an Application or Service, possibly even an Organization, and some perhaps as a Person (e,g, the admin).\nWe do not provide anything like a “public collection” which enumerates the site members. I’m not opposed to the idea, however if it existed, it must conform to local privacy expectations so people can choose to be unlisted in the site collection and the site admin can choose not to provide it at all.\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          \nIf a redaktor instance is not an application, what are the activities of a redaktor application ?\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          however, if we want to specify a location where application-instance-related features are to be found, then we would have to agree.\n@macgirvin am I understanding you correctly? You mean that an actuator in itself is the wrong place for such application instance-related features?\n        \n\n        \n\n        \n\n         \n\n      \n      \n        \n        In the zot6 and nomad protocols which I also develop, in fact we do place instance-related information in the root or site “actor record”, such as cryptographic methods which are supported by this site. My comment was only that we don’t really care what specific type of actor the site uses to present itself; as sometimes we are dealing with a site that is representative of an organization or group  and sometimes as representative of a person or service or application. It seems silly and wrong to constrain it to be a specific type of actor which may or may not fit the underlying purpose and actual management structure of the site.\n\n        \n\n        \n\n         \n\n      \n      \n        \n        what i don’t really like about the actor is that there is no common type actor, but the base is as:object. therefore we can rather badly agree that the instance properties belong to a random actor. But we could introduce another actor “instance”, which has instance properties. anyone can then return any actor under a defined url, e.g. root, which is also of the type instance!\n\n        \n\n        \n\n         \n\n      \n      \n        \n        What we’ve been doing is to put a site actor at the root of the domain and the let the person/s running the site decide what else they want to do with it and how it will interact.  Those aren’t our choices to make.\n\n        \n\n        \n\n         \n\n      \n      \n        \n        \n          Agreed that it makes no sense to specify what Actor-type any groups or commons should be.\nAlso keep in mind that any Object can be an Actor in ActivityPub.\nThis is super important and it is used in various implementations where e.g. an Event can be an Actor too and send for example a reminder etc.\nIn the Ontology the Actor is just a skos:Concept (for most used Actor-types) but not an owl:Class [visually no bracket-icon] …\nMaybe this is a bit more intuitive.\nAn alternative to constraints in types, we could simply propose special types for\nActor and Instance which could be used alongside the others.\n\nI think there also is a common misconception between what machines and users must “understand” in ActivityPub.\nThis is why I asked Evan, the author of ActivityStreams if we could do a meeting or fedi.camp session because between AS and AP him and James Snell had nice discussions about how to describe potential actions to other machines.\nThis included also plain http workflows but scoped to ActivityPub:\nBasically the other party only needs a resulting Action with a name and maybe an icon.\nIt can then present an according button under the Object with an inReplyTo-Action …\nThere is nothing to understand how this Activity “works”, it is just a special reply to send.\n        \n\n        \n\n        \n\n         \n\n      \n\n    \n\n\n\n\n\n    ","length":10577,"excerpt":"Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...","byline":"Sebastian","dir":null,"siteName":"SocialHub","lang":"en"},"finalizedMeta":{"title":"Developers Meeting 7 : A standard way to query in ActivityPub","description":"Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...","author":false,"creator":"","publisher":false,"date":"2022-11-07T04:53:24.185Z","topics":[]},"jsonLd":{"@type":false,"headline":false,"description":false,"image":[],"mainEntityOfPage":{"@type":false,"@id":false},"datePublished":false,"dateModified":false,"isAccessibleForFree":false,"isPartOf":{"@type":[],"name":false,"productID":false},"discussionUrl":false,"license":false,"author":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false},"publisher":{"@type":false,"name":false,"description":false,"sameAs":false,"logo":{"@type":false,"url":false},"publishingPrinciples":false},"editor":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false}},"twitterObj":false,"status":200,"metadata":{"author":false,"title":"Developers Meeting 7 : A standard way to query in ActivityPub - #13 by Sebastian - SocialHub","description":"Meeting Minutes here\n\n\nFollowing Developers Meeting 6 : Groups and Improving C2S (ended) : \n\nPlease note: Due to upcoming holidays it will be the first TUE of the month, July 5.\n(not the second one) \n2022-07-05T16:00:00&hellip;","canonical":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488","keywords":[],"image":"https://socialhub.activitypub.rocks/user_avatar/socialhub.activitypub.rocks/sebastian/40/38_2.png","firstParagraph":"What do people need to query that isn’t in the AP spec (or other community specs)?"},"dublinCore":{},"opengraph":{"title":"Developers Meeting 7 : A standard way to query in ActivityPub","description":"Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...","url":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13","site_name":"SocialHub","locale":false,"type":"website","typeObject":{"published_time":false,"modified_time":false,"author":false,"publisher":false,"section":false,"tag":[]},"image":"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png","ignore_canonical":"true"},"twitter":{"site":false,"description":"Meeting Minutes Super nice meeting, 7 people attended.  In the beginning we talked about an Ontology for the Fediverse  Repository and Pages at redaktor.github.io/vocab in 4 languages  Then we came to the core topic of the meeting and checked out the available alternatives for querying which included  • SPARQL inkl. json-rql  • GraphQL  • JSON-LD Framing Using JSON-LD Framing as a Query Language | david w barratt  and we weighted the Pros and Cons.  The common intent to use SPARQL was clear.  I...","card":"summary","creator":false,"title":"Developers Meeting 7 : A standard way to query in ActivityPub","image":"https://socialhub.activitypub.rocks/uploads/default/original/2X/5/5f532f9291d50a12af7aa234dbe6a93c6466a4c5.png","url":"https://socialhub.activitypub.rocks/t/developers-meeting-7-a-standard-way-to-query-in-activitypub/2488/13"},"archivedData":{"link":false,"wayback":false}}}