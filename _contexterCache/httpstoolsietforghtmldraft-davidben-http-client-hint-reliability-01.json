{"initialLink":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","sanitizedLink":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","finalLink":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","htmlEmbed":"<script>window.contexterSetup=window.contexterSetup||function(){window.contexterSetupComplete=!0;class ContexterLink extends HTMLAnchorElement{constructor(){super()}connectedCallback(){this.setAttribute(\"target\",\"_blank\")}}customElements.define(\"contexter-link\",ContexterLink,{extends:\"a\"}),customElements.define(\"contexter-inner\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__inner\"}}),customElements.define(\"contexter-thumbnail\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__thumbnail\"}}),customElements.define(\"contexter-byline\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__byline\"}}),customElements.define(\"contexter-keywordset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__keywordset\"}}),customElements.define(\"contexter-linkset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__linkset\"}}),customElements.define(\"contexter-meta\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__meta\"}}),customElements.define(\"contexter-summary\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"p-summary entry-summary\"}}),customElements.define(\"contexter-box-head\",class extends HTMLElement{constructor(){super()}connectedCallback(){this.className=\"contexter-box__head\"}}),customElements.define(\"contexter-box-inner\",class extends HTMLElement{constructor(){super()}connectedCallback(){}});class ContexterBox extends HTMLElement{constructor(){super(),this.first=!0,this.shadow=this.attachShadow({mode:\"open\"})}connectedCallback(){if(this.first){this.first=!1;var style=document.createElement(\"style\"),lightDomStyle=(style.innerHTML=`:host {--background: #f5f6f7;--border: darkblue;--blue: #0000ee;--font-color: black;--inner-border: black;font-family: Franklin,Arial,Helvetica,sans-serif;font-size: 14px;background: var(--background);width: 600px;color: var(--font-color);min-height: 90px;display: block;padding: 8px;border: 1px solid var(--border);cursor: pointer;box-sizing: border-box;margin: 6px;contain: content;margin: 6px auto;}// can only select top-level nodes with slotted::slotted(*) {max-width: 100%;display:block;}::slotted([slot=thumbnail]) {max-width: 100%;display:block;}::slotted([slot=header]) {width: 100%;font-size: 1.25rem;font-weight: bold;display:block;margin-bottom: 6px;}::slotted([slot=author]) {max-width: 50%;font-size: 12px;display:inline-block;float: left;}::slotted([slot=time]) {max-width: 50%;font-size: 12px;display:inline-block;float: right;}::slotted([slot=summary]) {width: 100%;margin-top: 6px;padding: 10px 2px;border-top: 1px solid var(--inner-border);font-size: 15px;display:inline-block;margin-bottom: 6px;}contexter-meta {height: auto;margin-bottom: 4px;width: 100%;display: grid;position: relative;min-height: 16px;grid-template-columns: repeat(2, 1fr);}::slotted([slot=keywords]) {width: 80%;padding: 2px 4px;border-top: 1px solid var(--inner-border);font-size: 11px;display: block;float: right;font-style: italic;text-align: right;grid-column: 2/2;grid-row: 1;align-self: end;justify-self: end;}::slotted([slot=keywords]):empty {border-top: 0px solid var(--inner-border);}::slotted([slot=archive-link]) {font-size: 1em;display: inline;}::slotted([slot=archive-link])::after {content: \"|\";display: inline;color: var(--font-color);text-decoration: none;margin: 0 .5em;}::slotted([slot=read-link]) {font-size: 1em;display: inline;}contexter-linkset {width: 80%;padding: 2px 4px;font-size: 13px;float: left;font-weight: bold;grid-row: 1;grid-column: 1/2;align-self: end;justify-self: start;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {:host {width: 310px;}}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){:host {--background: #354150;--border: #1f2b37;--blue: #55b0ff;--font-color: #ffffff;--inner-border: #787a7c;background: var(--background);border: 1px solid var(--border)}}`,document.createElement(\"style\"));lightDomStyle.innerHTML=`contexter-box {contain: content;}contexter-box .read-link {font-weight: bold;}contexter-box a {color: #0000ee;}contexter-box img {width: 100%;border: 0;padding: 0;margin: 0;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {...}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){contexter-box a {color: #55b0ff;}}`,this.appendChild(lightDomStyle),this.shadow.appendChild(style);const innerContainer=document.createElement(\"contexter-box-inner\"),innerSlotThumbnail=(this.shadow.appendChild(innerContainer),document.createElement(\"slot\")),innerSlotHeader=(innerSlotThumbnail.name=\"thumbnail\",innerContainer.appendChild(innerSlotThumbnail),document.createElement(\"slot\")),innerSlotAuthor=(innerSlotHeader.name=\"header\",innerContainer.appendChild(innerSlotHeader),document.createElement(\"slot\")),innerSlotTime=(innerSlotAuthor.name=\"author\",innerContainer.appendChild(innerSlotAuthor),document.createElement(\"slot\")),innerSlotSummary=(innerSlotTime.name=\"time\",innerContainer.appendChild(innerSlotTime),document.createElement(\"slot\")),metaContainer=(innerSlotSummary.name=\"summary\",innerContainer.appendChild(innerSlotSummary),document.createElement(\"contexter-meta\")),innerSlotInfo=(innerContainer.appendChild(metaContainer),document.createElement(\"slot\")),linkContainer=(innerSlotInfo.name=\"keywords\",metaContainer.appendChild(innerSlotInfo),document.createElement(\"contexter-linkset\")),innerSlotArchiveLink=(metaContainer.appendChild(linkContainer),document.createElement(\"slot\")),innerSlotReadLink=(innerSlotArchiveLink.name=\"archive-link\",linkContainer.appendChild(innerSlotArchiveLink),document.createElement(\"slot\"));innerSlotReadLink.name=\"read-link\",linkContainer.appendChild(innerSlotReadLink),this.className=\"contexter-box\",this.onclick=e=>{if(!e.target.className.includes(\"read-link\")&&!e.target.className.includes(\"title-link\")){const mainLinks=this.querySelectorAll(\"a.main-link\");mainLinks[0].click()}}}}}customElements.define(\"contexter-box\",ContexterBox)},window.contexterSetupComplete||window.contexterSetup();</script><contexter-box class=\"link-card h-entry hentry\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\"><contexter-thumbnail class=\"thumbnail\" slot=\"thumbnail\"></contexter-thumbnail><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><a is=\"contexter-link\" href=\"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01\" itemprop=\"url\">draft-davidben-http-client-hint-reliability-01</a></contexter-box-head></contexter-box-head><time class=\"dt-published published\" slot=\"time\" itemprop=\"datePublished\" datetime=\"2022-04-05T17:38:43.512Z\">3/5/2022</time><contexter-summary class=\"p-summary entry-summary\" itemprop=\"abstract\" slot=\"summary\"><p>Client Hint Reliability (Internet-Draft, 2020)</p></contexter-summary><contexter-keywordset itemprop=\"keywords\" slot=\"keywords\"></contexter-keywordset><a is=\"contexter-link\" href=\"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01\" class=\"read-link main-link\" itemprop=\"sameAs\" slot=\"read-link\">Read</a></contexter-box>","linkId":"31e157ff477ca0f319152f91f6a61b8fb32c4dc7","data":{"originalLink":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","sanitizedLink":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","canonical":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","htmlText":"<!DOCTYPE html> \n\n\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>\n  \n    draft-davidben-http-client-hint-reliability-01\n  \n</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style>\n\n  @media only screen \n    and (min-width: 992px)\n    and (max-width: 1199px) {\n      body { font-size: 14pt; }\n            div.content { width: 96ex; margin: 0 auto; }\n        }\n  @media only screen \n    and (min-width: 768px)\n    and (max-width: 991px) {\n            body { font-size: 14pt; }\n            div.content { width: 96ex; margin: 0 auto; }\n        }\n  @media only screen \n    and (min-width: 480px)\n    and (max-width: 767px) {\n            body { font-size: 11pt; }\n            div.content { width: 96ex; margin: 0 auto; }\n        }\n  @media only screen \n    and (max-width: 479px) {\n            body { font-size: 8pt; }\n            div.content { width: 96ex; margin: 0 auto; }\n        }\n  @media only screen \n    and (min-device-width : 375px) \n    and (max-device-width : 667px) {\n            body { font-size: 9.5pt; }\n            div.content { width: 96ex; margin: 0; }\n        }\n  @media only screen \n    and (min-device-width: 1200px) {\n            body { font-size: 10pt; margin: 0 4em; }\n            div.content { width: 96ex; margin: 0; }\n        }\n        h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {\n      font-weight: bold;\n            /* line-height: 0pt; */\n            display: inline;\n            white-space: pre;\n            font-family: monospace;\n            font-size: 1em;\n      font-weight: bold;\n        }\n        pre {\n            font-size: 1em;\n            margin-top: 0px;\n            margin-bottom: 0px;\n        }\n  .pre {\n      white-space: pre;\n      font-family: monospace;\n  }\n  .header{\n      font-weight: bold;\n  }\n        .newpage {\n            page-break-before: always;\n        }\n        .invisible {\n            text-decoration: none;\n            color: white;\n        }\n        @media print {\n            body {\n                margin-top: 5em;\n                font-family: monospace;\n                font-size: 10.5pt;\n            }\n            h1, h2, h3, h4, h5, h6 {\n                font-size: 1em;\n            }\n        \n            a:link, a:visited {\n                color: inherit;\n                text-decoration: none;\n            }\n            .noprint {\n                display: none;\n            }\n        }\n  @media screen {\n      .grey, .grey a:link, .grey a:visited {\n    color: #777;\n      }\n            .meta-info {\n                background-color: #EEE;\n            }\n            .top {\n                border-top: 7px solid #EEE;\n            }\n            .pad {\n                padding-top: 7px;\n                line-height: 24px;\n                padding-bottom: 4px;\n            }\n            .bgwhite  { background-color: white; }\n            .bgred    { background-color: #F44; }\n            .bggrey   { background-color: #666; }\n            .bgbrown  { background-color: #840; }            \n            .bgorange { background-color: #FA0; }\n            .bgyellow { background-color: #EE0; }\n            .bgmagenta{ background-color: #F4F; }\n            .bgblue   { background-color: #66F; }\n            .bgcyan   { background-color: #4DD; }\n            .bggreen  { background-color: #4F4; }\n\n            .legend   { font-size: 90%; }\n            .cplate   { font-size: 70%; border: solid grey 1px; }\n  }\n    \n     \n\n.bgwhite  { background-color: white; }\n.bgred    { background-color: #F44; }\n.bggrey   { background-color: #666; }\n.bgbrown  { background-color: #840; }            \n.bgorange { background-color: #FA0; }\n.bgyellow { background-color: #EE0; }\n.bgmagenta{ background-color: #F4F; }\n.bgblue   { background-color: #66F; }\n.bgcyan   { background-color: #4DD; }\n.bggreen  { background-color: #4F4; }\n\n.draftcontent { margin-top:0px !important;}\n\n\n    </style>\n\n    \n  <link rel=\"alternate\" type=\"application/atom+xml\" title=\"Document changes\" href=\"/feed/document-changes/draft-davidben-http-client-hint-reliability/\">\n  <meta name=\"description\" content=\"Client Hint Reliability (Internet-Draft, 2020)\">\n\n\n    \n    <link rel=\"shortcut icon\" href=\"https://www.ietf.org/lib/dt/7.46.0/ietf/images/ietf-icon-blue3.png\">\n    \n    <link rel=\"apple-touch-icon\" href=\"https://www.ietf.org/lib/dt/7.46.0/ietf/images/apple-touch-icon.png\">\n  <script async src='/cdn-cgi/bm/cv/669835187/api.js'></script></head>\n\n  <body style=\"padding-top: 0;\">\n\n\t  <div class=\"content\" id=\"content\">\n        \n  \n \n  <div class=\"rfcmarkup\">\n    <div class=\"noprint\" style=\"height: 6px;\">\n      <div onmouseover=\"this.style.cursor='pointer';\"\n         onclick=\"showLegend();\"\n         onmouseout=\"hideLegend()\"\n         style=\"height: 6px; min-height: 6px; width: 96ex; position: absolute; margin-top:0; \"\n         class=\"meta-info bgred\"\n         title=\"Click for colour legend.\" >&nbsp;</div>\n      <div id=\"legend\"\n           class=\"meta-info noprint pre legend\"\n           style=\"position:absolute; top: 4px; left: 4ex; visibility:hidden; background-color: white; padding: 4px 9px 5px 7px; border: solid #345 1px; \"\n           onmouseover=\"showLegend();\"\n           onmouseout=\"hideLegend();\">\n      </div>\n    </div>\n\n    \n      <div class=\"noprint\">\n\t <pre class=\"pre meta-info\">[<a href=\"https://datatracker.ietf.org\" title=\"Document search and retrieval page\">Search</a>] [<a href=\"https://www.ietf.org/archive/id/draft-davidben-http-client-hint-reliability-01.txt\" title=\"Plaintext version of this document\">txt</a>|<a href=\"https://www.ietf.org/archive/id/draft-davidben-http-client-hint-reliability-01.xml\" title=\"XML source for this document\">xml</a>|<a href=\"/doc/pdf/draft-davidben-http-client-hint-reliability-01\">pdfized</a>|<a href=\"/doc/draft-davidben-http-client-hint-reliability/01/bibtex/\" title=\"BibTex entry for this document\">bibtex</a>] [<a href=\"/doc/draft-davidben-http-client-hint-reliability/\" title=\"Datatracker information for this document\">Tracker</a>] [<a href=\"mailto:draft-davidben-http-client-hint-reliability@ietf.org?subject=draft-davidben-http-client-hint-reliability\" title=\"Send email to the document authors\">Email</a>] [<a href=\"https://www.ietf.org/rfcdiff?difftype=--hwdiff&url2=draft-davidben-http-client-hint-reliability-01.txt\" title=\"Inline diff (wdiff)\">Diff1</a>] [<a href=\"https://www.ietf.org/rfcdiff?url2=draft-davidben-http-client-hint-reliability-01.txt\" title=\"Side-by-side diff\">Diff2</a>] [<a href=\"https://www.ietf.org/tools/idnits?url=https://www.ietf.org/archive/id/draft-davidben-http-client-hint-reliability-01.txt\" title=\"Run an idnits check of this document\">Nits</a>]\n\nVersions: <a href=\"/doc/html/draft-davidben-http-client-hint-reliability-00\">00</a> <a href=\"/doc/html/draft-davidben-http-client-hint-reliability-01\"><b>01</b></a> <a href=\"/doc/html/draft-davidben-http-client-hint-reliability-02\">02</a> <a href=\"/doc/html/draft-davidben-http-client-hint-reliability-03\">03</a>                                                   </pre>\n      </div>\n    \n\n    <div class=\"draftcontent\">\n    <pre>HTTP                                                         D. Benjamin\nInternet-Draft                                                Google LLC\nUpdates: ietf-httpbis-client-hints (if                   August 27, 2020\n         approved)\nIntended status: Experimental\nExpires: February 28, 2021\n\n\n                        <span class=\"h1\">Client Hint Reliability</span>\n             <span class=\"h1\">draft-davidben-http-client-hint-reliability-01</span>\n\nAbstract\n\n   This document defines the Critical-CH HTTP response header, and the\n   ACCEPT_CH HTTP/2 frame to allow HTTP servers to reliably specify\n   their Client Hint preferences, with minimal performance overhead.\n\nStatus of This Memo\n\n   This Internet-Draft is submitted in full conformance with the\n   provisions of <a href=\"/doc/html/bcp78\">BCP 78</a> and <a href=\"/doc/html/bcp79\">BCP 79</a>.\n\n   Internet-Drafts are working documents of the Internet Engineering\n   Task Force (IETF).  Note that other groups may also distribute\n   working documents as Internet-Drafts.  The list of current Internet-\n   Drafts is at <a href=\"https://datatracker.ietf.org/drafts/current/\">https://datatracker.ietf.org/drafts/current/</a>.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or obsoleted by other documents at any\n   time.  It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as &quot;work in progress.&quot;\n\n   This Internet-Draft will expire on February 28, 2021.\n\nCopyright Notice\n\n   Copyright (c) 2020 IETF Trust and the persons identified as the\n   document authors.  All rights reserved.\n\n   This document is subject to <a href=\"/doc/html/bcp78\">BCP 78</a> and the IETF Trust&#x27;s Legal\n   Provisions Relating to IETF Documents\n   (<a href=\"https://trustee.ietf.org/license-info\">https://trustee.ietf.org/license-info</a>) in effect on the date of\n   publication of this document.  Please review these documents\n   carefully, as they describe your rights and restrictions with respect\n   to this document.  Code Components extracted from this document must\n   include Simplified BSD License text as described in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty as\n   described in the Simplified BSD License.\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 1]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-2\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\nTable of Contents\n\n   <a href=\"#section-1\">1</a>.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-2\">2</a>\n   <a href=\"#section-2\">2</a>.  Conventions and Definitions . . . . . . . . . . . . . . . . .   <a href=\"#page-2\">2</a>\n   <a href=\"#section-3\">3</a>.  The Critical-CH Response Header Field . . . . . . . . . . . .   <a href=\"#page-3\">3</a>\n     <a href=\"#section-3.1\">3.1</a>.  Example . . . . . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-4\">4</a>\n   <a href=\"#section-4\">4</a>.  The ACCEPT_CH HTTP/2 Frame  . . . . . . . . . . . . . . . . .   <a href=\"#page-5\">5</a>\n     <a href=\"#section-4.1\">4.1</a>.  Processing ACCEPT_CH Frames . . . . . . . . . . . . . . .   <a href=\"#page-6\">6</a>\n     <a href=\"#section-4.2\">4.2</a>.  Interaction with Critical-CH  . . . . . . . . . . . . . .   <a href=\"#page-7\">7</a>\n   <a href=\"#section-5\">5</a>.  Security Considerations . . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n   <a href=\"#section-6\">6</a>.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n   <a href=\"#section-7\">7</a>.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n     <a href=\"#section-7.1\">7.1</a>.  Normative References  . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n     <a href=\"#section-7.2\">7.2</a>.  Informative References  . . . . . . . . . . . . . . . . .  <a href=\"#page-10\">10</a>\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  <a href=\"#page-10\">10</a>\n   Author&#x27;s Address  . . . . . . . . . . . . . . . . . . . . . . . .  <a href=\"#page-10\">10</a>\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-1\" href=\"#section-1\">1</a>.  Introduction</span>\n\n   [<a id=\"ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>] defines a response header, Accept-CH,\n   for servers to advertise a set of request headers used for proactive\n   content negotiation.  This allows user agents to send request headers\n   only when used, improving their performance overhead as well as\n   reducing passive fingerprinting surface.\n\n   However, on the first HTTP request to a server, the user agent will\n   not have received the Accept-CH header and may not take the server\n   preferences into account.  More generally, the server&#x27;s configuration\n   may have changed since the most recent HTTP request to the server.\n   This document defines a pair of mechanisms to resolve this:\n\n   1.  an HTTP response header, Critical-CH, for the server to instruct\n       the user agent to retry the request\n\n   2.  an alternate delivery mechanism for Accept-CH in HTTP/2\n       [<a href=\"/doc/html/rfc7540\" title=\"&quot;Hypertext Transfer Protocol Version 2 (HTTP/2)&quot;\">RFC7540</a>], which can avoid the performance hit of a retry in most\n       cases\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-2\" href=\"#section-2\">2</a>.  Conventions and Definitions</span>\n\n   The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,\n   &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;NOT RECOMMENDED&quot;, &quot;MAY&quot;, and\n   &quot;OPTIONAL&quot; in this document are to be interpreted as described in <a href=\"/doc/html/bcp14\">BCP</a>\n   <a href=\"/doc/html/bcp14\">14</a> [<a href=\"/doc/html/rfc2119\" title=\"&quot;Key words for use in RFCs to Indicate Requirement Levels&quot;\">RFC2119</a>] [<a href=\"/doc/html/rfc8174\" title=\"&quot;Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words&quot;\">RFC8174</a>] when, and only when, they appear in all\n   capitals, as shown here.\n\n   This document uses the Augmented Backus-Naur Form (ABNF) notation of\n   [<a href=\"/doc/html/rfc5234\" title=\"&quot;Augmented BNF for Syntax Specifications: ABNF&quot;\">RFC5234</a>].\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 2]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-3\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-3\" href=\"#section-3\">3</a>.  The Critical-CH Response Header Field</span>\n\n   When a user agent requests a resource based on a missing or outdated\n   Accept-CH value, it may not send a desired request header field.\n   Neither user agent nor server has enough information to reliably and\n   efficiently recover from this situation.  The server can observe that\n   the header is missing, but the user agent may not have supported the\n   header, or may have chosen not to send it.  Triggering a new request\n   in these cases would risk an infinite loop or an unnecessary round-\n   trip.\n\n   Conversely, the user agent can observe that a request header appears\n   in the Accept-CH (Section 3.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>]) and\n   Vary (<a href=\"/doc/html/rfc7231#section-7.1.4\">Section&nbsp;7.1.4 of [RFC7231]</a>) response header fields.  However,\n   retrying based on this information would waste resources if the\n   resource only used the Client Hint as an optional optimization.\n\n   This document introduces critical Client Hints.  These are the Client\n   Hints which meaningfully change the resulting resource.  For example,\n   a server may use the Device-Memory Client Hint [<a href=\"#ref-DEVICE-MEMORY\">DEVICE-MEMORY</a>] to\n   select simple and complex variants of a resource to different user\n   agents.  Such a resource should be fetched consistently across page\n   loads to avoid jarring user-visible switches.\n\n   The server specifies critical Client Hints with the Critical-CH\n   response header field.  It is a Structured Header\n   [<a href=\"#ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>] whose value MUST be an sf-list\n   (Section 3.1 of [<a href=\"#ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>]) whose members\n   are tokens (Section 3.3.4 of [<a href=\"#ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>]).\n   Its ABNF is:\n\n     Critical-CH = sf-list\n\n   For example:\n\n     Critical-CH: Sec-CH-Example, Sec-CH-Example-2\n\n   Each token listed in the Critical-CH header SHOULD additionally be\n   present in the Accept-CH and Vary response headers.\n\n   When a user agent receives an HTTP response containing a Critical-CH\n   header, it first processes the Accept-CH header as described in\n   Section 3.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].  It then performs the\n   following steps:\n\n   1.  If the request did not use a safe method (<a href=\"/doc/html/rfc7231#section-4.2.1\">Section&nbsp;4.2.1 of\n       [RFC7231]</a>), ignore the Critical-CH header and continue processing\n       the response as usual.\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 3]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-4\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   2.  If the response was already the result of a retry, ignore the\n       Critical-CH header and continue processing the response as usual.\n\n   3.  Determine the Client Hints that would have been sent given the\n       updated Accept-CH value, incorporating the user agent&#x27;s local\n       policy and user preferences.  See also Section 2.1 of\n       [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].\n\n   4.  Compare this result to the Client Hints which were sent.  If any\n       Client Hint listed in the Critical-CH header was not previously\n       sent and would now have been sent, retry the request with the new\n       preferences.  Otherwise, continue processing the response as\n       usual.\n\n   Note this procedure does not cause the user agent to send Client\n   Hints it would not otherwise send.\n\n<span class=\"h3\"><a class=\"selflink\" id=\"section-3.1\" href=\"#section-3.1\">3.1</a>.  Example</span>\n\n   For example, if the user agent loads https://example.com with no\n   knowledge of the server&#x27;s Accept-CH preferences, it may send the\n   following response:\n\n     GET / HTTP/1.1\n     Host: example.com\n\n     HTTP/1.1 200 OK\n     Content-Type: text/html\n     Accept-CH: Sec-CH-Example, Sec-CH-Example-2\n     Vary: Sec-CH-Example\n     Critical-CH: Sec-CH-Example\n\n   In this example, the server, across the whole origin, uses both Sec-\n   CH-Example and Sec-CH-Example-2 Client Hints.  However, this resource\n   only uses Sec-CH-Example, which it considers critical.\n\n   The user agent now processes the Accept-CH header and determines it\n   would have sent both headers.  Sec-CH-Example is listed in Critical-\n   CH, so the user agent retries the request, and receives a more\n   specific response.\n\n\n\n\n\n\n\n\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 4]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-5\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n     GET / HTTP/1.1\n     Host: example.com\n     Sec-CH-Example: 1\n     Sec-CH-Example-2: 2\n\n     HTTP/1.1 200 OK\n     Content-Type: text/html\n     Accept-CH: Sec-CH-Example, Sec-CH-Example-2\n     Vary: Sec-CH-Example\n     Critical-CH: Sec-CH-Example\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-4\" href=\"#section-4\">4</a>.  The ACCEPT_CH HTTP/2 Frame</span>\n\n   While Critical-CH header provides reliability, it requires a retry on\n   some requests.  This document additionally introduces the ACCEPT_CH\n   HTTP/2 frame as an optimization so the server&#x27;s Client Hint\n   preferences are usually available before the client&#x27;s first request.\n\n   [[TODO: Alternatively, is it time to revive <a href=\"/doc/html/draft-bishop-httpbis-extended-settings\">draft-bishop-httpbis-</a>\n   <a href=\"/doc/html/draft-bishop-httpbis-extended-settings\">extended-settings</a>?]]\n\n   The ACCEPT_CH frame type is TBD (decimal TBD) and contains one or\n   more entries, each consisting of a pair of length-delimited strings:\n\n   +-------------------------------+\n   |         Origin-Len (16)       |\n   +-------------------------------+-------------------------------+\n   |         Origin                                              ...\n   +-------------------------------+-------------------------------+\n   |         Accept-CH-Len (16)    |\n   +-------------------------------+-------------------------------+\n   |         Accept-CH-Value                                     ...\n   +---------------------------------------------------------------+\n\n   The fields are defined as follows:\n\n   Origin-Len:  An unsigned, 16-bit integer indicating the length, in\n      octets, of the Origin field.\n\n   Origin:  A sequence of characters containing the ASCII serialization\n      of an origin (<a href=\"/doc/html/rfc6454#section-6.2\">Section&nbsp;6.2 of [RFC6454]</a>) that the sender is\n      providing an Accept-CH value for.\n\n   Accept-CH-Len:  An unsigned, 16-bit integer indicating the length, in\n      octets, of the Accept-CH-Value field.\n\n   Accept-CH-Value:  A sequence of characters containing the Accept-CH\n      value for the corresponding origin.  This value MUST satisfy the\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 5]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-6\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n      Accept-CH ABNF defined in Section 3.1 of\n      [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].\n\n   HTTP/2 Servers which request Client Hints SHOULD send an ACCEPT_CH\n   frame as early as possible.  Connections using TLS [<a href=\"/doc/html/rfc8446\" title=\"&quot;The Transport Layer Security (TLS) Protocol Version 1.3&quot;\">RFC8446</a>] which\n   negotiate the Application Layer Protocol Settings (ALPS)\n   [<a href=\"#ref-I-D.vvv-tls-alps\">I-D.vvv-tls-alps</a>] extension SHOULD include the ACCEPT_CH frame in\n   the ALPS value as described in [<a href=\"#ref-I-D.vvv-httpbis-alps\">I-D.vvv-httpbis-alps</a>].  This ensures\n   the information is available to the user agent when it makes the\n   first request.\n\n   User agents MUST NOT send ACCEPT_CH frames.  Servers which receive an\n   ACCEPT_CH frame MUST respond with a connection error (<a href=\"/doc/html/rfc7540#section-5.4.1\">Section&nbsp;5.4.1\n   of [RFC7540]</a>) of type PROTOCOL_ERROR.\n\n   ACCEPT_CH frames always apply to a single connection, never a single\n   stream.  The identifier in the ACCEPT_CH frame MUST be zero.  The\n   flags field of an ACCEPT_CH field is unused and MUST be zero.  If a\n   user agent receives an ACCEPT_CH frame whose stream identifier or\n   flags field is non-zero, it MUST respond with a connection error of\n   type PROTOCOL_ERROR.\n\n<span class=\"h3\"><a class=\"selflink\" id=\"section-4.1\" href=\"#section-4.1\">4.1</a>.  Processing ACCEPT_CH Frames</span>\n\n   The user agent remembers the most recently received ACCEPT_CH frame\n   for each connection.  When it receives a new ACCEPT_CH frame, either\n   in application data or ALPS, it overwrites this value.  As this is an\n   optimization, the user agent MAY bound the size and ignore or forget\n   entries to reduce resource usage.\n\n   When the user agent makes an HTTP request to a particular origin over\n   an HTTP/2 connection, it looks up the origin in the remembered\n   ACCEPT_CH, if any.  If it finds a match, it determines additional\n   Client Hints to send, incorporating its local policy and user\n   preferences.  See Section 2.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].\n\n   If there are additional Client Hints, the user agent restarts the\n   request with updated headers.  The connection has already been\n   established, so this restart does not incur any additional network\n   latency.  Note it may result in a different secondary HTTP cache key\n   (see <a href=\"/doc/html/rfc7234#section-4.1\">Section&nbsp;4.1 of [RFC7234]</a>) and select a different cached\n   response.  If the new cached response does not need revalidation, it\n   may not use the connection at all.\n\n   User agents MUST NOT process Client Hint preferences in ACCEPT_CH\n   frames corresponding to origins for which the connection is not\n   authoritative.  Note the procedure above implicitly satisfies this by\n   deferring processing to after the connection has been chosen for a\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 6]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-7\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   corresponding request.  Unauthoritative origins and other unmatched\n   entries are ignored.\n\n   [[TODO: Some variations on this behavior we could choose instead:\n\n   o  Do new ACCEPT_CH frames override the whole set or implement some\n      kind of update?  Overriding the whole set seems simplest and most\n      consistent with an EXTENDED_SETTINGS variant.\n\n   o  Should the user agent reject the ACCEPT_CH frame if there are\n      unexpected origins in there?  Deferring avoids needing to worry\n      about this, and ignoring the unused ones may interact better with\n      secondary certs.\n\n   o  Should ACCEPT_CH frames be deferred or just written to the cache\n      when received?  Deferred simplifies reasoning about bad origins,\n      predictive connections, etc., but means interactions between\n      ACCEPT_CH and Accept-CH are more complex (see below).\n\n   o  How should ACCEPT_CH and Accept-CH interact?  The document\n      currently proposes unioning them, which is easy.  Accept-CH first\n      would work, but unnecessarily ignore newer connection-level\n      ACCEPT_CHs.  ACCEPT_CH would not; a stale connection-level\n      preference would get stuck.  Whichever is received earlier would\n      also work, but requires tracking timestamps if deferred (see\n      above).]]\n\n<span class=\"h3\"><a class=\"selflink\" id=\"section-4.2\" href=\"#section-4.2\">4.2</a>.  Interaction with Critical-CH</span>\n\n   The ACCEPT_CH frame avoids a round-trip, so relying on it over\n   Critical-CH would be preferable.  However, this is not always\n   possible:\n\n   o  The server may be running older software without support for\n      ACCEPT_CH or ALPS.\n\n   o  The server&#x27;s Accept-CH preferences may change while existing\n      connections are open.  Those connections will have outdated\n      ACCEPT_CH frames.  While the server could send a new one, the\n      frame may not arrive in time for the next request.  Moreover, if\n      the HTTP serving frontend is an intermediary like a CDN, it may\n      not be proactively notified of origin server changes.\n\n   o  HTTP/2 allows connection reuse across multiple origins\n      (<a href=\"/doc/html/rfc7540#section-9.1.1\">Section&nbsp;9.1.1 of [RFC7540]</a>).  Some origins may not be listed in\n      the ACCEPT_CH frame, particularly if the server used a wildcard\n      X.509 certificate.\n\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 7]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-8\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   Thus this document defines both mechanisms.  Critical-CH provides\n   reliable Client Hint delivery, while the ACCEPT_CH frame avoids the\n   retry in most cases.\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-5\" href=\"#section-5\">5</a>.  Security Considerations</span>\n\n   Request header fields may expose sensitive information about the\n   user&#x27;s environment.  Section 4.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>]\n   discusses some of these considerations.  The document augments the\n   capabilities of Client Hints, but does not change these\n   considerations.  The procedure described in <a href=\"#section-3\">Section 3</a> does not result\n   in the user agent sending request headers it otherwise would not\n   have.\n\n   The ACCEPT_CH frame does introduce a new way for HTTP/2 connections\n   to make assertions about origins they are not authoritative for, but\n   the procedure in <a href=\"#section-4.1\">Section 4.1</a> defers processing until after the user\n   agent has decided to use the connection for a particular request\n   (<a href=\"/doc/html/rfc7540#section-9.1.1\">Section&nbsp;9.1.1 of [RFC7540]</a>).  The user agent will thus only\n   information in an ACCEPT_CH frame if it considers the connection\n   authoritative for the origin.\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-6\" href=\"#section-6\">6</a>.  IANA Considerations</span>\n\n   This specification adds an entry to the &quot;HTTP/2 Frame Type&quot; registry\n   with the following parameters:\n\n   o  Frame Type: ACCEPT_CH\n\n   o  Code: TBD\n\n   o  Allowed in ALPS: Yes\n\n   o  Reference: [[this document]]\n\n   [[TODO: As of writing, the HTTP/2 Frame Type registry does not\n   include an Allowed in ALPS column.  [<a href=\"#ref-I-D.vvv-httpbis-alps\">I-D.vvv-httpbis-alps</a>], as of\n   writing, will add it.  This document should be updated as that design\n   evolves.]]\n\n<span class=\"h2\"><a class=\"selflink\" id=\"section-7\" href=\"#section-7\">7</a>.  References</span>\n\n<span class=\"h3\"><a class=\"selflink\" id=\"section-7.1\" href=\"#section-7.1\">7.1</a>.  Normative References</span>\n\n   [<a id=\"ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>]\n              Grigorik, I. and Y. Weiss, &quot;HTTP Client Hints&quot;, <a href=\"/doc/html/draft-ietf-httpbis-client-hints-15\">draft-</a>\n              <a href=\"/doc/html/draft-ietf-httpbis-client-hints-15\">ietf-httpbis-client-hints-15</a> (work in progress), July\n              2020.\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 8]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-9\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   [<a id=\"ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>]\n              Nottingham, M. and P. Kamp, &quot;Structured Field Values for\n              HTTP&quot;, <a href=\"/doc/html/draft-ietf-httpbis-header-structure-19\">draft-ietf-httpbis-header-structure-19</a> (work in\n              progress), June 2020.\n\n   [<a id=\"ref-I-D.vvv-httpbis-alps\">I-D.vvv-httpbis-alps</a>]\n              Vasiliev, V., &quot;Using TLS Application-Layer Protocol\n              Settings (ALPS) in HTTP&quot;, <a href=\"/doc/html/draft-vvv-httpbis-alps-00\">draft-vvv-httpbis-alps-00</a> (work\n              in progress), July 2020.\n\n   [<a id=\"ref-I-D.vvv-tls-alps\">I-D.vvv-tls-alps</a>]\n              Vasiliev, V., &quot;TLS Application-Layer Protocol Settings\n              Extension&quot;, <a href=\"/doc/html/draft-vvv-tls-alps-00\">draft-vvv-tls-alps-00</a> (work in progress), June\n              2020.\n\n   [<a id=\"ref-RFC2119\">RFC2119</a>]  Bradner, S., &quot;Key words for use in RFCs to Indicate\n              Requirement Levels&quot;, <a href=\"/doc/html/bcp14\">BCP 14</a>, <a href=\"/doc/html/rfc2119\">RFC 2119</a>,\n              DOI 10.17487/RFC2119, March 1997,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc2119\">https://www.rfc-editor.org/info/rfc2119</a>&gt;.\n\n   [<a id=\"ref-RFC5234\">RFC5234</a>]  Crocker, D., Ed. and P. Overell, &quot;Augmented BNF for Syntax\n              Specifications: ABNF&quot;, STD 68, <a href=\"/doc/html/rfc5234\">RFC 5234</a>,\n              DOI 10.17487/RFC5234, January 2008,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc5234\">https://www.rfc-editor.org/info/rfc5234</a>&gt;.\n\n   [<a id=\"ref-RFC6454\">RFC6454</a>]  Barth, A., &quot;The Web Origin Concept&quot;, <a href=\"/doc/html/rfc6454\">RFC 6454</a>,\n              DOI 10.17487/RFC6454, December 2011,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc6454\">https://www.rfc-editor.org/info/rfc6454</a>&gt;.\n\n   [<a id=\"ref-RFC7231\">RFC7231</a>]  Fielding, R., Ed. and J. Reschke, Ed., &quot;Hypertext Transfer\n              Protocol (HTTP/1.1): Semantics and Content&quot;, <a href=\"/doc/html/rfc7231\">RFC 7231</a>,\n              DOI 10.17487/RFC7231, June 2014,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc7231\">https://www.rfc-editor.org/info/rfc7231</a>&gt;.\n\n   [<a id=\"ref-RFC7234\">RFC7234</a>]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,\n              Ed., &quot;Hypertext Transfer Protocol (HTTP/1.1): Caching&quot;,\n              <a href=\"/doc/html/rfc7234\">RFC 7234</a>, DOI 10.17487/RFC7234, June 2014,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc7234\">https://www.rfc-editor.org/info/rfc7234</a>&gt;.\n\n   [<a id=\"ref-RFC7540\">RFC7540</a>]  Belshe, M., Peon, R., and M. Thomson, Ed., &quot;Hypertext\n              Transfer Protocol Version 2 (HTTP/2)&quot;, <a href=\"/doc/html/rfc7540\">RFC 7540</a>,\n              DOI 10.17487/RFC7540, May 2015,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc7540\">https://www.rfc-editor.org/info/rfc7540</a>&gt;.\n\n   [<a id=\"ref-RFC8174\">RFC8174</a>]  Leiba, B., &quot;Ambiguity of Uppercase vs Lowercase in <a href=\"/doc/html/rfc2119\">RFC</a>\n              <a href=\"/doc/html/rfc2119\">2119</a> Key Words&quot;, <a href=\"/doc/html/bcp14\">BCP 14</a>, <a href=\"/doc/html/rfc8174\">RFC 8174</a>, DOI 10.17487/RFC8174,\n              May 2017, &lt;<a href=\"https://www.rfc-editor.org/info/rfc8174\">https://www.rfc-editor.org/info/rfc8174</a>&gt;.\n\n\n\n\n<span class=\"grey\">Benjamin                Expires February 28, 2021               [Page 9]</span></pre>\n<hr class='noprint'/><!--NewPage--><pre class='newpage'><span id=\"page-10\" ></span>\n<span class=\"grey\">Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   [<a id=\"ref-RFC8446\">RFC8446</a>]  Rescorla, E., &quot;The Transport Layer Security (TLS) Protocol\n              Version 1.3&quot;, <a href=\"/doc/html/rfc8446\">RFC 8446</a>, DOI 10.17487/RFC8446, August 2018,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc8446\">https://www.rfc-editor.org/info/rfc8446</a>&gt;.\n\n<span class=\"h3\"><a class=\"selflink\" id=\"section-7.2\" href=\"#section-7.2\">7.2</a>.  Informative References</span>\n\n   [<a id=\"ref-DEVICE-MEMORY\">DEVICE-MEMORY</a>]\n              Panicker, S., &quot;Device Memory&quot;, n.d.,\n              &lt;<a href=\"https://w3c.github.io/device-memory/\">https://w3c.github.io/device-memory/</a>&gt;.\n\nAcknowledgments\n\n   This document has benefited from contributions and suggestions from\n   Ilya Grigorik, Nick Harper, Matt Menke, Aaron Tagliaboschi, Victor\n   Vasiliev, Yoav Weiss, and others.\n\nAuthor&#x27;s Address\n\n   David Benjamin\n   Google LLC\n\n   Email: davidben@google.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBenjamin                Expires February 28, 2021              [Page 10]\n</pre>\n    </div>\n\n  </div>\n\n\n        \n\t  </div>\n\n\t\n\n\t\n\n    </div>\n\n      \n    <script type=\"text/javascript\"><!--\n    var legend_html = \"Colour legend:<br /> \\\n     <table> \\\n        <tr><td>Unknown:</td>                   <td><span class='cplate bgwhite'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Draft:</td>                     <td><span class='cplate bgred'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Informational:</td>             <td><span class='cplate bgorange'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Experimental:</td>              <td><span class='cplate bgyellow'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Best Common Practice:</td>      <td><span class='cplate bgmagenta'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Proposed Standard:</td>         <td><span class='cplate bgblue'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Draft Standard (old designation):</td> <td><span class='cplate bgcyan'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Internet Standard:</td>         <td><span class='cplate bggreen'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Historic:</td>                  <td><span class='cplate bggrey'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n        <tr><td>Obsolete:</td>                  <td><span class='cplate bgbrown'>&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr> \\\n    </table>\";\n    function showLegend() {\n        var elem = document.getElementById('legend');\n        elem.innerHTML = legend_html\n        elem.style.visibility='visible';\n    }\n    function hideLegend() {\n        var elem = document.getElementById('legend');\n        elem.style.visibility='hidden';\n        elem.innerHTML = \"\";\n    }\n    // -->\n    </script>\n\n  <script type=\"text/javascript\">(function(){window['__CF$cv$params']={r:'6f740f08d8e28c7e',m:'qmcxruEmfJGVEfHH8QmfYNekR_o16N7D6LhFKXdUTvE-1649180320-0-AW9MK8+VEXUf2cpb5oD9SS3nW51beoEc2pm+Pkl/c6v6oCK780D/3+qe8Vd0JMuRnJKNqvPnPehmg7R91okkM1C+nbQOigwZGJ01KJCFJh6vThQFPyNHpGMlG2ZXjbeqFcNT0cUBkvQV4v4jNQDaimmg+m7mTp4zcbwlJoZwPuFV7cwXUHqU9tkTzgnddR7HzA==',s:[0xf2cd81d7b4,0xa8fc23df62],}})();</script></body>\n</html>","oembed":false,"readabilityObject":{"title":"draft-davidben-http-client-hint-reliability-01","content":"<div id=\"readability-page-1\" class=\"page\"><div>\n    <pre>HTTP                                                         D. Benjamin\nInternet-Draft                                                Google LLC\nUpdates: ietf-httpbis-client-hints (if                   August 27, 2020\n         approved)\nIntended status: Experimental\nExpires: February 28, 2021\n\n\n                        <span>Client Hint Reliability</span>\n             <span>draft-davidben-http-client-hint-reliability-01</span>\n\nAbstract\n\n   This document defines the Critical-CH HTTP response header, and the\n   ACCEPT_CH HTTP/2 frame to allow HTTP servers to reliably specify\n   their Client Hint preferences, with minimal performance overhead.\n\nStatus of This Memo\n\n   This Internet-Draft is submitted in full conformance with the\n   provisions of <a href=\"/doc/html/bcp78\">BCP 78</a> and <a href=\"/doc/html/bcp79\">BCP 79</a>.\n\n   Internet-Drafts are working documents of the Internet Engineering\n   Task Force (IETF).  Note that other groups may also distribute\n   working documents as Internet-Drafts.  The list of current Internet-\n   Drafts is at <a href=\"https://datatracker.ietf.org/drafts/current/\">https://datatracker.ietf.org/drafts/current/</a>.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or obsoleted by other documents at any\n   time.  It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as \"work in progress.\"\n\n   This Internet-Draft will expire on February 28, 2021.\n\nCopyright Notice\n\n   Copyright (c) 2020 IETF Trust and the persons identified as the\n   document authors.  All rights reserved.\n\n   This document is subject to <a href=\"/doc/html/bcp78\">BCP 78</a> and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n   (<a href=\"https://trustee.ietf.org/license-info\">https://trustee.ietf.org/license-info</a>) in effect on the date of\n   publication of this document.  Please review these documents\n   carefully, as they describe your rights and restrictions with respect\n   to this document.  Code Components extracted from this document must\n   include Simplified BSD License text as described in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty as\n   described in the Simplified BSD License.\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 1]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-2\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\nTable of Contents\n\n   <a href=\"#section-1\">1</a>.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-2\">2</a>\n   <a href=\"#section-2\">2</a>.  Conventions and Definitions . . . . . . . . . . . . . . . . .   <a href=\"#page-2\">2</a>\n   <a href=\"#section-3\">3</a>.  The Critical-CH Response Header Field . . . . . . . . . . . .   <a href=\"#page-3\">3</a>\n     <a href=\"#section-3.1\">3.1</a>.  Example . . . . . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-4\">4</a>\n   <a href=\"#section-4\">4</a>.  The ACCEPT_CH HTTP/2 Frame  . . . . . . . . . . . . . . . . .   <a href=\"#page-5\">5</a>\n     <a href=\"#section-4.1\">4.1</a>.  Processing ACCEPT_CH Frames . . . . . . . . . . . . . . .   <a href=\"#page-6\">6</a>\n     <a href=\"#section-4.2\">4.2</a>.  Interaction with Critical-CH  . . . . . . . . . . . . . .   <a href=\"#page-7\">7</a>\n   <a href=\"#section-5\">5</a>.  Security Considerations . . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n   <a href=\"#section-6\">6</a>.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n   <a href=\"#section-7\">7</a>.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n     <a href=\"#section-7.1\">7.1</a>.  Normative References  . . . . . . . . . . . . . . . . . .   <a href=\"#page-8\">8</a>\n     <a href=\"#section-7.2\">7.2</a>.  Informative References  . . . . . . . . . . . . . . . . .  <a href=\"#page-10\">10</a>\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  <a href=\"#page-10\">10</a>\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  <a href=\"#page-10\">10</a>\n\n<span><a id=\"section-1\" href=\"#section-1\">1</a>.  Introduction</span>\n\n   [<a id=\"ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>] defines a response header, Accept-CH,\n   for servers to advertise a set of request headers used for proactive\n   content negotiation.  This allows user agents to send request headers\n   only when used, improving their performance overhead as well as\n   reducing passive fingerprinting surface.\n\n   However, on the first HTTP request to a server, the user agent will\n   not have received the Accept-CH header and may not take the server\n   preferences into account.  More generally, the server's configuration\n   may have changed since the most recent HTTP request to the server.\n   This document defines a pair of mechanisms to resolve this:\n\n   1.  an HTTP response header, Critical-CH, for the server to instruct\n       the user agent to retry the request\n\n   2.  an alternate delivery mechanism for Accept-CH in HTTP/2\n       [<a href=\"/doc/html/rfc7540\" title=\"&quot;Hypertext Transfer Protocol Version 2 (HTTP/2)&quot;\">RFC7540</a>], which can avoid the performance hit of a retry in most\n       cases\n\n<span><a id=\"section-2\" href=\"#section-2\">2</a>.  Conventions and Definitions</span>\n\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described in <a href=\"/doc/html/bcp14\">BCP</a>\n   <a href=\"/doc/html/bcp14\">14</a> [<a href=\"/doc/html/rfc2119\" title=\"&quot;Key words for use in RFCs to Indicate Requirement Levels&quot;\">RFC2119</a>] [<a href=\"/doc/html/rfc8174\" title=\"&quot;Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words&quot;\">RFC8174</a>] when, and only when, they appear in all\n   capitals, as shown here.\n\n   This document uses the Augmented Backus-Naur Form (ABNF) notation of\n   [<a href=\"/doc/html/rfc5234\" title=\"&quot;Augmented BNF for Syntax Specifications: ABNF&quot;\">RFC5234</a>].\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 2]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-3\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n<span><a id=\"section-3\" href=\"#section-3\">3</a>.  The Critical-CH Response Header Field</span>\n\n   When a user agent requests a resource based on a missing or outdated\n   Accept-CH value, it may not send a desired request header field.\n   Neither user agent nor server has enough information to reliably and\n   efficiently recover from this situation.  The server can observe that\n   the header is missing, but the user agent may not have supported the\n   header, or may have chosen not to send it.  Triggering a new request\n   in these cases would risk an infinite loop or an unnecessary round-\n   trip.\n\n   Conversely, the user agent can observe that a request header appears\n   in the Accept-CH (Section 3.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>]) and\n   Vary (<a href=\"/doc/html/rfc7231#section-7.1.4\">Section&nbsp;7.1.4 of [RFC7231]</a>) response header fields.  However,\n   retrying based on this information would waste resources if the\n   resource only used the Client Hint as an optional optimization.\n\n   This document introduces critical Client Hints.  These are the Client\n   Hints which meaningfully change the resulting resource.  For example,\n   a server may use the Device-Memory Client Hint [<a href=\"#ref-DEVICE-MEMORY\">DEVICE-MEMORY</a>] to\n   select simple and complex variants of a resource to different user\n   agents.  Such a resource should be fetched consistently across page\n   loads to avoid jarring user-visible switches.\n\n   The server specifies critical Client Hints with the Critical-CH\n   response header field.  It is a Structured Header\n   [<a href=\"#ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>] whose value MUST be an sf-list\n   (Section 3.1 of [<a href=\"#ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>]) whose members\n   are tokens (Section 3.3.4 of [<a href=\"#ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>]).\n   Its ABNF is:\n\n     Critical-CH = sf-list\n\n   For example:\n\n     Critical-CH: Sec-CH-Example, Sec-CH-Example-2\n\n   Each token listed in the Critical-CH header SHOULD additionally be\n   present in the Accept-CH and Vary response headers.\n\n   When a user agent receives an HTTP response containing a Critical-CH\n   header, it first processes the Accept-CH header as described in\n   Section 3.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].  It then performs the\n   following steps:\n\n   1.  If the request did not use a safe method (<a href=\"/doc/html/rfc7231#section-4.2.1\">Section&nbsp;4.2.1 of\n       [RFC7231]</a>), ignore the Critical-CH header and continue processing\n       the response as usual.\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 3]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-4\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   2.  If the response was already the result of a retry, ignore the\n       Critical-CH header and continue processing the response as usual.\n\n   3.  Determine the Client Hints that would have been sent given the\n       updated Accept-CH value, incorporating the user agent's local\n       policy and user preferences.  See also Section 2.1 of\n       [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].\n\n   4.  Compare this result to the Client Hints which were sent.  If any\n       Client Hint listed in the Critical-CH header was not previously\n       sent and would now have been sent, retry the request with the new\n       preferences.  Otherwise, continue processing the response as\n       usual.\n\n   Note this procedure does not cause the user agent to send Client\n   Hints it would not otherwise send.\n\n<span><a id=\"section-3.1\" href=\"#section-3.1\">3.1</a>.  Example</span>\n\n   For example, if the user agent loads https://example.com with no\n   knowledge of the server's Accept-CH preferences, it may send the\n   following response:\n\n     GET / HTTP/1.1\n     Host: example.com\n\n     HTTP/1.1 200 OK\n     Content-Type: text/html\n     Accept-CH: Sec-CH-Example, Sec-CH-Example-2\n     Vary: Sec-CH-Example\n     Critical-CH: Sec-CH-Example\n\n   In this example, the server, across the whole origin, uses both Sec-\n   CH-Example and Sec-CH-Example-2 Client Hints.  However, this resource\n   only uses Sec-CH-Example, which it considers critical.\n\n   The user agent now processes the Accept-CH header and determines it\n   would have sent both headers.  Sec-CH-Example is listed in Critical-\n   CH, so the user agent retries the request, and receives a more\n   specific response.\n\n\n\n\n\n\n\n\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 4]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-5\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n     GET / HTTP/1.1\n     Host: example.com\n     Sec-CH-Example: 1\n     Sec-CH-Example-2: 2\n\n     HTTP/1.1 200 OK\n     Content-Type: text/html\n     Accept-CH: Sec-CH-Example, Sec-CH-Example-2\n     Vary: Sec-CH-Example\n     Critical-CH: Sec-CH-Example\n\n<span><a id=\"section-4\" href=\"#section-4\">4</a>.  The ACCEPT_CH HTTP/2 Frame</span>\n\n   While Critical-CH header provides reliability, it requires a retry on\n   some requests.  This document additionally introduces the ACCEPT_CH\n   HTTP/2 frame as an optimization so the server's Client Hint\n   preferences are usually available before the client's first request.\n\n   [[TODO: Alternatively, is it time to revive <a href=\"/doc/html/draft-bishop-httpbis-extended-settings\">draft-bishop-httpbis-</a>\n   <a href=\"/doc/html/draft-bishop-httpbis-extended-settings\">extended-settings</a>?]]\n\n   The ACCEPT_CH frame type is TBD (decimal TBD) and contains one or\n   more entries, each consisting of a pair of length-delimited strings:\n\n   +-------------------------------+\n   |         Origin-Len (16)       |\n   +-------------------------------+-------------------------------+\n   |         Origin                                              ...\n   +-------------------------------+-------------------------------+\n   |         Accept-CH-Len (16)    |\n   +-------------------------------+-------------------------------+\n   |         Accept-CH-Value                                     ...\n   +---------------------------------------------------------------+\n\n   The fields are defined as follows:\n\n   Origin-Len:  An unsigned, 16-bit integer indicating the length, in\n      octets, of the Origin field.\n\n   Origin:  A sequence of characters containing the ASCII serialization\n      of an origin (<a href=\"/doc/html/rfc6454#section-6.2\">Section&nbsp;6.2 of [RFC6454]</a>) that the sender is\n      providing an Accept-CH value for.\n\n   Accept-CH-Len:  An unsigned, 16-bit integer indicating the length, in\n      octets, of the Accept-CH-Value field.\n\n   Accept-CH-Value:  A sequence of characters containing the Accept-CH\n      value for the corresponding origin.  This value MUST satisfy the\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 5]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-6\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n      Accept-CH ABNF defined in Section 3.1 of\n      [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].\n\n   HTTP/2 Servers which request Client Hints SHOULD send an ACCEPT_CH\n   frame as early as possible.  Connections using TLS [<a href=\"/doc/html/rfc8446\" title=\"&quot;The Transport Layer Security (TLS) Protocol Version 1.3&quot;\">RFC8446</a>] which\n   negotiate the Application Layer Protocol Settings (ALPS)\n   [<a href=\"#ref-I-D.vvv-tls-alps\">I-D.vvv-tls-alps</a>] extension SHOULD include the ACCEPT_CH frame in\n   the ALPS value as described in [<a href=\"#ref-I-D.vvv-httpbis-alps\">I-D.vvv-httpbis-alps</a>].  This ensures\n   the information is available to the user agent when it makes the\n   first request.\n\n   User agents MUST NOT send ACCEPT_CH frames.  Servers which receive an\n   ACCEPT_CH frame MUST respond with a connection error (<a href=\"/doc/html/rfc7540#section-5.4.1\">Section&nbsp;5.4.1\n   of [RFC7540]</a>) of type PROTOCOL_ERROR.\n\n   ACCEPT_CH frames always apply to a single connection, never a single\n   stream.  The identifier in the ACCEPT_CH frame MUST be zero.  The\n   flags field of an ACCEPT_CH field is unused and MUST be zero.  If a\n   user agent receives an ACCEPT_CH frame whose stream identifier or\n   flags field is non-zero, it MUST respond with a connection error of\n   type PROTOCOL_ERROR.\n\n<span><a id=\"section-4.1\" href=\"#section-4.1\">4.1</a>.  Processing ACCEPT_CH Frames</span>\n\n   The user agent remembers the most recently received ACCEPT_CH frame\n   for each connection.  When it receives a new ACCEPT_CH frame, either\n   in application data or ALPS, it overwrites this value.  As this is an\n   optimization, the user agent MAY bound the size and ignore or forget\n   entries to reduce resource usage.\n\n   When the user agent makes an HTTP request to a particular origin over\n   an HTTP/2 connection, it looks up the origin in the remembered\n   ACCEPT_CH, if any.  If it finds a match, it determines additional\n   Client Hints to send, incorporating its local policy and user\n   preferences.  See Section 2.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>].\n\n   If there are additional Client Hints, the user agent restarts the\n   request with updated headers.  The connection has already been\n   established, so this restart does not incur any additional network\n   latency.  Note it may result in a different secondary HTTP cache key\n   (see <a href=\"/doc/html/rfc7234#section-4.1\">Section&nbsp;4.1 of [RFC7234]</a>) and select a different cached\n   response.  If the new cached response does not need revalidation, it\n   may not use the connection at all.\n\n   User agents MUST NOT process Client Hint preferences in ACCEPT_CH\n   frames corresponding to origins for which the connection is not\n   authoritative.  Note the procedure above implicitly satisfies this by\n   deferring processing to after the connection has been chosen for a\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 6]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-7\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   corresponding request.  Unauthoritative origins and other unmatched\n   entries are ignored.\n\n   [[TODO: Some variations on this behavior we could choose instead:\n\n   o  Do new ACCEPT_CH frames override the whole set or implement some\n      kind of update?  Overriding the whole set seems simplest and most\n      consistent with an EXTENDED_SETTINGS variant.\n\n   o  Should the user agent reject the ACCEPT_CH frame if there are\n      unexpected origins in there?  Deferring avoids needing to worry\n      about this, and ignoring the unused ones may interact better with\n      secondary certs.\n\n   o  Should ACCEPT_CH frames be deferred or just written to the cache\n      when received?  Deferred simplifies reasoning about bad origins,\n      predictive connections, etc., but means interactions between\n      ACCEPT_CH and Accept-CH are more complex (see below).\n\n   o  How should ACCEPT_CH and Accept-CH interact?  The document\n      currently proposes unioning them, which is easy.  Accept-CH first\n      would work, but unnecessarily ignore newer connection-level\n      ACCEPT_CHs.  ACCEPT_CH would not; a stale connection-level\n      preference would get stuck.  Whichever is received earlier would\n      also work, but requires tracking timestamps if deferred (see\n      above).]]\n\n<span><a id=\"section-4.2\" href=\"#section-4.2\">4.2</a>.  Interaction with Critical-CH</span>\n\n   The ACCEPT_CH frame avoids a round-trip, so relying on it over\n   Critical-CH would be preferable.  However, this is not always\n   possible:\n\n   o  The server may be running older software without support for\n      ACCEPT_CH or ALPS.\n\n   o  The server's Accept-CH preferences may change while existing\n      connections are open.  Those connections will have outdated\n      ACCEPT_CH frames.  While the server could send a new one, the\n      frame may not arrive in time for the next request.  Moreover, if\n      the HTTP serving frontend is an intermediary like a CDN, it may\n      not be proactively notified of origin server changes.\n\n   o  HTTP/2 allows connection reuse across multiple origins\n      (<a href=\"/doc/html/rfc7540#section-9.1.1\">Section&nbsp;9.1.1 of [RFC7540]</a>).  Some origins may not be listed in\n      the ACCEPT_CH frame, particularly if the server used a wildcard\n      X.509 certificate.\n\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 7]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-8\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   Thus this document defines both mechanisms.  Critical-CH provides\n   reliable Client Hint delivery, while the ACCEPT_CH frame avoids the\n   retry in most cases.\n\n<span><a id=\"section-5\" href=\"#section-5\">5</a>.  Security Considerations</span>\n\n   Request header fields may expose sensitive information about the\n   user's environment.  Section 4.1 of [<a href=\"#ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>]\n   discusses some of these considerations.  The document augments the\n   capabilities of Client Hints, but does not change these\n   considerations.  The procedure described in <a href=\"#section-3\">Section 3</a> does not result\n   in the user agent sending request headers it otherwise would not\n   have.\n\n   The ACCEPT_CH frame does introduce a new way for HTTP/2 connections\n   to make assertions about origins they are not authoritative for, but\n   the procedure in <a href=\"#section-4.1\">Section 4.1</a> defers processing until after the user\n   agent has decided to use the connection for a particular request\n   (<a href=\"/doc/html/rfc7540#section-9.1.1\">Section&nbsp;9.1.1 of [RFC7540]</a>).  The user agent will thus only\n   information in an ACCEPT_CH frame if it considers the connection\n   authoritative for the origin.\n\n<span><a id=\"section-6\" href=\"#section-6\">6</a>.  IANA Considerations</span>\n\n   This specification adds an entry to the \"HTTP/2 Frame Type\" registry\n   with the following parameters:\n\n   o  Frame Type: ACCEPT_CH\n\n   o  Code: TBD\n\n   o  Allowed in ALPS: Yes\n\n   o  Reference: [[this document]]\n\n   [[TODO: As of writing, the HTTP/2 Frame Type registry does not\n   include an Allowed in ALPS column.  [<a href=\"#ref-I-D.vvv-httpbis-alps\">I-D.vvv-httpbis-alps</a>], as of\n   writing, will add it.  This document should be updated as that design\n   evolves.]]\n\n<span><a id=\"section-7\" href=\"#section-7\">7</a>.  References</span>\n\n<span><a id=\"section-7.1\" href=\"#section-7.1\">7.1</a>.  Normative References</span>\n\n   [<a id=\"ref-I-D.ietf-httpbis-client-hints\">I-D.ietf-httpbis-client-hints</a>]\n              Grigorik, I. and Y. Weiss, \"HTTP Client Hints\", <a href=\"/doc/html/draft-ietf-httpbis-client-hints-15\">draft-</a>\n              <a href=\"/doc/html/draft-ietf-httpbis-client-hints-15\">ietf-httpbis-client-hints-15</a> (work in progress), July\n              2020.\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 8]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-9\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   [<a id=\"ref-I-D.ietf-httpbis-header-structure\">I-D.ietf-httpbis-header-structure</a>]\n              Nottingham, M. and P. Kamp, \"Structured Field Values for\n              HTTP\", <a href=\"/doc/html/draft-ietf-httpbis-header-structure-19\">draft-ietf-httpbis-header-structure-19</a> (work in\n              progress), June 2020.\n\n   [<a id=\"ref-I-D.vvv-httpbis-alps\">I-D.vvv-httpbis-alps</a>]\n              Vasiliev, V., \"Using TLS Application-Layer Protocol\n              Settings (ALPS) in HTTP\", <a href=\"/doc/html/draft-vvv-httpbis-alps-00\">draft-vvv-httpbis-alps-00</a> (work\n              in progress), July 2020.\n\n   [<a id=\"ref-I-D.vvv-tls-alps\">I-D.vvv-tls-alps</a>]\n              Vasiliev, V., \"TLS Application-Layer Protocol Settings\n              Extension\", <a href=\"/doc/html/draft-vvv-tls-alps-00\">draft-vvv-tls-alps-00</a> (work in progress), June\n              2020.\n\n   [<a id=\"ref-RFC2119\">RFC2119</a>]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\", <a href=\"/doc/html/bcp14\">BCP 14</a>, <a href=\"/doc/html/rfc2119\">RFC 2119</a>,\n              DOI 10.17487/RFC2119, March 1997,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc2119\">https://www.rfc-editor.org/info/rfc2119</a>&gt;.\n\n   [<a id=\"ref-RFC5234\">RFC5234</a>]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications: ABNF\", STD 68, <a href=\"/doc/html/rfc5234\">RFC 5234</a>,\n              DOI 10.17487/RFC5234, January 2008,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc5234\">https://www.rfc-editor.org/info/rfc5234</a>&gt;.\n\n   [<a id=\"ref-RFC6454\">RFC6454</a>]  Barth, A., \"The Web Origin Concept\", <a href=\"/doc/html/rfc6454\">RFC 6454</a>,\n              DOI 10.17487/RFC6454, December 2011,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc6454\">https://www.rfc-editor.org/info/rfc6454</a>&gt;.\n\n   [<a id=\"ref-RFC7231\">RFC7231</a>]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol (HTTP/1.1): Semantics and Content\", <a href=\"/doc/html/rfc7231\">RFC 7231</a>,\n              DOI 10.17487/RFC7231, June 2014,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc7231\">https://www.rfc-editor.org/info/rfc7231</a>&gt;.\n\n   [<a id=\"ref-RFC7234\">RFC7234</a>]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,\n              Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Caching\",\n              <a href=\"/doc/html/rfc7234\">RFC 7234</a>, DOI 10.17487/RFC7234, June 2014,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc7234\">https://www.rfc-editor.org/info/rfc7234</a>&gt;.\n\n   [<a id=\"ref-RFC7540\">RFC7540</a>]  Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n              Transfer Protocol Version 2 (HTTP/2)\", <a href=\"/doc/html/rfc7540\">RFC 7540</a>,\n              DOI 10.17487/RFC7540, May 2015,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc7540\">https://www.rfc-editor.org/info/rfc7540</a>&gt;.\n\n   [<a id=\"ref-RFC8174\">RFC8174</a>]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in <a href=\"/doc/html/rfc2119\">RFC</a>\n              <a href=\"/doc/html/rfc2119\">2119</a> Key Words\", <a href=\"/doc/html/bcp14\">BCP 14</a>, <a href=\"/doc/html/rfc8174\">RFC 8174</a>, DOI 10.17487/RFC8174,\n              May 2017, &lt;<a href=\"https://www.rfc-editor.org/info/rfc8174\">https://www.rfc-editor.org/info/rfc8174</a>&gt;.\n\n\n\n\n<span>Benjamin                Expires February 28, 2021               [Page 9]</span></pre>\n<hr><!--NewPage--><pre><span id=\"page-10\"></span>\n<span>Internet-Draft           Client Hint Reliability             August 2020</span>\n\n\n   [<a id=\"ref-RFC8446\">RFC8446</a>]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n              Version 1.3\", <a href=\"/doc/html/rfc8446\">RFC 8446</a>, DOI 10.17487/RFC8446, August 2018,\n              &lt;<a href=\"https://www.rfc-editor.org/info/rfc8446\">https://www.rfc-editor.org/info/rfc8446</a>&gt;.\n\n<span><a id=\"section-7.2\" href=\"#section-7.2\">7.2</a>.  Informative References</span>\n\n   [<a id=\"ref-DEVICE-MEMORY\">DEVICE-MEMORY</a>]\n              Panicker, S., \"Device Memory\", n.d.,\n              &lt;<a href=\"https://w3c.github.io/device-memory/\">https://w3c.github.io/device-memory/</a>&gt;.\n\nAcknowledgments\n\n   This document has benefited from contributions and suggestions from\n   Ilya Grigorik, Nick Harper, Matt Menke, Aaron Tagliaboschi, Victor\n   Vasiliev, Yoav Weiss, and others.\n\nAuthor's Address\n\n   David Benjamin\n   Google LLC\n\n   Email: davidben@google.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBenjamin                Expires February 28, 2021              [Page 10]\n</pre>\n    </div></div>","textContent":"\n    HTTP                                                         D. Benjamin\nInternet-Draft                                                Google LLC\nUpdates: ietf-httpbis-client-hints (if                   August 27, 2020\n         approved)\nIntended status: Experimental\nExpires: February 28, 2021\n\n\n                        Client Hint Reliability\n             draft-davidben-http-client-hint-reliability-01\n\nAbstract\n\n   This document defines the Critical-CH HTTP response header, and the\n   ACCEPT_CH HTTP/2 frame to allow HTTP servers to reliably specify\n   their Client Hint preferences, with minimal performance overhead.\n\nStatus of This Memo\n\n   This Internet-Draft is submitted in full conformance with the\n   provisions of BCP 78 and BCP 79.\n\n   Internet-Drafts are working documents of the Internet Engineering\n   Task Force (IETF).  Note that other groups may also distribute\n   working documents as Internet-Drafts.  The list of current Internet-\n   Drafts is at https://datatracker.ietf.org/drafts/current/.\n\n   Internet-Drafts are draft documents valid for a maximum of six months\n   and may be updated, replaced, or obsoleted by other documents at any\n   time.  It is inappropriate to use Internet-Drafts as reference\n   material or to cite them other than as \"work in progress.\"\n\n   This Internet-Draft will expire on February 28, 2021.\n\nCopyright Notice\n\n   Copyright (c) 2020 IETF Trust and the persons identified as the\n   document authors.  All rights reserved.\n\n   This document is subject to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication of this document.  Please review these documents\n   carefully, as they describe your rights and restrictions with respect\n   to this document.  Code Components extracted from this document must\n   include Simplified BSD License text as described in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty as\n   described in the Simplified BSD License.\n\n\n\nBenjamin                Expires February 28, 2021               [Page 1]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\nTable of Contents\n\n   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2\n   2.  Conventions and Definitions . . . . . . . . . . . . . . . . .   2\n   3.  The Critical-CH Response Header Field . . . . . . . . . . . .   3\n     3.1.  Example . . . . . . . . . . . . . . . . . . . . . . . . .   4\n   4.  The ACCEPT_CH HTTP/2 Frame  . . . . . . . . . . . . . . . . .   5\n     4.1.  Processing ACCEPT_CH Frames . . . . . . . . . . . . . . .   6\n     4.2.  Interaction with Critical-CH  . . . . . . . . . . . . . .   7\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   8\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8\n   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   8\n     7.2.  Informative References  . . . . . . . . . . . . . . . . .  10\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  10\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  10\n\n1.  Introduction\n\n   [I-D.ietf-httpbis-client-hints] defines a response header, Accept-CH,\n   for servers to advertise a set of request headers used for proactive\n   content negotiation.  This allows user agents to send request headers\n   only when used, improving their performance overhead as well as\n   reducing passive fingerprinting surface.\n\n   However, on the first HTTP request to a server, the user agent will\n   not have received the Accept-CH header and may not take the server\n   preferences into account.  More generally, the server's configuration\n   may have changed since the most recent HTTP request to the server.\n   This document defines a pair of mechanisms to resolve this:\n\n   1.  an HTTP response header, Critical-CH, for the server to instruct\n       the user agent to retry the request\n\n   2.  an alternate delivery mechanism for Accept-CH in HTTP/2\n       [RFC7540], which can avoid the performance hit of a retry in most\n       cases\n\n2.  Conventions and Definitions\n\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals, as shown here.\n\n   This document uses the Augmented Backus-Naur Form (ABNF) notation of\n   [RFC5234].\n\n\n\nBenjamin                Expires February 28, 2021               [Page 2]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n3.  The Critical-CH Response Header Field\n\n   When a user agent requests a resource based on a missing or outdated\n   Accept-CH value, it may not send a desired request header field.\n   Neither user agent nor server has enough information to reliably and\n   efficiently recover from this situation.  The server can observe that\n   the header is missing, but the user agent may not have supported the\n   header, or may have chosen not to send it.  Triggering a new request\n   in these cases would risk an infinite loop or an unnecessary round-\n   trip.\n\n   Conversely, the user agent can observe that a request header appears\n   in the Accept-CH (Section 3.1 of [I-D.ietf-httpbis-client-hints]) and\n   Vary (Section 7.1.4 of [RFC7231]) response header fields.  However,\n   retrying based on this information would waste resources if the\n   resource only used the Client Hint as an optional optimization.\n\n   This document introduces critical Client Hints.  These are the Client\n   Hints which meaningfully change the resulting resource.  For example,\n   a server may use the Device-Memory Client Hint [DEVICE-MEMORY] to\n   select simple and complex variants of a resource to different user\n   agents.  Such a resource should be fetched consistently across page\n   loads to avoid jarring user-visible switches.\n\n   The server specifies critical Client Hints with the Critical-CH\n   response header field.  It is a Structured Header\n   [I-D.ietf-httpbis-header-structure] whose value MUST be an sf-list\n   (Section 3.1 of [I-D.ietf-httpbis-header-structure]) whose members\n   are tokens (Section 3.3.4 of [I-D.ietf-httpbis-header-structure]).\n   Its ABNF is:\n\n     Critical-CH = sf-list\n\n   For example:\n\n     Critical-CH: Sec-CH-Example, Sec-CH-Example-2\n\n   Each token listed in the Critical-CH header SHOULD additionally be\n   present in the Accept-CH and Vary response headers.\n\n   When a user agent receives an HTTP response containing a Critical-CH\n   header, it first processes the Accept-CH header as described in\n   Section 3.1 of [I-D.ietf-httpbis-client-hints].  It then performs the\n   following steps:\n\n   1.  If the request did not use a safe method (Section 4.2.1 of\n       [RFC7231]), ignore the Critical-CH header and continue processing\n       the response as usual.\n\n\n\nBenjamin                Expires February 28, 2021               [Page 3]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n   2.  If the response was already the result of a retry, ignore the\n       Critical-CH header and continue processing the response as usual.\n\n   3.  Determine the Client Hints that would have been sent given the\n       updated Accept-CH value, incorporating the user agent's local\n       policy and user preferences.  See also Section 2.1 of\n       [I-D.ietf-httpbis-client-hints].\n\n   4.  Compare this result to the Client Hints which were sent.  If any\n       Client Hint listed in the Critical-CH header was not previously\n       sent and would now have been sent, retry the request with the new\n       preferences.  Otherwise, continue processing the response as\n       usual.\n\n   Note this procedure does not cause the user agent to send Client\n   Hints it would not otherwise send.\n\n3.1.  Example\n\n   For example, if the user agent loads https://example.com with no\n   knowledge of the server's Accept-CH preferences, it may send the\n   following response:\n\n     GET / HTTP/1.1\n     Host: example.com\n\n     HTTP/1.1 200 OK\n     Content-Type: text/html\n     Accept-CH: Sec-CH-Example, Sec-CH-Example-2\n     Vary: Sec-CH-Example\n     Critical-CH: Sec-CH-Example\n\n   In this example, the server, across the whole origin, uses both Sec-\n   CH-Example and Sec-CH-Example-2 Client Hints.  However, this resource\n   only uses Sec-CH-Example, which it considers critical.\n\n   The user agent now processes the Accept-CH header and determines it\n   would have sent both headers.  Sec-CH-Example is listed in Critical-\n   CH, so the user agent retries the request, and receives a more\n   specific response.\n\n\n\n\n\n\n\n\n\n\n\nBenjamin                Expires February 28, 2021               [Page 4]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n     GET / HTTP/1.1\n     Host: example.com\n     Sec-CH-Example: 1\n     Sec-CH-Example-2: 2\n\n     HTTP/1.1 200 OK\n     Content-Type: text/html\n     Accept-CH: Sec-CH-Example, Sec-CH-Example-2\n     Vary: Sec-CH-Example\n     Critical-CH: Sec-CH-Example\n\n4.  The ACCEPT_CH HTTP/2 Frame\n\n   While Critical-CH header provides reliability, it requires a retry on\n   some requests.  This document additionally introduces the ACCEPT_CH\n   HTTP/2 frame as an optimization so the server's Client Hint\n   preferences are usually available before the client's first request.\n\n   [[TODO: Alternatively, is it time to revive draft-bishop-httpbis-\n   extended-settings?]]\n\n   The ACCEPT_CH frame type is TBD (decimal TBD) and contains one or\n   more entries, each consisting of a pair of length-delimited strings:\n\n   +-------------------------------+\n   |         Origin-Len (16)       |\n   +-------------------------------+-------------------------------+\n   |         Origin                                              ...\n   +-------------------------------+-------------------------------+\n   |         Accept-CH-Len (16)    |\n   +-------------------------------+-------------------------------+\n   |         Accept-CH-Value                                     ...\n   +---------------------------------------------------------------+\n\n   The fields are defined as follows:\n\n   Origin-Len:  An unsigned, 16-bit integer indicating the length, in\n      octets, of the Origin field.\n\n   Origin:  A sequence of characters containing the ASCII serialization\n      of an origin (Section 6.2 of [RFC6454]) that the sender is\n      providing an Accept-CH value for.\n\n   Accept-CH-Len:  An unsigned, 16-bit integer indicating the length, in\n      octets, of the Accept-CH-Value field.\n\n   Accept-CH-Value:  A sequence of characters containing the Accept-CH\n      value for the corresponding origin.  This value MUST satisfy the\n\n\n\nBenjamin                Expires February 28, 2021               [Page 5]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n      Accept-CH ABNF defined in Section 3.1 of\n      [I-D.ietf-httpbis-client-hints].\n\n   HTTP/2 Servers which request Client Hints SHOULD send an ACCEPT_CH\n   frame as early as possible.  Connections using TLS [RFC8446] which\n   negotiate the Application Layer Protocol Settings (ALPS)\n   [I-D.vvv-tls-alps] extension SHOULD include the ACCEPT_CH frame in\n   the ALPS value as described in [I-D.vvv-httpbis-alps].  This ensures\n   the information is available to the user agent when it makes the\n   first request.\n\n   User agents MUST NOT send ACCEPT_CH frames.  Servers which receive an\n   ACCEPT_CH frame MUST respond with a connection error (Section 5.4.1\n   of [RFC7540]) of type PROTOCOL_ERROR.\n\n   ACCEPT_CH frames always apply to a single connection, never a single\n   stream.  The identifier in the ACCEPT_CH frame MUST be zero.  The\n   flags field of an ACCEPT_CH field is unused and MUST be zero.  If a\n   user agent receives an ACCEPT_CH frame whose stream identifier or\n   flags field is non-zero, it MUST respond with a connection error of\n   type PROTOCOL_ERROR.\n\n4.1.  Processing ACCEPT_CH Frames\n\n   The user agent remembers the most recently received ACCEPT_CH frame\n   for each connection.  When it receives a new ACCEPT_CH frame, either\n   in application data or ALPS, it overwrites this value.  As this is an\n   optimization, the user agent MAY bound the size and ignore or forget\n   entries to reduce resource usage.\n\n   When the user agent makes an HTTP request to a particular origin over\n   an HTTP/2 connection, it looks up the origin in the remembered\n   ACCEPT_CH, if any.  If it finds a match, it determines additional\n   Client Hints to send, incorporating its local policy and user\n   preferences.  See Section 2.1 of [I-D.ietf-httpbis-client-hints].\n\n   If there are additional Client Hints, the user agent restarts the\n   request with updated headers.  The connection has already been\n   established, so this restart does not incur any additional network\n   latency.  Note it may result in a different secondary HTTP cache key\n   (see Section 4.1 of [RFC7234]) and select a different cached\n   response.  If the new cached response does not need revalidation, it\n   may not use the connection at all.\n\n   User agents MUST NOT process Client Hint preferences in ACCEPT_CH\n   frames corresponding to origins for which the connection is not\n   authoritative.  Note the procedure above implicitly satisfies this by\n   deferring processing to after the connection has been chosen for a\n\n\n\nBenjamin                Expires February 28, 2021               [Page 6]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n   corresponding request.  Unauthoritative origins and other unmatched\n   entries are ignored.\n\n   [[TODO: Some variations on this behavior we could choose instead:\n\n   o  Do new ACCEPT_CH frames override the whole set or implement some\n      kind of update?  Overriding the whole set seems simplest and most\n      consistent with an EXTENDED_SETTINGS variant.\n\n   o  Should the user agent reject the ACCEPT_CH frame if there are\n      unexpected origins in there?  Deferring avoids needing to worry\n      about this, and ignoring the unused ones may interact better with\n      secondary certs.\n\n   o  Should ACCEPT_CH frames be deferred or just written to the cache\n      when received?  Deferred simplifies reasoning about bad origins,\n      predictive connections, etc., but means interactions between\n      ACCEPT_CH and Accept-CH are more complex (see below).\n\n   o  How should ACCEPT_CH and Accept-CH interact?  The document\n      currently proposes unioning them, which is easy.  Accept-CH first\n      would work, but unnecessarily ignore newer connection-level\n      ACCEPT_CHs.  ACCEPT_CH would not; a stale connection-level\n      preference would get stuck.  Whichever is received earlier would\n      also work, but requires tracking timestamps if deferred (see\n      above).]]\n\n4.2.  Interaction with Critical-CH\n\n   The ACCEPT_CH frame avoids a round-trip, so relying on it over\n   Critical-CH would be preferable.  However, this is not always\n   possible:\n\n   o  The server may be running older software without support for\n      ACCEPT_CH or ALPS.\n\n   o  The server's Accept-CH preferences may change while existing\n      connections are open.  Those connections will have outdated\n      ACCEPT_CH frames.  While the server could send a new one, the\n      frame may not arrive in time for the next request.  Moreover, if\n      the HTTP serving frontend is an intermediary like a CDN, it may\n      not be proactively notified of origin server changes.\n\n   o  HTTP/2 allows connection reuse across multiple origins\n      (Section 9.1.1 of [RFC7540]).  Some origins may not be listed in\n      the ACCEPT_CH frame, particularly if the server used a wildcard\n      X.509 certificate.\n\n\n\n\nBenjamin                Expires February 28, 2021               [Page 7]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n   Thus this document defines both mechanisms.  Critical-CH provides\n   reliable Client Hint delivery, while the ACCEPT_CH frame avoids the\n   retry in most cases.\n\n5.  Security Considerations\n\n   Request header fields may expose sensitive information about the\n   user's environment.  Section 4.1 of [I-D.ietf-httpbis-client-hints]\n   discusses some of these considerations.  The document augments the\n   capabilities of Client Hints, but does not change these\n   considerations.  The procedure described in Section 3 does not result\n   in the user agent sending request headers it otherwise would not\n   have.\n\n   The ACCEPT_CH frame does introduce a new way for HTTP/2 connections\n   to make assertions about origins they are not authoritative for, but\n   the procedure in Section 4.1 defers processing until after the user\n   agent has decided to use the connection for a particular request\n   (Section 9.1.1 of [RFC7540]).  The user agent will thus only\n   information in an ACCEPT_CH frame if it considers the connection\n   authoritative for the origin.\n\n6.  IANA Considerations\n\n   This specification adds an entry to the \"HTTP/2 Frame Type\" registry\n   with the following parameters:\n\n   o  Frame Type: ACCEPT_CH\n\n   o  Code: TBD\n\n   o  Allowed in ALPS: Yes\n\n   o  Reference: [[this document]]\n\n   [[TODO: As of writing, the HTTP/2 Frame Type registry does not\n   include an Allowed in ALPS column.  [I-D.vvv-httpbis-alps], as of\n   writing, will add it.  This document should be updated as that design\n   evolves.]]\n\n7.  References\n\n7.1.  Normative References\n\n   [I-D.ietf-httpbis-client-hints]\n              Grigorik, I. and Y. Weiss, \"HTTP Client Hints\", draft-\n              ietf-httpbis-client-hints-15 (work in progress), July\n              2020.\n\n\n\nBenjamin                Expires February 28, 2021               [Page 8]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n   [I-D.ietf-httpbis-header-structure]\n              Nottingham, M. and P. Kamp, \"Structured Field Values for\n              HTTP\", draft-ietf-httpbis-header-structure-19 (work in\n              progress), June 2020.\n\n   [I-D.vvv-httpbis-alps]\n              Vasiliev, V., \"Using TLS Application-Layer Protocol\n              Settings (ALPS) in HTTP\", draft-vvv-httpbis-alps-00 (work\n              in progress), July 2020.\n\n   [I-D.vvv-tls-alps]\n              Vasiliev, V., \"TLS Application-Layer Protocol Settings\n              Extension\", draft-vvv-tls-alps-00 (work in progress), June\n              2020.\n\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\n   [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n\n   [RFC6454]  Barth, A., \"The Web Origin Concept\", RFC 6454,\n              DOI 10.17487/RFC6454, December 2011,\n              <https://www.rfc-editor.org/info/rfc6454>.\n\n   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n              Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n              DOI 10.17487/RFC7231, June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n\n   [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,\n              Ed., \"Hypertext Transfer Protocol (HTTP/1.1): Caching\",\n              RFC 7234, DOI 10.17487/RFC7234, June 2014,\n              <https://www.rfc-editor.org/info/rfc7234>.\n\n   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., \"Hypertext\n              Transfer Protocol Version 2 (HTTP/2)\", RFC 7540,\n              DOI 10.17487/RFC7540, May 2015,\n              <https://www.rfc-editor.org/info/rfc7540>.\n\n   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\n\n\n\nBenjamin                Expires February 28, 2021               [Page 9]\n\nInternet-Draft           Client Hint Reliability             August 2020\n\n\n   [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n              Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n              <https://www.rfc-editor.org/info/rfc8446>.\n\n7.2.  Informative References\n\n   [DEVICE-MEMORY]\n              Panicker, S., \"Device Memory\", n.d.,\n              <https://w3c.github.io/device-memory/>.\n\nAcknowledgments\n\n   This document has benefited from contributions and suggestions from\n   Ilya Grigorik, Nick Harper, Matt Menke, Aaron Tagliaboschi, Victor\n   Vasiliev, Yoav Weiss, and others.\n\nAuthor's Address\n\n   David Benjamin\n   Google LLC\n\n   Email: davidben@google.com\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBenjamin                Expires February 28, 2021              [Page 10]\n\n    ","length":21045,"excerpt":"Client Hint Reliability (Internet-Draft, 2020)","byline":null,"dir":null,"siteName":null,"lang":"en"},"finalizedMeta":{"title":"\n  \n    draft-davidben-http-client-hint-reliability-01\n  \n","description":"Client Hint Reliability (Internet-Draft, 2020)","author":false,"creator":"","publisher":false,"date":"2022-04-05T17:38:43.512Z","topics":[]},"jsonLd":{"@type":false,"headline":false,"description":false,"image":[],"mainEntityOfPage":{"@type":false,"@id":false},"datePublished":false,"dateModified":false,"isAccessibleForFree":false,"isPartOf":{"@type":[],"name":false,"productID":false},"discussionUrl":false,"license":false,"author":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false},"publisher":{"@type":false,"name":false,"description":false,"sameAs":false,"logo":{"@type":false,"url":false},"publishingPrinciples":false},"editor":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false}},"twitterObj":false,"status":200,"metadata":{"author":false,"title":"\n  \n    draft-davidben-http-client-hint-reliability-01\n  \n","description":"Client Hint Reliability (Internet-Draft, 2020)","canonical":"https://tools.ietf.org/html/draft-davidben-http-client-hint-reliability-01","keywords":[],"image":false,"firstParagraph":""},"dublinCore":{},"opengraph":{"title":false,"description":false,"url":false,"site_name":false,"locale":false,"type":false,"typeObject":{"published_time":false,"modified_time":false,"author":false,"publisher":false,"section":false,"tag":[]},"image":false},"twitter":{"site":false,"description":false,"card":false,"creator":false,"title":false,"image":false},"archivedData":{"link":false,"wayback":false}}}