{"initialLink":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","sanitizedLink":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","finalLink":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","htmlEmbed":"<script>window.contexterSetup=window.contexterSetup||function(){window.contexterSetupComplete=!0;class ContexterLink extends HTMLAnchorElement{constructor(){super()}connectedCallback(){this.setAttribute(\"target\",\"_blank\")}}customElements.define(\"contexter-link\",ContexterLink,{extends:\"a\"}),customElements.define(\"contexter-inner\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__inner\"}}),customElements.define(\"contexter-thumbnail\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__thumbnail\"}}),customElements.define(\"contexter-byline\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__byline\"}}),customElements.define(\"contexter-keywordset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__keywordset\"}}),customElements.define(\"contexter-linkset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__linkset\"}}),customElements.define(\"contexter-meta\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__meta\"}}),customElements.define(\"contexter-summary\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"p-summary entry-summary\"}}),customElements.define(\"contexter-box-head\",class extends HTMLElement{constructor(){super()}connectedCallback(){this.className=\"contexter-box__head\"}}),customElements.define(\"contexter-box-inner\",class extends HTMLElement{constructor(){super()}connectedCallback(){}});class ContexterBox extends HTMLElement{constructor(){super(),this.first=!0,this.shadow=this.attachShadow({mode:\"open\"})}connectedCallback(){if(this.first){this.first=!1;var style=document.createElement(\"style\"),lightDomStyle=(style.innerHTML=`:host {--background: #f5f6f7;--border: darkblue;--blue: #0000ee;--font-color: black;--inner-border: black;font-family: Franklin,Arial,Helvetica,sans-serif;font-size: 14px;background: var(--background);width: 600px;color: var(--font-color);min-height: 90px;display: block;padding: 8px;border: 1px solid var(--border);cursor: pointer;box-sizing: border-box;margin: 6px;contain: content;margin: 6px auto;}// can only select top-level nodes with slotted::slotted(*) {max-width: 100%;display:block;}::slotted([slot=thumbnail]) {max-width: 100%;display:block;}::slotted([slot=header]) {width: 100%;font-size: 1.25rem;font-weight: bold;display:block;margin-bottom: 6px;}::slotted([slot=author]) {max-width: 50%;font-size: 12px;display:inline-block;float: left;}::slotted([slot=time]) {max-width: 50%;font-size: 12px;display:inline-block;float: right;}::slotted([slot=summary]) {width: 100%;margin-top: 6px;padding: 10px 2px;border-top: 1px solid var(--inner-border);font-size: 15px;display:inline-block;margin-bottom: 6px;}contexter-meta {height: auto;margin-bottom: 4px;width: 100%;display: grid;position: relative;min-height: 16px;grid-template-columns: repeat(2, 1fr);}::slotted([slot=keywords]) {width: 80%;padding: 2px 4px;border-top: 1px solid var(--inner-border);font-size: 11px;display: block;float: right;font-style: italic;text-align: right;grid-column: 2/2;grid-row: 1;align-self: end;justify-self: end;}::slotted([slot=keywords]):empty {border-top: 0px solid var(--inner-border);}::slotted([slot=archive-link]) {font-size: 1em;display: inline;}::slotted([slot=archive-link])::after {content: \"|\";display: inline;color: var(--font-color);text-decoration: none;margin: 0 .5em;}::slotted([slot=read-link]) {font-size: 1em;display: inline;}contexter-linkset {width: 80%;padding: 2px 4px;font-size: 13px;float: left;font-weight: bold;grid-row: 1;grid-column: 1/2;align-self: end;justify-self: start;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {:host {width: 310px;}}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){:host {--background: #354150;--border: #1f2b37;--blue: #55b0ff;--font-color: #ffffff;--inner-border: #787a7c;background: var(--background);border: 1px solid var(--border)}}`,document.createElement(\"style\"));lightDomStyle.innerHTML=`contexter-box {contain: content;}contexter-box .read-link {font-weight: bold;}contexter-box a {color: #0000ee;}contexter-box img {width: 100%;border: 0;padding: 0;margin: 0;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {...}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){contexter-box a {color: #55b0ff;}}`,this.appendChild(lightDomStyle),this.shadow.appendChild(style);const innerContainer=document.createElement(\"contexter-box-inner\"),innerSlotThumbnail=(this.shadow.appendChild(innerContainer),document.createElement(\"slot\")),innerSlotHeader=(innerSlotThumbnail.name=\"thumbnail\",innerContainer.appendChild(innerSlotThumbnail),document.createElement(\"slot\")),innerSlotAuthor=(innerSlotHeader.name=\"header\",innerContainer.appendChild(innerSlotHeader),document.createElement(\"slot\")),innerSlotTime=(innerSlotAuthor.name=\"author\",innerContainer.appendChild(innerSlotAuthor),document.createElement(\"slot\")),innerSlotSummary=(innerSlotTime.name=\"time\",innerContainer.appendChild(innerSlotTime),document.createElement(\"slot\")),metaContainer=(innerSlotSummary.name=\"summary\",innerContainer.appendChild(innerSlotSummary),document.createElement(\"contexter-meta\")),innerSlotInfo=(innerContainer.appendChild(metaContainer),document.createElement(\"slot\")),linkContainer=(innerSlotInfo.name=\"keywords\",metaContainer.appendChild(innerSlotInfo),document.createElement(\"contexter-linkset\")),innerSlotArchiveLink=(metaContainer.appendChild(linkContainer),document.createElement(\"slot\")),innerSlotReadLink=(innerSlotArchiveLink.name=\"archive-link\",linkContainer.appendChild(innerSlotArchiveLink),document.createElement(\"slot\"));innerSlotReadLink.name=\"read-link\",linkContainer.appendChild(innerSlotReadLink),this.className=\"contexter-box\",this.onclick=e=>{if(!e.target.className.includes(\"read-link\")&&!e.target.className.includes(\"title-link\")){const mainLinks=this.querySelectorAll(\"a.main-link\");mainLinks[0].click()}}}}}customElements.define(\"contexter-box\",ContexterBox)},window.contexterSetupComplete||window.contexterSetup();</script><contexter-box class=\"link-card h-entry hentry\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\"><contexter-thumbnail class=\"thumbnail\" slot=\"thumbnail\"></contexter-thumbnail><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><a is=\"contexter-link\" href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" itemprop=\"url\">Privacy Preserving Ad Click Attribution For the Web</a></contexter-box-head></contexter-box-head><contexter-byline class=\"p-author author\" slot=\"author\"><span class=\"p-name byline\" rel=\"author\" itemprop=\"author\">@johnwilander</span></contexter-byline><time class=\"dt-published published\" slot=\"time\" itemprop=\"datePublished\" datetime=\"2019-05-22T20:05:22.000Z\">4/22/2019</time><contexter-summary class=\"p-summary entry-summary\" itemprop=\"abstract\" slot=\"summary\"><p>A typical website is made of numerous components coming from a wide variety of sources.</p></contexter-summary><contexter-keywordset itemprop=\"keywords\" slot=\"keywords\"><span rel=\"category tag\" class=\"p-category\" itemprop=\"keywords\">Privacy</span></contexter-keywordset><a is=\"contexter-link\" href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" class=\"read-link main-link\" itemprop=\"sameAs\" slot=\"read-link\">Read</a></contexter-box>","linkId":"1139559a3154b15a109ba7dce8cb9549f7a84b47","data":{"originalLink":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","sanitizedLink":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","canonical":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","htmlText":"<!DOCTYPE html>\n<html>\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n    <meta name=\"robots\" content=\"noodp\">\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=yes, viewport-fit=cover\">\n\n    <title>  Privacy Preserving Ad Click Attribution For the Web | WebKit</title>\n\n    <meta name=\"application-name\" content=\"WebKit\">\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://webkit.org/wp-content/themes/webkit/style.css?20200127\" media=\"all\">\n    <link rel=\"stylesheet\" href=\"https://www.apple.com/wss/fonts?families=SF+Pro,v1\" type=\"text/css\">\n    <link rel=\"stylesheet\" href=\"https://www.apple.com/wss/fonts?families=SF+Mono,v2\" type=\"text/css\">\n    <meta name=\"supported-color-schemes\" content=\"light dark\">\n\n    <link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS 2.0\" href=\"https://webkit.org/feed/\">\n    <link rel=\"alternate\" type=\"text/xml\" title=\"RSS .92\" href=\"https://webkit.org/feed/rss/\">\n    <link rel=\"alternate\" type=\"application/atom+xml\" title=\"Atom 0.3\" href=\"https://webkit.org/feed/atom/\">\n    <link rel=\"pingback\" href=\"https://webkit.org/wp/xmlrpc.php\">\n\n    <link rel=\"shortcut icon\" sizes=\"32x32\" type=\"image/x-icon\" href=\"/favicon.ico\">\n\n    <meta name='robots' content='max-image-preview:large' />\n<link rel='stylesheet' id='wp-block-library-css'  href='https://webkit.org/wp/wp-includes/css/dist/block-library/style.min.css?ver=5.9' type='text/css' media='all' />\n<style id='global-styles-inline-css' type='text/css'>\nbody{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}\n</style>\n<link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"https://webkit.org/wp/xmlrpc.php?rsd\" />\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"https://webkit.org/wp/wp-includes/wlwmanifest.xml\" /> \n<meta name=\"generator\" content=\"WordPress 5.9\" />\n<link rel=\"canonical\" href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" />\n<link rel='shortlink' href='https://webkit.org/?p=8943' />\n<link rel=\"alternate\" type=\"application/json+oembed\" href=\"https://webkit.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwebkit.org%2Fblog%2F8943%2Fprivacy-preserving-ad-click-attribution-for-the-web%2F\" />\n<link rel=\"alternate\" type=\"text/xml+oembed\" href=\"https://webkit.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwebkit.org%2Fblog%2F8943%2Fprivacy-preserving-ad-click-attribution-for-the-web%2F&#038;format=xml\" />\n\n    <!-- Schema.org markup -->\n    <meta itemprop=\"name\" content=\"Privacy Preserving Ad Click Attribution For the Web\">\n    <meta itemprop=\"description\" content=\"A typical website is made of numerous components coming from a wide variety of sources.\">\n    <meta itemprop=\"image\" content=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png\">\n\n    <!-- Twitter Card data -->\n    <meta name=\"twitter:card\" content=\"summary_large_image\">\n    <meta name=\"twitter:image:src\" content=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png\">\n    <meta name=\"twitter:site\" content=\"@webkit\">\n    <meta name=\"twitter:title\" content=\"Privacy Preserving Ad Click Attribution For the Web\">\n    <meta name=\"twitter:description\" content=\"A typical website is made of numerous components coming from a wide variety of sources.\">\n    <meta name=\"twitter:creator\" content=\"@johnwilander\">\n\n    <!-- Open Graph data -->\n    <meta property=\"og:title\" content=\"Privacy Preserving Ad Click Attribution For the Web\">\n    <meta property=\"og:type\" content=\"article\">\n    <meta property=\"og:url\" content=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\">\n    <meta property=\"og:image\" content=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png\">\n    <meta property=\"og:description\" content=\"A typical website is made of numerous components coming from a wide variety of sources.\">\n    <meta property=\"og:site_name\" content=\"WebKit\">\n    <meta property=\"article:published_time\" content=\"2019-05-22T06:00:38-07:00\">\n    <meta property=\"article:modified_time\" content=\"2019-05-22T13:05:22-07:00\">\n    <meta property=\"article:section\" content=\"Privacy\">\n    <meta property=\"fb:admins\" content=\"1085088865\">\n<style type=\"text/css\">.widescreen img {\r\n    box-sizing: border-box;\r\n    padding: 1rem;\r\n}\r\n\r\n.hidden-hero {\r\n    display: none;\r\n}\r\n\r\n.hidden { display: none; }\r\n.darkmode-image { display: none; }\r\n\r\n@media(prefers-color-scheme:light) {\r\n    .darkmode-image { display: none; }\r\n    .lightmode-image { display: block; filter: none; }\r\n}\r\n@media(prefers-color-scheme:dark) {\r\n    .lightmode-image { display: none; }\r\n    .darkmode-image { display: block; filter: none; }\r\n}\r\n</style></head>\n<body class=\"post-template-default single single-post postid-8943 single-format-standard\">\n    <!-- Copyright © 2020 Apple Inc. All rights reserved. -->\n<svg xmlns=\"http://www.w3.org/2000/svg\">\n\t<style> svg { display: block; width: 0; height: 0; } </style>\n    <filter id=\"invertLightness\" x=\"0\" y=\"0\" style=\"color-interpolation-filters: sRGB\">\n        <feColorMatrix type=\"matrix\" in=\"SourceGraphic\" result=\"red\" values=\"1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1\" />\n        <feColorMatrix type=\"matrix\" in=\"SourceGraphic\" result=\"green\" values=\"0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1\" />\n        <feColorMatrix type=\"matrix\" in=\"SourceGraphic\" result=\"blue\" values=\"0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1\" />\n        <feBlend in=\"red\" in2=\"green\" mode=\"lighten\" result=\"maxyellow\" />\n        <feBlend in=\"maxyellow\" in2=\"blue\" mode=\"lighten\" result=\"max\" />\n        <feBlend in=\"red\" in2=\"green\" mode=\"darken\" result=\"minyellow\" />\n        <feBlend in=\"minyellow\" in2=\"blue\" mode=\"darken\" result=\"min\" />\n        <feComponentTransfer result=\"adjustment\" in=\"min\">\n            <feFuncR type=\"linear\" intercept=\"1\" slope=\"-1\" />\n            <feFuncG type=\"linear\" intercept=\"1\" slope=\"-1\" />\n            <feFuncB type=\"linear\" intercept=\"1\" slope=\"-1\" />\n        </feComponentTransfer>\n        <feComposite operator=\"arithmetic\" in=\"SourceGraphic\" in2=\"adjustment\" k1=\"0\" k2=\"1\" k3=\"1\" k4=\"-1\" result=\"channelAdjustment\" />\n        <feComposite operator=\"arithmetic\" in=\"channelAdjustment\" in2=\"max\" k1=\"0\" k2=\"1\" k3=\"-1\" k4=\"1\" result=\"finalColors\" />\n        <feComposite operator=\"in\" in=\"finalColors\" in2=\"SourceAlpha\" />\n    </filter>\n</svg>    <header aria-label=\"WebKit.org Header\" id=\"header\">\n        <div class=\"page-width\">\n        <a href=\"/\"><div id=\"logo\" class=\"site-logo\">WebKit</div></a>\n        <nav id=\"site-nav\" aria-label=\"Site Menu\">\n<div class=\"menu-main-menu-container\"><input type=\"checkbox\" id=\"menu-main-menu-toggle\" class=\"menu-toggle\" /><label for=\"menu-main-menu-toggle\" class=\"label-toggle main-menu\" data-open=\"Main Menu\" data-close=\"Close Menu\"></label><ul id=\"menu-main-menu\" class=\"menu\" role=\"menubar\"><li id=\"menu-item-4270\" class=\"menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-4270\"><a href=\"https://webkit.org/blog/\" role=\"menuitem\">Blog</a></li>\n<li id=\"menu-item-6091\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-6091\"><a href=\"https://webkit.org/downloads/\" role=\"menuitem\">Downloads</a></li>\n<li id=\"menu-item-4272\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4272\"><a href=\"https://webkit.org/status/\" role=\"menuitem\">Feature Status</a></li>\n<li id=\"menu-item-9988\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-9988\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><a href=\"#nav-sub-menu\" role=\"menuitem\" aria-haspopup=\"true\" aria-owns=\"sub-menu-for-9988\" aria-controls=\"sub-menu-for-9988\" aria-expanded=\"true\"><label for=\"toggle-9988\" class=\"label-toggle\">Documentation</label></a>\n<ul class=\"sub-menu sub-menu-layer\" role=\"menu\" id=\"sub-menu-for-9988\">\n\t<li id=\"menu-item-4273\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4273\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><a href=\"https://webkit.org/reporting-bugs/\" role=\"menuitem\">How to Report Bugs</a></li>\n\t<li id=\"menu-item-9989\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-9989\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><a href=\"/web-inspector\" role=\"menuitem\">Web Inspector</a></li>\n\t<li id=\"menu-item-10868\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-10868\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><a href=\"https://webkit.org/tracking-prevention/\" role=\"menuitem\">Tracking Prevention</a></li>\n</ul>\n</li>\n<li id=\"menu-item-4274\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-4274\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"#nav-sub-menu\" role=\"menuitem\" aria-haspopup=\"true\" aria-owns=\"sub-menu-for-4274\" aria-controls=\"sub-menu-for-4274\" aria-expanded=\"true\"><label for=\"toggle-4274\" class=\"label-toggle\">Contribute</label></a>\n<ul class=\"sub-menu sub-menu-layer\" role=\"menu\" id=\"sub-menu-for-4274\">\n\t<li id=\"menu-item-10037\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-10037\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"https://webkit.org/project/\" role=\"menuitem\">Project Goals</a></li>\n\t<li id=\"menu-item-4277\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4277\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"https://webkit.org/getting-started/\" role=\"menuitem\">Getting Started</a></li>\n\t<li id=\"menu-item-4284\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4284\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"https://webkit.org/contributing-code/\" role=\"menuitem\">Contributing Code</a></li>\n\t<li id=\"menu-item-4281\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4281\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"https://webkit.org/testing-contributions/\" role=\"menuitem\">Testing Contributions</a></li>\n\t<li id=\"menu-item-4282\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4282\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"https://webkit.org/policy-and-guidelines/\" role=\"menuitem\">Policy and Guidelines</a></li>\n\t<li id=\"menu-item-4278\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-4278\"><input type=\"checkbox\" id=\"toggle-9988\" class=\"menu-toggle\" /><input type=\"checkbox\" id=\"toggle-4274\" class=\"menu-toggle\" /><a href=\"http://trac.webkit.org\" role=\"menuitem\">Trac Timeline</a></li>\n</ul>\n</li>\n</ul></div></nav>\n        </div>\n    </header>\n\n<main id=\"content\">\n    <div class=\"page-width\">\n    \n        <article class=\"post-8943 post type-post status-publish format-standard hentry category-privacy\" id=\"post-8943\">\n            <h1><a href=\"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/\" rel=\"bookmark\" title=\"Permanent Link: Privacy Preserving Ad Click Attribution For the Web\">Privacy Preserving Ad Click Attribution For the Web</a></h1>\n            <div class=\"byline\">\n                <p class=\"date\">May 22, 2019</p>\n                <p class=\"author\">by <span>John Wilander</span></p>\n                                <p class=\"twitter\"><a href=\"https://twitter.com/johnwilander\" target=\"_blank\">@johnwilander</a></p>\n                            </div>\n\n            <div class=\"bodycopy\">\n                                \n                <div class=\"hidden-hero\"><img width=\"3072\" height=\"3072\" src=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png\" alt=\"\" class=\"wp-image-8963\" srcset=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png 3072w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-150x150.png 150w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-300x300.png 300w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-768x768.png 768w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-1024x1024.png 1024w\" sizes=\"(max-width: 3072px) 100vw, 3072px\" /></div>\n<p>A typical website is made of numerous components coming from a wide variety of sources. Many of the sources that make up a website are opaque to the user, and some third-party resources are designed to identify and track users as they browse the web, often in order to retarget ads and measure ad campaign effectiveness.</p>\n<p>The combination of third-party web tracking and ad campaign measurement has led many to conflate web privacy with a web free of advertisements. We think that&#8217;s a misunderstanding. Online ads and measurement of their effectiveness do not require Site A, where you clicked an ad, to learn that you purchased something on Site B. The only data needed for measurement is that <em>someone</em> who clicked an ad on Site A made a purchase on Site B.</p>\n<p>Today we are presenting a new technology to allow attribution of ad clicks on the web while preserving user privacy. We used the following principles as we designed this technology:</p>\n<ul>\n<li><strong>Users should not be uniquely identified across websites for the purposes of ad click attribution</strong>. This means the combined data of an ad click and a conversion should not be attributable to a single user at web scale. To achieve this, our design has the following properties:\n<ul>\n<li>Up to 64 ad campaigns can be measured in parallel per website where ads are placed by an advertiser. This low number means ad campaign IDs cannot be turned into user identifiers.</li>\n<li>Up to 64 conversion events can be distinguished on the advertiser&#8217;s own website. This means conversion IDs are also restricted from being turned into user identifiers.</li>\n</ul>\n</li>\n<li><strong>Only websites that users visit should be involved in measuring ad clicks and conversions</strong>. This means that opaque third-parties should not receive ad click attribution reports and we enforce it by requiring that the ad link is part of a first-party webpage and by only reporting on which first-party website a conversion happened.</li>\n<li><strong>The browser should act on behalf of the user and do its best to preserve privacy while reporting on ad click attribution</strong>. We achieve this by:\n<ul>\n<li>Sending attribution reports in a dedicated Private Browsing Mode even though the user is in regular browsing mode.</li>\n<li>Disallowing data like cookies for reporting purposes.</li>\n<li>Delaying reports randomly between 24 and 48 hours.</li>\n<li>Not supporting Privacy Preserving Ad Click Attribution at all when the user is in Private Browsing Mode.</li>\n</ul>\n</li>\n<li><strong>The browser vendor should not learn about the user&#8217;s ad clicks or conversions</strong>. For this reason, we designed the feature to do all of its work on-device. The browser vendor does not see any of the ad click attribution data.</li>\n</ul>\n<p>Critically, our solution avoids placing trust in any of the parties involved — the ad network, the merchant, or any other intermediaries — and dramatically limits the entropy of data passed between them to prevent communication of a tracking identifier.</p>\n<h2>Ad Click Attribution in a Nutshell</h2>\n<p>Here&#8217;s a simple example of ad click attribution:<br />\nAn online store runs an ad on a search engine website. If a user clicks the ad and eventually buys something, both the online store and the search engine website where the ad was placed want to know; they want the purchase to be <em>attributed</em> to the ad click so that the store knows where to focus their advertising budget. Such attribution is used for measurement of which ads are effective.</p>\n<h2>Traditional, Privacy-Invasive Ad Click Attribution</h2>\n<p>Traditionally, ad click attribution has been done through the use of cookies and so-called “tracking pixels.” Here&#8217;s an illustration of how this works:</p>\n<figure class=\"widescreen mattewhite\"><img loading=\"lazy\" width=\"2916\" height=\"996\" src=\"https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution.png\" alt=\"Privacy invading ad click attribution\" class=\"wp-image-8946\" srcset=\"https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution.png 2916w, https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution-300x102.png 300w, https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution-768x262.png 768w, https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution-1024x350.png 1024w\" sizes=\"(max-width: 2916px) 100vw, 2916px\" /></figure>\n<p>The illustration above shows the user John:</p>\n<ol>\n<li>Searching for “grill” on search.example, </li>\n<li>Clicking an ad which takes him to shop.example, and </li>\n<li>Finally adding a $90 grill to a shopping cart.</li>\n</ol>\n<p>Following each action on shop.example, shop.example fires a tracking pixel (a request for an invisible image) to search.example to report progress toward a purchase.</p>\n<p>In browsers without appropriate privacy protections, search.example will identify John through his cookies every time shop.example fires such a tracking pixel to search.example. This pervasive technology allows search.example to learn everything John does on shop.example and all other websites that fire similar tracking pixels. Even worse, all these pixels fire regardless of whether John has clicked an ad or not.</p>\n<p>Needless to say, tracking pixels that carry cookies enable sites such as search.example to build up a huge profile of people&#8217;s interests, purchasing power, habits, age, et cetera. We refer to this as cross-site tracking and Safari prevents it from happening through the WebKit feature Intelligent Tracking Prevention (ITP).</p>\n<p>As more and more browsers acknowledge the problems of cross-site tracking, we should expect privacy-invasive ad click attribution to become a thing of the past.</p>\n<h2>Privacy Preserving Ad Click Attribution</h2>\n<p>We propose a modern way of doing ad click attribution that doesn&#8217;t allow for cross-site tracking of users but does provide a means of measuring the effectiveness of online ads. It is built into the browser itself and runs on-device which means that the browser vendor does not get to see what ads are clicked or which purchases are made.</p>\n<p>Privacy Preserving Ad Click Attribution has three steps:</p>\n<ol>\n<li>Store ad clicks. This is done by the page hosting the ad at the time of an ad click.</li>\n<li>Match conversions against stored ad clicks. This is done on the website the ad navigated to as a result of the click. Conversions do not have to happen right after a click and do not have to happen on the specific landing page, just the same website.</li>\n<li>Send out ad click attribution data. This is done by the browser after a conversion matches an ad click.</li>\n</ol>\n<p>Let&#8217;s go through these steps in detail and which steps we&#8217;ve taken to preserve the user&#8217;s privacy.</p>\n<h3>Step 1: Store Ad Clicks</h3>\n<p>Anchor elements, often referred to as links, now support two new, optional attributes called adDestination and adCampaignID.</p>\n<p>As shown in the illustration below, adDestination is the domain the ad click is navigating the user to, and adCampaignID is the identifier of the ad campaign.</p>\n<figure class=\"widescreen mattewhite\"><img loading=\"lazy\" width=\"2916\" height=\"1092\" src=\"https://webkit.org/wp-content/uploads/store-ad-clicks.png\" alt=\"Store ad clicks\" class=\"wp-image-8947\" srcset=\"https://webkit.org/wp-content/uploads/store-ad-clicks.png 2916w, https://webkit.org/wp-content/uploads/store-ad-clicks-300x112.png 300w, https://webkit.org/wp-content/uploads/store-ad-clicks-768x288.png 768w, https://webkit.org/wp-content/uploads/store-ad-clicks-1024x383.png 1024w\" sizes=\"(max-width: 2916px) 100vw, 2916px\" /></figure>\n<p>If the user clicks the ad link on search.example, the browser will follow the navigation, through potential redirects, to make sure that the user actually lands on shop.example. If so, the browser stores the ad click, comprising the following data (presented here in plain English): <em>The user clicked shop.example&#8217;s ad campaign 55 on search.example.</em></p>\n<p>Here are the important privacy aspects of this step:</p>\n<ul>\n<li>The link needs to be an element on the first-party website (the main frame), not a link in an iframe. This is to meet user expectations and to be able to provide control to the user. Users can only be expected to understand which first-party website they clicked an ad on and which first-party website they made a purchase on. We also think it&#8217;s important that the first-party website that serves the ad is the one attributed for the performance of the ad campaign.</li>\n<li>Neither search.example nor shop.example can read the stored ad click data or detect that it exists.</li>\n<li>The browser only stores ad clicks for a limited time. In WebKit&#8217;s implementation that is seven days.</li>\n<li>The entropy of the ad campaign ID needs to be properly restricted to not become a cross-site tracking vector. WebKit&#8217;s implementation allows a value between 0 and 63, i.e. a maximum of 64 shop.example ad campaigns running in parallel on search.example.</li>\n</ul>\n<h3>Step 2: Match Conversions Against Stored Ad Clicks</h3>\n<p>To achieve ad click attribution, the browser needs to be able to match <em>conversions</em> with stored ad clicks. What are conversions?</p>\n<ul>\n<li>Adding an item to the shopping cart is a conversion.</li>\n<li>Signing up for a new service is a conversion.</li>\n<li>Entering shipping or payment information is a conversion.</li>\n<li>Pulling the trigger and actually buying something is a conversion.</li>\n</ul>\n<p>Matching conversions to ad clicks allows shop.example to understand that a specific ad campaign may be effective in getting customers to add items to their shopping carts but something in the checkout flow throws them off.</p>\n<p>How does Privacy Preserving Ad Click Attribution detect a conversion and match it with a stored ad click? It makes use of the legacy tracking pixels!</p>\n<figure class=\"widescreen mattewhite\"><img loading=\"lazy\" width=\"2346\" height=\"1026\" src=\"https://webkit.org/wp-content/uploads/match-conversions-ad-clicks.png\" alt=\"Match conversions ad clicks\" class=\"wp-image-8948\" srcset=\"https://webkit.org/wp-content/uploads/match-conversions-ad-clicks.png 2346w, https://webkit.org/wp-content/uploads/match-conversions-ad-clicks-300x131.png 300w, https://webkit.org/wp-content/uploads/match-conversions-ad-clicks-768x336.png 768w, https://webkit.org/wp-content/uploads/match-conversions-ad-clicks-1024x448.png 1024w\" sizes=\"(max-width: 2346px) 100vw, 2346px\" /></figure>\n<p>In the illustration above, an existing request to the existing tracking pixel is redirected by search.example on its own server infrastructure to a well-known location in order to signal to the browser that this is in fact a conversion happening. Note that privacy protections such as ITP will typically make sure that no cookies are sent in this request.</p>\n<p>The path parameter “20” at the end of the well-known location is the conversion data. This gives shop.example an opportunity to say something about the conversion such as where in the sales funnel the customer is, what the value of the conversion is, what time of day it is, or whatever they decide is relevant for them.</p>\n<p>The redirect to the well-known location may also include an optional priority parameter which indicates the importance of this particular conversion in the case of multiple conversions matching the same stored ad click.</p>\n<p>Here are the important privacy aspects of this step:</p>\n<ul>\n<li>Neither search.example nor shop.example know whether there is any stored ad click data to be matched against.</li>\n<li>Neither search.example nor shop.example are told by the browser whether there was a match or not.</li>\n<li>The entropy of the ad conversion data needs to be properly restricted to not become a cross-site tracking vector. WebKit&#8217;s implementation allows a value between 0 and 63, i.e. six bits to distinguish conversion events. As mentioned earlier, shop.example decides what goes into these bits. For instance, they may spend two bits on monetary value in four buckets: {less than $10, between $10 and $50, between $51 and $200, above $200}.</li>\n</ul>\n<p>We expect to also implement a JavaScript API to send this information to the .well-known location to remove the requirement for tracking pixels but we&#8217;d like to openly discuss what should go into that API since it is much more forward looking than retrofitting existing tracking pixels.</p>\n<h3>Step 3: Send Out Ad Click Attribution Data</h3>\n<p>Now we come to the third and final step — the browser reports that a conversion happened for a user that had previously clicked an ad.</p>\n<figure class=\"widescreen mattewhite\"><img loading=\"lazy\" width=\"2916\" height=\"1092\" src=\"https://webkit.org/wp-content/uploads/send-ad-click-attribution-data.png\" alt=\"Send Ad Click Attribution Data\" class=\"wp-image-8949\" srcset=\"https://webkit.org/wp-content/uploads/send-ad-click-attribution-data.png 2916w, https://webkit.org/wp-content/uploads/send-ad-click-attribution-data-300x112.png 300w, https://webkit.org/wp-content/uploads/send-ad-click-attribution-data-768x288.png 768w, https://webkit.org/wp-content/uploads/send-ad-click-attribution-data-1024x383.png 1024w\" sizes=\"(max-width: 2916px) 100vw, 2916px\" /></figure>\n<p>Once the browser has matched a conversion against a stored ad click, it sets a timer, randomized between 24 and 48 hours. When that timer fires, the browser makes an ephemeral, stateless POST request to the same well-known location. In our example, the request would go to https://search.example/.well-known/ad-click-attribution/20/55, with the referrer request header set to https://shop.example.</p>\n<p>In plain English this report would say: <em>24 to 48 hours ago, some user who previously clicked shop.example&#8217;s ad campaign 55 on search.example, converted with data 20 on shop.example.</em></p>\n<p>Once the ephemeral, stateless POST request goes out, the stored ad click is consumed and cannot be converted further. This is in part why we have the minimum delay of 24 hours. During that delay, shop.example has the opportunity to signal further conversions, for instance down a sales funnel, and only the most important conversion will be sent in the POST request. The importance is controlled through the optional priority parameter in the conversion redirect, as mentioned above.</p>\n<p>Here are the important privacy aspects of this step:</p>\n<ul>\n<li>Neither search.example nor shop.example know that an attribution request has been scheduled.</li>\n<li>The 24–48 hour delay makes sure a conversion that happens shortly after an ad click will not allow for speculative profiling of the user by search.example. The randomness in the delay makes sure that the request does not in itself reveal when during the day the conversion happened. If shop.example wants time of day data, they will have to spend some of their six bits of conversion data on it.</li>\n<li>The ephemeral, stateless request makes sure the request is not associated with state built up through other browsing. Ephemeral in this sense is referred to as Private Browsing in Safari.</li>\n<li>The well-known location allows for a simple rule if Content Blockers wants to block such conversion reporting.</li>\n</ul>\n<h2>Privacy Considerations</h2>\n<p>For ad click attribution to happen, some bits of data about what happened across two websites need to be sent. Today&#8217;s practice of ad click attribution has no practical limit on the bits of data, which allows for full cross-site tracking of users using cookies. This is privacy invasive and thus we are obliged to prevent such ad click attribution from happening in Safari and WebKit.</p>\n<p>But by keeping the entropy of attribution data low enough, we believe the reporting can be done in a privacy preserving way.</p>\n<p>Here is a summary of our privacy considerations for Privacy Preserving Ad Click Attribution:</p>\n<ul>\n<li>Only links served on first-party pages should be able to store ad click attribution data. This ensures that users have a chance of understanding how Privacy Preserving Ad Click Attribution works.</li>\n<li>Neither the website where the ad click happens nor the website where the conversion happens should be able to see whether ad click data has been stored, has been matched, or is scheduled for reporting.</li>\n<li>Ad clicks should only be stored for a limited time, such as a week. Users cannot be expected to understand that a purchase they make today is attributed to an ad click they made months ago.</li>\n<li>The entropy of both ad campaign ID and conversion data needs to be restricted to a point where this data cannot be repurposed for cross-site tracking of users. We propose six bits each for these two pieces of data, or values between 0 and 63.</li>\n<li>Ad click attribution requests should be delayed randomly between 24 to 48 hours. This makes sure that a conversion that happens shortly after an ad click will not allow for speculative cross-site profiling of the user. The randomness in the delay makes sure the request does not in itself reveal when during the day the conversion happened.</li>\n<li>The browser should not guarantee any specific order in which multiple ad click attribution requests are sent, since the order itself could be abused to increase the entropy and allow for cross-site tracking of users.</li>\n<li>The browser should use an ephemeral session (a.k.a. private or incognito mode) to make ad click attribution requests.</li>\n<li>The browser should not use or accept any credentials such as cookies, client certificates, or Basic Authentication in ad click attribution requests or responses.</li>\n<li>The browser should offer a way to turn ad click attribution on and off. We intend to have the default setting to be on to encourage websites to move to this technology and abandon general cross-site tracking.</li>\n<li>The browser should not enable ad click attribution in private/incognito mode.</li>\n</ul>\n<h2>Try It Out In Safari Technology Preview!</h2>\n<p>We&#8217;re happy to offer Privacy Preserving Ad Click Attribution as an experimental feature in Safari Technology Preview 82+.</p>\n<p>First, enable the Develop menu, then go to the Experimental Features submenu.</p>\n<figure><img loading=\"lazy\" width=\"1453\" height=\"140\" src=\"https://webkit.org/wp-content/uploads/image.png\" alt=\"\" class=\"lightmode-image wp-image-8960\" srcset=\"https://webkit.org/wp-content/uploads/image.png 1453w, https://webkit.org/wp-content/uploads/image-300x29.png 300w, https://webkit.org/wp-content/uploads/image-768x74.png 768w, https://webkit.org/wp-content/uploads/image-1024x99.png 1024w\" sizes=\"(max-width: 1453px) 100vw, 1453px\" /><img loading=\"lazy\" width=\"1459\" height=\"137\" src=\"https://webkit.org/wp-content/uploads/experimental-features-dark.png\" alt=\"Experimental Features menu\" class=\"darkmode-image wp-image-8950\" srcset=\"https://webkit.org/wp-content/uploads/experimental-features-dark.png 1459w, https://webkit.org/wp-content/uploads/experimental-features-dark-300x28.png 300w, https://webkit.org/wp-content/uploads/experimental-features-dark-768x72.png 768w, https://webkit.org/wp-content/uploads/experimental-features-dark-1024x96.png 1024w\" sizes=\"(max-width: 1459px) 100vw, 1459px\" /></figure>\n<p>There you&#8217;ll find “Ad Click Attribution” which enables the feature itself, and “Ad Click Attribution Debug Mode” which enables debug logging for developers and shortens the 24–48 hour delay to a static one minute delay, also for use by developers.</p>\n<h3>Debugging the Link Attributes</h3>\n<p>A cross-site anchor element that wants to push ad click attribution data into the browser looks like this:<br />\n<code>&lt;a href=\"https://some.site.example\" addestination=\"https://shop.example\" adcampaignid=\"55\"&gt;</code></p>\n<p>To debug such elements, you use the Web Inspector&#8217;s console with the “Preserve Log” setting enabled. Here are a few examples of console warnings you may see if there&#8217;s something wrong with your attribution attributes:</p>\n<p><code>Both adcampaignid and addestination need to be set for Ad Click Attribution to work.</code></p>\n<p><code>Ad Click Attribution is only supported in the main frame.</code></p>\n<p>This tells you the anchor element is not part of the main frame.</p>\n<p><code>addestination can not be the same site as the current website.</code> This technology is meant for cross-site attribution of ad clicks. There is no need for it within the same website.</p>\n<h3>Debugging Storage of Ad Clicks</h3>\n<p>For debugging anything beyond the anchor element, you need to use the system log (syslog). Here&#8217;s how you achieve that:</p>\n<ol>\n<li>Enable Ad Click Attribution Debug Mode in the Develop–>Experimental Features submenu.</li>\n<li>In your macOS Terminal, run: <code>log stream -info | grep AdClickAttribution</code>.</li>\n</ol>\n<p>Now if you click a cross-site element with adDestination and adCampaignID attributes, you should expect to see the following in your syslog:<br />\n<code>Storing an ad click.</code></p>\n<h3>Debugging Conversions</h3>\n<p>A conversion is signaled through a same-site HTTP redirect to /.well-known/ad-click-attribution/[a decimal value between 0 and 63 representing the conversion data]. Same-site here means search.example needs to be the server redirecting to https://search.example/.well-known/ad-click-attribution/. The reason for this is that search.example should be in control of when stored ad clicks on its site are consumed. Note that the conversion redirect is done as a subresource on shop.example so we don&#8217;t mean same-site as the main frame.</p>\n<p>Once you do such a redirect, the syslog might feature one of the following error messages:</p>\n<p><code>Conversion was not accepted because the HTTP redirect was not same-site.</code> This is the requirement mentioned above, i.e. it has to be search.example redirecting to search.example/.well-known/ad-click-attribution/.</p>\n<p><code>Conversion was not accepted because it was requested in an HTTP redirect that is same-site as the first-party.</code> Again, this technology is meant for cross-site attribution of ad clicks. There is no need for it within the same website.</p>\n<p><code>Conversion was not accepted because the URL's protocol is not HTTPS or the URL contains one or more of username, password, query string, and fragment.</code> The request to the well-known location has to be HTTPS and cannot contain a username, password, query string, or fragment.</p>\n<p><code>Conversion was not accepted because the URL path did not start with /.well-known/ad-click-attribution/.</code></p>\n<p><code>Conversion was not accepted because the conversion data could not be parsed or was higher than the allowed maximum of 63.</code></p>\n<p><code>Conversion was not accepted because the URL path contained unrecognized parts.</code> This is a catch-all error message for when the URL has unrecognized path elements or is not of the correct length.</p>\n<h3>Detecting Successful Conversions</h3>\n<p>If you got everything right in the redirect to the well-known location, you should see the following message in the syslog:<br />\n<code>Got a conversion with conversion data: 20 and priority: 0.</code></p>\n<p>Here you see the priority parameter. It is a way for the server to signal how important a particular conversion is so that the browser can report the most important one. Take the sales funnel example. There, multiple conversions will happen in succession: add to shopping cart, enter shipping info, enter payment info, and finalize purchase. Most likely, the finalized purchase is the conversion that should be reported together with the ad campaign ID. Priority can be 0 to 63, higher means higher priority, and the priority value is only used for internal bookkeeping, i.e. not sent in any request.</p>\n<p>Henceforth, lets assume the redirect is done with conversion data 20 and priority 12, like so:<br />\n<code>https://search.example/.well-known/ad-click-attribution/20/12</code></p>\n<p>Now, if there&#8217;s a stored ad click that matches this conversion, you&#8217;ll see detailed conversion information in the syslog:</p>\n<p><code>Converted a stored ad click with conversion data: 20 and priority: 12.</code> This is when a previously unconverted ad click is converted.</p>\n<p><code>Re-converted an ad click with a new one with conversion data: 20 and priority: 12 because it had higher priority.</code> This is for when there&#8217;s a conversion of higher priority that matches an already scheduled conversion request. The ad click is kept, re-converted with the high priority conversion, and scheduled for reporting.</p>\n<p><code>Replaced a previously converted ad click with a new one with conversion data: 20 and priority: 12 because it had higher priority.</code> This is for when there is a <em>different</em> ad click (the user may have clicked more than one ad) with a scheduled conversion request but with lower priority. The newly converted ad click with higher priority replaces the old one.</p>\n<p>Finally, you&#8217;ll see the scheduling of the report request in the syslog:<br />\n<code>Setting timer for firing conversion requests to the debug mode timeout of 60 seconds where the regular timeout would have been 111003 seconds.</code> This is special-cased for Ad Click Attribution Debug Mode. Instead of the 24 to 48 hour delay, there&#8217;s only a 60 second delay. The log message tells what the real delay would have been, in this case ≈31 hours.</p>\n<h3>Receiving Conversion Reports</h3>\n<p>When the scheduled timer fires, an HTTP POST request is made to ./well-known/ad-click-attribution/[conversion data]/[ad campaign ID], effectively reporting that a conversion happened for a user that previously clicked an associated advertisement. In our example, this request would go to:<br />\n<code>https://search.example/.well-known/ad-click-attribution/20/55</code><br />\n… with the referrer request header set to:<br />\n<code>https://shop.example/</code></p>\n<p>When this request is about to go out, you&#8217;ll see the following syslog entry:<br />\n<code>About to fire an attribution request for a conversion.</code></p>\n<p>If something went wrong with the request, you&#8217;ll see it in the syslog:<br />\n<code>Received error: [error message] for ad click attribution request.</code></p>\n<h2>Where To Send Feedback and Bug Reports</h2>\n<p>Privacy Preserving Ad Click Attribution is in the early stage of being <a href=\"https://wicg.github.io/ad-click-attribution/index.html\">proposed as a standard</a> through the W3C Web Platform Incubator Community Group (WICG). Please <a href=\"https://github.com/WICG/ad-click-attribution/issues/\">join the discussion and file issues</a> to discuss how this technology fits with your use cases.</p>\n<p>If you find that the experimental feature in Safari Technology Preview doesn&#8217;t work as explained, please file a WebKit bug at <a href=\"https://bugs.webkit.org/\">https://bugs.webkit.org</a> and CC John Wilander.</p>\n<p>For technical inquiries on Privacy Preserving Ad Click Attribution, you&#8217;ll find me on Twitter: <a href=\"https://twitter.com/johnwilander\">@johnwilander</a></p>\n\n                            </div>\n        </article>\n\n        <aside class=\"nextrouter\" aria-label=\"Next/Previous posts\">\n            <div class=\"bodycopy\">\n                        <a class=\"page-numbers next-post\" href=\"https://webkit.org/blog/8967/release-notes-for-safari-technology-preview-83/\" rel=\"next\"><div class=\"nextrouter-copy\"><span class=\"label\">Next</span><span class=\"title\">Release Notes for Safari Technology Preview 83</span><span class=\"link\">Learn more</span></div></a>            </div>\n        </aside>\n        <aside class=\"nextrouter previous\" aria-label=\"Next/Previous posts\">\n            <div class=\"bodycopy\">\n            <a class=\"page-numbers prev-post\" href=\"https://webkit.org/blog/8923/debugging-media-in-web-inspector/\" rel=\"prev\"><div class=\"nextrouter-copy\"><span class=\"label\">Previously</span><span class=\"title\">Debugging Media in Web Inspector</span><span class=\"link\">Learn more</span></div></a>            </div>\n        </aside>\n\n    \n    \n    </div><!--.page-width-->\n</main><!-- #content -->\n\n<footer>\n    <div class=\"page-width\">\n        <nav id=\"footer-nav\" aria-label=\"Footer menu\"><div class=\"menu-footer-menu-container\"><ul id=\"menu-footer-menu\" class=\"menu\"><li id=\"menu-item-7617\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-7617\"><a href=\"https://twitter.com/webkit\">@webkit</a></li>\n<li id=\"menu-item-5365\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-5365\"><a href=\"https://webkit.org/sitemap/\">Site Map</a></li>\n<li id=\"menu-item-4185\" class=\"menu-item menu-item-type-custom menu-item-object-custom menu-item-4185\"><a href=\"http://www.apple.com/legal/privacy/\">Privacy Policy</a></li>\n<li id=\"menu-item-4287\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4287\"><a href=\"https://webkit.org/licensing-webkit/\">Licensing WebKit</a></li>\n<li id=\"menu-item-4187\" class=\"menu-item menu-item-type-post_type menu-item-object-page menu-item-4187\"><a href=\"https://webkit.org/terms-of-use/\">WebKit and the WebKit logo are trademarks of Apple Inc.</a></li>\n</ul></div></nav>\n    </div>\n</footer>\n\n\n<script type='text/javascript' src='https://webkit.org/wp-content/themes/webkit/scripts/global.js?ver=1.0' id='theme-global-js'></script>\n</body>\n</html>\n<!-- Dynamic page generated in 0.216 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2022-04-05 10:27:55 -->\n\n<!-- super cache -->","oembed":false,"readabilityObject":{"title":"Privacy Preserving Ad Click Attribution For the Web","content":"<div id=\"readability-page-1\" class=\"page\"><article id=\"post-8943\">\n            \n            \n\n            <div>\n                                \n                <p><img width=\"3072\" height=\"3072\" src=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png\" alt=\"\" srcset=\"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png 3072w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-150x150.png 150w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-300x300.png 300w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-768x768.png 768w, https://webkit.org/wp-content/uploads/store-ad-clicks-hero-1024x1024.png 1024w\" sizes=\"(max-width: 3072px) 100vw, 3072px\"></p>\n<p>A typical website is made of numerous components coming from a wide variety of sources. Many of the sources that make up a website are opaque to the user, and some third-party resources are designed to identify and track users as they browse the web, often in order to retarget ads and measure ad campaign effectiveness.</p>\n<p>The combination of third-party web tracking and ad campaign measurement has led many to conflate web privacy with a web free of advertisements. We think that’s a misunderstanding. Online ads and measurement of their effectiveness do not require Site A, where you clicked an ad, to learn that you purchased something on Site B. The only data needed for measurement is that <em>someone</em> who clicked an ad on Site A made a purchase on Site B.</p>\n<p>Today we are presenting a new technology to allow attribution of ad clicks on the web while preserving user privacy. We used the following principles as we designed this technology:</p>\n<ul>\n<li><strong>Users should not be uniquely identified across websites for the purposes of ad click attribution</strong>. This means the combined data of an ad click and a conversion should not be attributable to a single user at web scale. To achieve this, our design has the following properties:\n<ul>\n<li>Up to 64 ad campaigns can be measured in parallel per website where ads are placed by an advertiser. This low number means ad campaign IDs cannot be turned into user identifiers.</li>\n<li>Up to 64 conversion events can be distinguished on the advertiser’s own website. This means conversion IDs are also restricted from being turned into user identifiers.</li>\n</ul>\n</li>\n<li><strong>Only websites that users visit should be involved in measuring ad clicks and conversions</strong>. This means that opaque third-parties should not receive ad click attribution reports and we enforce it by requiring that the ad link is part of a first-party webpage and by only reporting on which first-party website a conversion happened.</li>\n<li><strong>The browser should act on behalf of the user and do its best to preserve privacy while reporting on ad click attribution</strong>. We achieve this by:\n<ul>\n<li>Sending attribution reports in a dedicated Private Browsing Mode even though the user is in regular browsing mode.</li>\n<li>Disallowing data like cookies for reporting purposes.</li>\n<li>Delaying reports randomly between 24 and 48 hours.</li>\n<li>Not supporting Privacy Preserving Ad Click Attribution at all when the user is in Private Browsing Mode.</li>\n</ul>\n</li>\n<li><strong>The browser vendor should not learn about the user’s ad clicks or conversions</strong>. For this reason, we designed the feature to do all of its work on-device. The browser vendor does not see any of the ad click attribution data.</li>\n</ul>\n<p>Critically, our solution avoids placing trust in any of the parties involved — the ad network, the merchant, or any other intermediaries — and dramatically limits the entropy of data passed between them to prevent communication of a tracking identifier.</p>\n<h2>Ad Click Attribution in a Nutshell</h2>\n<p>Here’s a simple example of ad click attribution:<br>\nAn online store runs an ad on a search engine website. If a user clicks the ad and eventually buys something, both the online store and the search engine website where the ad was placed want to know; they want the purchase to be <em>attributed</em> to the ad click so that the store knows where to focus their advertising budget. Such attribution is used for measurement of which ads are effective.</p>\n<h2>Traditional, Privacy-Invasive Ad Click Attribution</h2>\n<p>Traditionally, ad click attribution has been done through the use of cookies and so-called “tracking pixels.” Here’s an illustration of how this works:</p>\n<figure><img loading=\"lazy\" width=\"2916\" height=\"996\" src=\"https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution.png\" alt=\"Privacy invading ad click attribution\" srcset=\"https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution.png 2916w, https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution-300x102.png 300w, https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution-768x262.png 768w, https://webkit.org/wp-content/uploads/privacy-invading-ad-click-attribution-1024x350.png 1024w\" sizes=\"(max-width: 2916px) 100vw, 2916px\"></figure>\n<p>The illustration above shows the user John:</p>\n<ol>\n<li>Searching for “grill” on search.example, </li>\n<li>Clicking an ad which takes him to shop.example, and </li>\n<li>Finally adding a $90 grill to a shopping cart.</li>\n</ol>\n<p>Following each action on shop.example, shop.example fires a tracking pixel (a request for an invisible image) to search.example to report progress toward a purchase.</p>\n<p>In browsers without appropriate privacy protections, search.example will identify John through his cookies every time shop.example fires such a tracking pixel to search.example. This pervasive technology allows search.example to learn everything John does on shop.example and all other websites that fire similar tracking pixels. Even worse, all these pixels fire regardless of whether John has clicked an ad or not.</p>\n<p>Needless to say, tracking pixels that carry cookies enable sites such as search.example to build up a huge profile of people’s interests, purchasing power, habits, age, et cetera. We refer to this as cross-site tracking and Safari prevents it from happening through the WebKit feature Intelligent Tracking Prevention (ITP).</p>\n<p>As more and more browsers acknowledge the problems of cross-site tracking, we should expect privacy-invasive ad click attribution to become a thing of the past.</p>\n<h2>Privacy Preserving Ad Click Attribution</h2>\n<p>We propose a modern way of doing ad click attribution that doesn’t allow for cross-site tracking of users but does provide a means of measuring the effectiveness of online ads. It is built into the browser itself and runs on-device which means that the browser vendor does not get to see what ads are clicked or which purchases are made.</p>\n<p>Privacy Preserving Ad Click Attribution has three steps:</p>\n<ol>\n<li>Store ad clicks. This is done by the page hosting the ad at the time of an ad click.</li>\n<li>Match conversions against stored ad clicks. This is done on the website the ad navigated to as a result of the click. Conversions do not have to happen right after a click and do not have to happen on the specific landing page, just the same website.</li>\n<li>Send out ad click attribution data. This is done by the browser after a conversion matches an ad click.</li>\n</ol>\n<p>Let’s go through these steps in detail and which steps we’ve taken to preserve the user’s privacy.</p>\n<h3>Step 1: Store Ad Clicks</h3>\n<p>Anchor elements, often referred to as links, now support two new, optional attributes called adDestination and adCampaignID.</p>\n<p>As shown in the illustration below, adDestination is the domain the ad click is navigating the user to, and adCampaignID is the identifier of the ad campaign.</p>\n<figure><img loading=\"lazy\" width=\"2916\" height=\"1092\" src=\"https://webkit.org/wp-content/uploads/store-ad-clicks.png\" alt=\"Store ad clicks\" srcset=\"https://webkit.org/wp-content/uploads/store-ad-clicks.png 2916w, https://webkit.org/wp-content/uploads/store-ad-clicks-300x112.png 300w, https://webkit.org/wp-content/uploads/store-ad-clicks-768x288.png 768w, https://webkit.org/wp-content/uploads/store-ad-clicks-1024x383.png 1024w\" sizes=\"(max-width: 2916px) 100vw, 2916px\"></figure>\n<p>If the user clicks the ad link on search.example, the browser will follow the navigation, through potential redirects, to make sure that the user actually lands on shop.example. If so, the browser stores the ad click, comprising the following data (presented here in plain English): <em>The user clicked shop.example’s ad campaign 55 on search.example.</em></p>\n<p>Here are the important privacy aspects of this step:</p>\n<ul>\n<li>The link needs to be an element on the first-party website (the main frame), not a link in an iframe. This is to meet user expectations and to be able to provide control to the user. Users can only be expected to understand which first-party website they clicked an ad on and which first-party website they made a purchase on. We also think it’s important that the first-party website that serves the ad is the one attributed for the performance of the ad campaign.</li>\n<li>Neither search.example nor shop.example can read the stored ad click data or detect that it exists.</li>\n<li>The browser only stores ad clicks for a limited time. In WebKit’s implementation that is seven days.</li>\n<li>The entropy of the ad campaign ID needs to be properly restricted to not become a cross-site tracking vector. WebKit’s implementation allows a value between 0 and 63, i.e. a maximum of 64 shop.example ad campaigns running in parallel on search.example.</li>\n</ul>\n<h3>Step 2: Match Conversions Against Stored Ad Clicks</h3>\n<p>To achieve ad click attribution, the browser needs to be able to match <em>conversions</em> with stored ad clicks. What are conversions?</p>\n<ul>\n<li>Adding an item to the shopping cart is a conversion.</li>\n<li>Signing up for a new service is a conversion.</li>\n<li>Entering shipping or payment information is a conversion.</li>\n<li>Pulling the trigger and actually buying something is a conversion.</li>\n</ul>\n<p>Matching conversions to ad clicks allows shop.example to understand that a specific ad campaign may be effective in getting customers to add items to their shopping carts but something in the checkout flow throws them off.</p>\n<p>How does Privacy Preserving Ad Click Attribution detect a conversion and match it with a stored ad click? It makes use of the legacy tracking pixels!</p>\n<figure><img loading=\"lazy\" width=\"2346\" height=\"1026\" src=\"https://webkit.org/wp-content/uploads/match-conversions-ad-clicks.png\" alt=\"Match conversions ad clicks\" srcset=\"https://webkit.org/wp-content/uploads/match-conversions-ad-clicks.png 2346w, https://webkit.org/wp-content/uploads/match-conversions-ad-clicks-300x131.png 300w, https://webkit.org/wp-content/uploads/match-conversions-ad-clicks-768x336.png 768w, https://webkit.org/wp-content/uploads/match-conversions-ad-clicks-1024x448.png 1024w\" sizes=\"(max-width: 2346px) 100vw, 2346px\"></figure>\n<p>In the illustration above, an existing request to the existing tracking pixel is redirected by search.example on its own server infrastructure to a well-known location in order to signal to the browser that this is in fact a conversion happening. Note that privacy protections such as ITP will typically make sure that no cookies are sent in this request.</p>\n<p>The path parameter “20” at the end of the well-known location is the conversion data. This gives shop.example an opportunity to say something about the conversion such as where in the sales funnel the customer is, what the value of the conversion is, what time of day it is, or whatever they decide is relevant for them.</p>\n<p>The redirect to the well-known location may also include an optional priority parameter which indicates the importance of this particular conversion in the case of multiple conversions matching the same stored ad click.</p>\n<p>Here are the important privacy aspects of this step:</p>\n<ul>\n<li>Neither search.example nor shop.example know whether there is any stored ad click data to be matched against.</li>\n<li>Neither search.example nor shop.example are told by the browser whether there was a match or not.</li>\n<li>The entropy of the ad conversion data needs to be properly restricted to not become a cross-site tracking vector. WebKit’s implementation allows a value between 0 and 63, i.e. six bits to distinguish conversion events. As mentioned earlier, shop.example decides what goes into these bits. For instance, they may spend two bits on monetary value in four buckets: {less than $10, between $10 and $50, between $51 and $200, above $200}.</li>\n</ul>\n<p>We expect to also implement a JavaScript API to send this information to the .well-known location to remove the requirement for tracking pixels but we’d like to openly discuss what should go into that API since it is much more forward looking than retrofitting existing tracking pixels.</p>\n<h3>Step 3: Send Out Ad Click Attribution Data</h3>\n<p>Now we come to the third and final step — the browser reports that a conversion happened for a user that had previously clicked an ad.</p>\n<figure><img loading=\"lazy\" width=\"2916\" height=\"1092\" src=\"https://webkit.org/wp-content/uploads/send-ad-click-attribution-data.png\" alt=\"Send Ad Click Attribution Data\" srcset=\"https://webkit.org/wp-content/uploads/send-ad-click-attribution-data.png 2916w, https://webkit.org/wp-content/uploads/send-ad-click-attribution-data-300x112.png 300w, https://webkit.org/wp-content/uploads/send-ad-click-attribution-data-768x288.png 768w, https://webkit.org/wp-content/uploads/send-ad-click-attribution-data-1024x383.png 1024w\" sizes=\"(max-width: 2916px) 100vw, 2916px\"></figure>\n<p>Once the browser has matched a conversion against a stored ad click, it sets a timer, randomized between 24 and 48 hours. When that timer fires, the browser makes an ephemeral, stateless POST request to the same well-known location. In our example, the request would go to https://search.example/.well-known/ad-click-attribution/20/55, with the referrer request header set to https://shop.example.</p>\n<p>In plain English this report would say: <em>24 to 48 hours ago, some user who previously clicked shop.example’s ad campaign 55 on search.example, converted with data 20 on shop.example.</em></p>\n<p>Once the ephemeral, stateless POST request goes out, the stored ad click is consumed and cannot be converted further. This is in part why we have the minimum delay of 24 hours. During that delay, shop.example has the opportunity to signal further conversions, for instance down a sales funnel, and only the most important conversion will be sent in the POST request. The importance is controlled through the optional priority parameter in the conversion redirect, as mentioned above.</p>\n<p>Here are the important privacy aspects of this step:</p>\n<ul>\n<li>Neither search.example nor shop.example know that an attribution request has been scheduled.</li>\n<li>The 24–48 hour delay makes sure a conversion that happens shortly after an ad click will not allow for speculative profiling of the user by search.example. The randomness in the delay makes sure that the request does not in itself reveal when during the day the conversion happened. If shop.example wants time of day data, they will have to spend some of their six bits of conversion data on it.</li>\n<li>The ephemeral, stateless request makes sure the request is not associated with state built up through other browsing. Ephemeral in this sense is referred to as Private Browsing in Safari.</li>\n<li>The well-known location allows for a simple rule if Content Blockers wants to block such conversion reporting.</li>\n</ul>\n<h2>Privacy Considerations</h2>\n<p>For ad click attribution to happen, some bits of data about what happened across two websites need to be sent. Today’s practice of ad click attribution has no practical limit on the bits of data, which allows for full cross-site tracking of users using cookies. This is privacy invasive and thus we are obliged to prevent such ad click attribution from happening in Safari and WebKit.</p>\n<p>But by keeping the entropy of attribution data low enough, we believe the reporting can be done in a privacy preserving way.</p>\n<p>Here is a summary of our privacy considerations for Privacy Preserving Ad Click Attribution:</p>\n<ul>\n<li>Only links served on first-party pages should be able to store ad click attribution data. This ensures that users have a chance of understanding how Privacy Preserving Ad Click Attribution works.</li>\n<li>Neither the website where the ad click happens nor the website where the conversion happens should be able to see whether ad click data has been stored, has been matched, or is scheduled for reporting.</li>\n<li>Ad clicks should only be stored for a limited time, such as a week. Users cannot be expected to understand that a purchase they make today is attributed to an ad click they made months ago.</li>\n<li>The entropy of both ad campaign ID and conversion data needs to be restricted to a point where this data cannot be repurposed for cross-site tracking of users. We propose six bits each for these two pieces of data, or values between 0 and 63.</li>\n<li>Ad click attribution requests should be delayed randomly between 24 to 48 hours. This makes sure that a conversion that happens shortly after an ad click will not allow for speculative cross-site profiling of the user. The randomness in the delay makes sure the request does not in itself reveal when during the day the conversion happened.</li>\n<li>The browser should not guarantee any specific order in which multiple ad click attribution requests are sent, since the order itself could be abused to increase the entropy and allow for cross-site tracking of users.</li>\n<li>The browser should use an ephemeral session (a.k.a. private or incognito mode) to make ad click attribution requests.</li>\n<li>The browser should not use or accept any credentials such as cookies, client certificates, or Basic Authentication in ad click attribution requests or responses.</li>\n<li>The browser should offer a way to turn ad click attribution on and off. We intend to have the default setting to be on to encourage websites to move to this technology and abandon general cross-site tracking.</li>\n<li>The browser should not enable ad click attribution in private/incognito mode.</li>\n</ul>\n<h2>Try It Out In Safari Technology Preview!</h2>\n<p>We’re happy to offer Privacy Preserving Ad Click Attribution as an experimental feature in Safari Technology Preview 82+.</p>\n<p>First, enable the Develop menu, then go to the Experimental Features submenu.</p>\n<figure><img loading=\"lazy\" width=\"1453\" height=\"140\" src=\"https://webkit.org/wp-content/uploads/image.png\" alt=\"\" srcset=\"https://webkit.org/wp-content/uploads/image.png 1453w, https://webkit.org/wp-content/uploads/image-300x29.png 300w, https://webkit.org/wp-content/uploads/image-768x74.png 768w, https://webkit.org/wp-content/uploads/image-1024x99.png 1024w\" sizes=\"(max-width: 1453px) 100vw, 1453px\"><img loading=\"lazy\" width=\"1459\" height=\"137\" src=\"https://webkit.org/wp-content/uploads/experimental-features-dark.png\" alt=\"Experimental Features menu\" srcset=\"https://webkit.org/wp-content/uploads/experimental-features-dark.png 1459w, https://webkit.org/wp-content/uploads/experimental-features-dark-300x28.png 300w, https://webkit.org/wp-content/uploads/experimental-features-dark-768x72.png 768w, https://webkit.org/wp-content/uploads/experimental-features-dark-1024x96.png 1024w\" sizes=\"(max-width: 1459px) 100vw, 1459px\"></figure>\n<p>There you’ll find “Ad Click Attribution” which enables the feature itself, and “Ad Click Attribution Debug Mode” which enables debug logging for developers and shortens the 24–48 hour delay to a static one minute delay, also for use by developers.</p>\n<h3>Debugging the Link Attributes</h3>\n<p>A cross-site anchor element that wants to push ad click attribution data into the browser looks like this:<br>\n<code>&lt;a href=\"https://some.site.example\" addestination=\"https://shop.example\" adcampaignid=\"55\"&gt;</code></p>\n<p>To debug such elements, you use the Web Inspector’s console with the “Preserve Log” setting enabled. Here are a few examples of console warnings you may see if there’s something wrong with your attribution attributes:</p>\n<p><code>Both adcampaignid and addestination need to be set for Ad Click Attribution to work.</code></p>\n<p><code>Ad Click Attribution is only supported in the main frame.</code></p>\n<p>This tells you the anchor element is not part of the main frame.</p>\n<p><code>addestination can not be the same site as the current website.</code> This technology is meant for cross-site attribution of ad clicks. There is no need for it within the same website.</p>\n<h3>Debugging Storage of Ad Clicks</h3>\n<p>For debugging anything beyond the anchor element, you need to use the system log (syslog). Here’s how you achieve that:</p>\n<ol>\n<li>Enable Ad Click Attribution Debug Mode in the Develop–&gt;Experimental Features submenu.</li>\n<li>In your macOS Terminal, run: <code>log stream -info | grep AdClickAttribution</code>.</li>\n</ol>\n<p>Now if you click a cross-site element with adDestination and adCampaignID attributes, you should expect to see the following in your syslog:<br>\n<code>Storing an ad click.</code></p>\n<h3>Debugging Conversions</h3>\n<p>A conversion is signaled through a same-site HTTP redirect to /.well-known/ad-click-attribution/[a decimal value between 0 and 63 representing the conversion data]. Same-site here means search.example needs to be the server redirecting to https://search.example/.well-known/ad-click-attribution/. The reason for this is that search.example should be in control of when stored ad clicks on its site are consumed. Note that the conversion redirect is done as a subresource on shop.example so we don’t mean same-site as the main frame.</p>\n<p>Once you do such a redirect, the syslog might feature one of the following error messages:</p>\n<p><code>Conversion was not accepted because the HTTP redirect was not same-site.</code> This is the requirement mentioned above, i.e. it has to be search.example redirecting to search.example/.well-known/ad-click-attribution/.</p>\n<p><code>Conversion was not accepted because it was requested in an HTTP redirect that is same-site as the first-party.</code> Again, this technology is meant for cross-site attribution of ad clicks. There is no need for it within the same website.</p>\n<p><code>Conversion was not accepted because the URL's protocol is not HTTPS or the URL contains one or more of username, password, query string, and fragment.</code> The request to the well-known location has to be HTTPS and cannot contain a username, password, query string, or fragment.</p>\n<p><code>Conversion was not accepted because the URL path did not start with /.well-known/ad-click-attribution/.</code></p>\n<p><code>Conversion was not accepted because the conversion data could not be parsed or was higher than the allowed maximum of 63.</code></p>\n<p><code>Conversion was not accepted because the URL path contained unrecognized parts.</code> This is a catch-all error message for when the URL has unrecognized path elements or is not of the correct length.</p>\n<h3>Detecting Successful Conversions</h3>\n<p>If you got everything right in the redirect to the well-known location, you should see the following message in the syslog:<br>\n<code>Got a conversion with conversion data: 20 and priority: 0.</code></p>\n<p>Here you see the priority parameter. It is a way for the server to signal how important a particular conversion is so that the browser can report the most important one. Take the sales funnel example. There, multiple conversions will happen in succession: add to shopping cart, enter shipping info, enter payment info, and finalize purchase. Most likely, the finalized purchase is the conversion that should be reported together with the ad campaign ID. Priority can be 0 to 63, higher means higher priority, and the priority value is only used for internal bookkeeping, i.e. not sent in any request.</p>\n<p>Henceforth, lets assume the redirect is done with conversion data 20 and priority 12, like so:<br>\n<code>https://search.example/.well-known/ad-click-attribution/20/12</code></p>\n<p>Now, if there’s a stored ad click that matches this conversion, you’ll see detailed conversion information in the syslog:</p>\n<p><code>Converted a stored ad click with conversion data: 20 and priority: 12.</code> This is when a previously unconverted ad click is converted.</p>\n<p><code>Re-converted an ad click with a new one with conversion data: 20 and priority: 12 because it had higher priority.</code> This is for when there’s a conversion of higher priority that matches an already scheduled conversion request. The ad click is kept, re-converted with the high priority conversion, and scheduled for reporting.</p>\n<p><code>Replaced a previously converted ad click with a new one with conversion data: 20 and priority: 12 because it had higher priority.</code> This is for when there is a <em>different</em> ad click (the user may have clicked more than one ad) with a scheduled conversion request but with lower priority. The newly converted ad click with higher priority replaces the old one.</p>\n<p>Finally, you’ll see the scheduling of the report request in the syslog:<br>\n<code>Setting timer for firing conversion requests to the debug mode timeout of 60 seconds where the regular timeout would have been 111003 seconds.</code> This is special-cased for Ad Click Attribution Debug Mode. Instead of the 24 to 48 hour delay, there’s only a 60 second delay. The log message tells what the real delay would have been, in this case ≈31 hours.</p>\n<h3>Receiving Conversion Reports</h3>\n<p>When the scheduled timer fires, an HTTP POST request is made to ./well-known/ad-click-attribution/[conversion data]/[ad campaign ID], effectively reporting that a conversion happened for a user that previously clicked an associated advertisement. In our example, this request would go to:<br>\n<code>https://search.example/.well-known/ad-click-attribution/20/55</code><br>\n… with the referrer request header set to:<br>\n<code>https://shop.example/</code></p>\n<p>When this request is about to go out, you’ll see the following syslog entry:<br>\n<code>About to fire an attribution request for a conversion.</code></p>\n<p>If something went wrong with the request, you’ll see it in the syslog:<br>\n<code>Received error: [error message] for ad click attribution request.</code></p>\n<h2>Where To Send Feedback and Bug Reports</h2>\n<p>Privacy Preserving Ad Click Attribution is in the early stage of being <a href=\"https://wicg.github.io/ad-click-attribution/index.html\">proposed as a standard</a> through the W3C Web Platform Incubator Community Group (WICG). Please <a href=\"https://github.com/WICG/ad-click-attribution/issues/\">join the discussion and file issues</a> to discuss how this technology fits with your use cases.</p>\n<p>If you find that the experimental feature in Safari Technology Preview doesn’t work as explained, please file a WebKit bug at <a href=\"https://bugs.webkit.org/\">https://bugs.webkit.org</a> and CC John Wilander.</p>\n<p>For technical inquiries on Privacy Preserving Ad Click Attribution, you’ll find me on Twitter: <a href=\"https://twitter.com/johnwilander\">@johnwilander</a></p>\n\n                            </div>\n        </article></div>","textContent":"\n            \n            \n\n            \n                                \n                \nA typical website is made of numerous components coming from a wide variety of sources. Many of the sources that make up a website are opaque to the user, and some third-party resources are designed to identify and track users as they browse the web, often in order to retarget ads and measure ad campaign effectiveness.\nThe combination of third-party web tracking and ad campaign measurement has led many to conflate web privacy with a web free of advertisements. We think that’s a misunderstanding. Online ads and measurement of their effectiveness do not require Site A, where you clicked an ad, to learn that you purchased something on Site B. The only data needed for measurement is that someone who clicked an ad on Site A made a purchase on Site B.\nToday we are presenting a new technology to allow attribution of ad clicks on the web while preserving user privacy. We used the following principles as we designed this technology:\n\nUsers should not be uniquely identified across websites for the purposes of ad click attribution. This means the combined data of an ad click and a conversion should not be attributable to a single user at web scale. To achieve this, our design has the following properties:\n\nUp to 64 ad campaigns can be measured in parallel per website where ads are placed by an advertiser. This low number means ad campaign IDs cannot be turned into user identifiers.\nUp to 64 conversion events can be distinguished on the advertiser’s own website. This means conversion IDs are also restricted from being turned into user identifiers.\n\n\nOnly websites that users visit should be involved in measuring ad clicks and conversions. This means that opaque third-parties should not receive ad click attribution reports and we enforce it by requiring that the ad link is part of a first-party webpage and by only reporting on which first-party website a conversion happened.\nThe browser should act on behalf of the user and do its best to preserve privacy while reporting on ad click attribution. We achieve this by:\n\nSending attribution reports in a dedicated Private Browsing Mode even though the user is in regular browsing mode.\nDisallowing data like cookies for reporting purposes.\nDelaying reports randomly between 24 and 48 hours.\nNot supporting Privacy Preserving Ad Click Attribution at all when the user is in Private Browsing Mode.\n\n\nThe browser vendor should not learn about the user’s ad clicks or conversions. For this reason, we designed the feature to do all of its work on-device. The browser vendor does not see any of the ad click attribution data.\n\nCritically, our solution avoids placing trust in any of the parties involved — the ad network, the merchant, or any other intermediaries — and dramatically limits the entropy of data passed between them to prevent communication of a tracking identifier.\nAd Click Attribution in a Nutshell\nHere’s a simple example of ad click attribution:\nAn online store runs an ad on a search engine website. If a user clicks the ad and eventually buys something, both the online store and the search engine website where the ad was placed want to know; they want the purchase to be attributed to the ad click so that the store knows where to focus their advertising budget. Such attribution is used for measurement of which ads are effective.\nTraditional, Privacy-Invasive Ad Click Attribution\nTraditionally, ad click attribution has been done through the use of cookies and so-called “tracking pixels.” Here’s an illustration of how this works:\n\nThe illustration above shows the user John:\n\nSearching for “grill” on search.example, \nClicking an ad which takes him to shop.example, and \nFinally adding a $90 grill to a shopping cart.\n\nFollowing each action on shop.example, shop.example fires a tracking pixel (a request for an invisible image) to search.example to report progress toward a purchase.\nIn browsers without appropriate privacy protections, search.example will identify John through his cookies every time shop.example fires such a tracking pixel to search.example. This pervasive technology allows search.example to learn everything John does on shop.example and all other websites that fire similar tracking pixels. Even worse, all these pixels fire regardless of whether John has clicked an ad or not.\nNeedless to say, tracking pixels that carry cookies enable sites such as search.example to build up a huge profile of people’s interests, purchasing power, habits, age, et cetera. We refer to this as cross-site tracking and Safari prevents it from happening through the WebKit feature Intelligent Tracking Prevention (ITP).\nAs more and more browsers acknowledge the problems of cross-site tracking, we should expect privacy-invasive ad click attribution to become a thing of the past.\nPrivacy Preserving Ad Click Attribution\nWe propose a modern way of doing ad click attribution that doesn’t allow for cross-site tracking of users but does provide a means of measuring the effectiveness of online ads. It is built into the browser itself and runs on-device which means that the browser vendor does not get to see what ads are clicked or which purchases are made.\nPrivacy Preserving Ad Click Attribution has three steps:\n\nStore ad clicks. This is done by the page hosting the ad at the time of an ad click.\nMatch conversions against stored ad clicks. This is done on the website the ad navigated to as a result of the click. Conversions do not have to happen right after a click and do not have to happen on the specific landing page, just the same website.\nSend out ad click attribution data. This is done by the browser after a conversion matches an ad click.\n\nLet’s go through these steps in detail and which steps we’ve taken to preserve the user’s privacy.\nStep 1: Store Ad Clicks\nAnchor elements, often referred to as links, now support two new, optional attributes called adDestination and adCampaignID.\nAs shown in the illustration below, adDestination is the domain the ad click is navigating the user to, and adCampaignID is the identifier of the ad campaign.\n\nIf the user clicks the ad link on search.example, the browser will follow the navigation, through potential redirects, to make sure that the user actually lands on shop.example. If so, the browser stores the ad click, comprising the following data (presented here in plain English): The user clicked shop.example’s ad campaign 55 on search.example.\nHere are the important privacy aspects of this step:\n\nThe link needs to be an element on the first-party website (the main frame), not a link in an iframe. This is to meet user expectations and to be able to provide control to the user. Users can only be expected to understand which first-party website they clicked an ad on and which first-party website they made a purchase on. We also think it’s important that the first-party website that serves the ad is the one attributed for the performance of the ad campaign.\nNeither search.example nor shop.example can read the stored ad click data or detect that it exists.\nThe browser only stores ad clicks for a limited time. In WebKit’s implementation that is seven days.\nThe entropy of the ad campaign ID needs to be properly restricted to not become a cross-site tracking vector. WebKit’s implementation allows a value between 0 and 63, i.e. a maximum of 64 shop.example ad campaigns running in parallel on search.example.\n\nStep 2: Match Conversions Against Stored Ad Clicks\nTo achieve ad click attribution, the browser needs to be able to match conversions with stored ad clicks. What are conversions?\n\nAdding an item to the shopping cart is a conversion.\nSigning up for a new service is a conversion.\nEntering shipping or payment information is a conversion.\nPulling the trigger and actually buying something is a conversion.\n\nMatching conversions to ad clicks allows shop.example to understand that a specific ad campaign may be effective in getting customers to add items to their shopping carts but something in the checkout flow throws them off.\nHow does Privacy Preserving Ad Click Attribution detect a conversion and match it with a stored ad click? It makes use of the legacy tracking pixels!\n\nIn the illustration above, an existing request to the existing tracking pixel is redirected by search.example on its own server infrastructure to a well-known location in order to signal to the browser that this is in fact a conversion happening. Note that privacy protections such as ITP will typically make sure that no cookies are sent in this request.\nThe path parameter “20” at the end of the well-known location is the conversion data. This gives shop.example an opportunity to say something about the conversion such as where in the sales funnel the customer is, what the value of the conversion is, what time of day it is, or whatever they decide is relevant for them.\nThe redirect to the well-known location may also include an optional priority parameter which indicates the importance of this particular conversion in the case of multiple conversions matching the same stored ad click.\nHere are the important privacy aspects of this step:\n\nNeither search.example nor shop.example know whether there is any stored ad click data to be matched against.\nNeither search.example nor shop.example are told by the browser whether there was a match or not.\nThe entropy of the ad conversion data needs to be properly restricted to not become a cross-site tracking vector. WebKit’s implementation allows a value between 0 and 63, i.e. six bits to distinguish conversion events. As mentioned earlier, shop.example decides what goes into these bits. For instance, they may spend two bits on monetary value in four buckets: {less than $10, between $10 and $50, between $51 and $200, above $200}.\n\nWe expect to also implement a JavaScript API to send this information to the .well-known location to remove the requirement for tracking pixels but we’d like to openly discuss what should go into that API since it is much more forward looking than retrofitting existing tracking pixels.\nStep 3: Send Out Ad Click Attribution Data\nNow we come to the third and final step — the browser reports that a conversion happened for a user that had previously clicked an ad.\n\nOnce the browser has matched a conversion against a stored ad click, it sets a timer, randomized between 24 and 48 hours. When that timer fires, the browser makes an ephemeral, stateless POST request to the same well-known location. In our example, the request would go to https://search.example/.well-known/ad-click-attribution/20/55, with the referrer request header set to https://shop.example.\nIn plain English this report would say: 24 to 48 hours ago, some user who previously clicked shop.example’s ad campaign 55 on search.example, converted with data 20 on shop.example.\nOnce the ephemeral, stateless POST request goes out, the stored ad click is consumed and cannot be converted further. This is in part why we have the minimum delay of 24 hours. During that delay, shop.example has the opportunity to signal further conversions, for instance down a sales funnel, and only the most important conversion will be sent in the POST request. The importance is controlled through the optional priority parameter in the conversion redirect, as mentioned above.\nHere are the important privacy aspects of this step:\n\nNeither search.example nor shop.example know that an attribution request has been scheduled.\nThe 24–48 hour delay makes sure a conversion that happens shortly after an ad click will not allow for speculative profiling of the user by search.example. The randomness in the delay makes sure that the request does not in itself reveal when during the day the conversion happened. If shop.example wants time of day data, they will have to spend some of their six bits of conversion data on it.\nThe ephemeral, stateless request makes sure the request is not associated with state built up through other browsing. Ephemeral in this sense is referred to as Private Browsing in Safari.\nThe well-known location allows for a simple rule if Content Blockers wants to block such conversion reporting.\n\nPrivacy Considerations\nFor ad click attribution to happen, some bits of data about what happened across two websites need to be sent. Today’s practice of ad click attribution has no practical limit on the bits of data, which allows for full cross-site tracking of users using cookies. This is privacy invasive and thus we are obliged to prevent such ad click attribution from happening in Safari and WebKit.\nBut by keeping the entropy of attribution data low enough, we believe the reporting can be done in a privacy preserving way.\nHere is a summary of our privacy considerations for Privacy Preserving Ad Click Attribution:\n\nOnly links served on first-party pages should be able to store ad click attribution data. This ensures that users have a chance of understanding how Privacy Preserving Ad Click Attribution works.\nNeither the website where the ad click happens nor the website where the conversion happens should be able to see whether ad click data has been stored, has been matched, or is scheduled for reporting.\nAd clicks should only be stored for a limited time, such as a week. Users cannot be expected to understand that a purchase they make today is attributed to an ad click they made months ago.\nThe entropy of both ad campaign ID and conversion data needs to be restricted to a point where this data cannot be repurposed for cross-site tracking of users. We propose six bits each for these two pieces of data, or values between 0 and 63.\nAd click attribution requests should be delayed randomly between 24 to 48 hours. This makes sure that a conversion that happens shortly after an ad click will not allow for speculative cross-site profiling of the user. The randomness in the delay makes sure the request does not in itself reveal when during the day the conversion happened.\nThe browser should not guarantee any specific order in which multiple ad click attribution requests are sent, since the order itself could be abused to increase the entropy and allow for cross-site tracking of users.\nThe browser should use an ephemeral session (a.k.a. private or incognito mode) to make ad click attribution requests.\nThe browser should not use or accept any credentials such as cookies, client certificates, or Basic Authentication in ad click attribution requests or responses.\nThe browser should offer a way to turn ad click attribution on and off. We intend to have the default setting to be on to encourage websites to move to this technology and abandon general cross-site tracking.\nThe browser should not enable ad click attribution in private/incognito mode.\n\nTry It Out In Safari Technology Preview!\nWe’re happy to offer Privacy Preserving Ad Click Attribution as an experimental feature in Safari Technology Preview 82+.\nFirst, enable the Develop menu, then go to the Experimental Features submenu.\n\nThere you’ll find “Ad Click Attribution” which enables the feature itself, and “Ad Click Attribution Debug Mode” which enables debug logging for developers and shortens the 24–48 hour delay to a static one minute delay, also for use by developers.\nDebugging the Link Attributes\nA cross-site anchor element that wants to push ad click attribution data into the browser looks like this:\n<a href=\"https://some.site.example\" addestination=\"https://shop.example\" adcampaignid=\"55\">\nTo debug such elements, you use the Web Inspector’s console with the “Preserve Log” setting enabled. Here are a few examples of console warnings you may see if there’s something wrong with your attribution attributes:\nBoth adcampaignid and addestination need to be set for Ad Click Attribution to work.\nAd Click Attribution is only supported in the main frame.\nThis tells you the anchor element is not part of the main frame.\naddestination can not be the same site as the current website. This technology is meant for cross-site attribution of ad clicks. There is no need for it within the same website.\nDebugging Storage of Ad Clicks\nFor debugging anything beyond the anchor element, you need to use the system log (syslog). Here’s how you achieve that:\n\nEnable Ad Click Attribution Debug Mode in the Develop–>Experimental Features submenu.\nIn your macOS Terminal, run: log stream -info | grep AdClickAttribution.\n\nNow if you click a cross-site element with adDestination and adCampaignID attributes, you should expect to see the following in your syslog:\nStoring an ad click.\nDebugging Conversions\nA conversion is signaled through a same-site HTTP redirect to /.well-known/ad-click-attribution/[a decimal value between 0 and 63 representing the conversion data]. Same-site here means search.example needs to be the server redirecting to https://search.example/.well-known/ad-click-attribution/. The reason for this is that search.example should be in control of when stored ad clicks on its site are consumed. Note that the conversion redirect is done as a subresource on shop.example so we don’t mean same-site as the main frame.\nOnce you do such a redirect, the syslog might feature one of the following error messages:\nConversion was not accepted because the HTTP redirect was not same-site. This is the requirement mentioned above, i.e. it has to be search.example redirecting to search.example/.well-known/ad-click-attribution/.\nConversion was not accepted because it was requested in an HTTP redirect that is same-site as the first-party. Again, this technology is meant for cross-site attribution of ad clicks. There is no need for it within the same website.\nConversion was not accepted because the URL's protocol is not HTTPS or the URL contains one or more of username, password, query string, and fragment. The request to the well-known location has to be HTTPS and cannot contain a username, password, query string, or fragment.\nConversion was not accepted because the URL path did not start with /.well-known/ad-click-attribution/.\nConversion was not accepted because the conversion data could not be parsed or was higher than the allowed maximum of 63.\nConversion was not accepted because the URL path contained unrecognized parts. This is a catch-all error message for when the URL has unrecognized path elements or is not of the correct length.\nDetecting Successful Conversions\nIf you got everything right in the redirect to the well-known location, you should see the following message in the syslog:\nGot a conversion with conversion data: 20 and priority: 0.\nHere you see the priority parameter. It is a way for the server to signal how important a particular conversion is so that the browser can report the most important one. Take the sales funnel example. There, multiple conversions will happen in succession: add to shopping cart, enter shipping info, enter payment info, and finalize purchase. Most likely, the finalized purchase is the conversion that should be reported together with the ad campaign ID. Priority can be 0 to 63, higher means higher priority, and the priority value is only used for internal bookkeeping, i.e. not sent in any request.\nHenceforth, lets assume the redirect is done with conversion data 20 and priority 12, like so:\nhttps://search.example/.well-known/ad-click-attribution/20/12\nNow, if there’s a stored ad click that matches this conversion, you’ll see detailed conversion information in the syslog:\nConverted a stored ad click with conversion data: 20 and priority: 12. This is when a previously unconverted ad click is converted.\nRe-converted an ad click with a new one with conversion data: 20 and priority: 12 because it had higher priority. This is for when there’s a conversion of higher priority that matches an already scheduled conversion request. The ad click is kept, re-converted with the high priority conversion, and scheduled for reporting.\nReplaced a previously converted ad click with a new one with conversion data: 20 and priority: 12 because it had higher priority. This is for when there is a different ad click (the user may have clicked more than one ad) with a scheduled conversion request but with lower priority. The newly converted ad click with higher priority replaces the old one.\nFinally, you’ll see the scheduling of the report request in the syslog:\nSetting timer for firing conversion requests to the debug mode timeout of 60 seconds where the regular timeout would have been 111003 seconds. This is special-cased for Ad Click Attribution Debug Mode. Instead of the 24 to 48 hour delay, there’s only a 60 second delay. The log message tells what the real delay would have been, in this case ≈31 hours.\nReceiving Conversion Reports\nWhen the scheduled timer fires, an HTTP POST request is made to ./well-known/ad-click-attribution/[conversion data]/[ad campaign ID], effectively reporting that a conversion happened for a user that previously clicked an associated advertisement. In our example, this request would go to:\nhttps://search.example/.well-known/ad-click-attribution/20/55\n… with the referrer request header set to:\nhttps://shop.example/\nWhen this request is about to go out, you’ll see the following syslog entry:\nAbout to fire an attribution request for a conversion.\nIf something went wrong with the request, you’ll see it in the syslog:\nReceived error: [error message] for ad click attribution request.\nWhere To Send Feedback and Bug Reports\nPrivacy Preserving Ad Click Attribution is in the early stage of being proposed as a standard through the W3C Web Platform Incubator Community Group (WICG). Please join the discussion and file issues to discuss how this technology fits with your use cases.\nIf you find that the experimental feature in Safari Technology Preview doesn’t work as explained, please file a WebKit bug at https://bugs.webkit.org and CC John Wilander.\nFor technical inquiries on Privacy Preserving Ad Click Attribution, you’ll find me on Twitter: @johnwilander\n\n                            \n        ","length":22049,"excerpt":"A typical website is made of numerous components coming from a wide variety of sources.","byline":"May 22, 2019\n                by John Wilander\n                                @johnwilander","dir":null,"siteName":"WebKit","lang":null},"finalizedMeta":{"title":"Privacy Preserving Ad Click Attribution For the Web","description":"A typical website is made of numerous components coming from a wide variety of sources.","author":false,"creator":"@johnwilander","publisher":false,"date":"2019-05-22T13:05:22-07:00","subject":"Privacy","topics":["Privacy"]},"jsonLd":{"@type":false,"headline":false,"description":false,"image":[],"mainEntityOfPage":{"@type":false,"@id":false},"datePublished":false,"dateModified":false,"isAccessibleForFree":false,"isPartOf":{"@type":[],"name":false,"productID":false},"discussionUrl":false,"license":false,"author":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false},"publisher":{"@type":false,"name":false,"description":false,"sameAs":false,"logo":{"@type":false,"url":false},"publishingPrinciples":false},"editor":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false}},"twitterObj":false,"status":200,"metadata":{"author":false,"title":"  Privacy Preserving Ad Click Attribution For the Web | WebKit","description":false,"canonical":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","keywords":[],"image":"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png","firstParagraph":"May 22, 2019"},"dublinCore":{},"opengraph":{"title":"Privacy Preserving Ad Click Attribution For the Web","description":"A typical website is made of numerous components coming from a wide variety of sources.","url":"https://webkit.org/blog/8943/privacy-preserving-ad-click-attribution-for-the-web/","site_name":"WebKit","locale":false,"type":"article","typeObject":{"published_time":"2019-05-22T06:00:38-07:00","modified_time":"2019-05-22T13:05:22-07:00","author":false,"publisher":false,"section":"Privacy","tag":[]},"image":"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png"},"twitter":{"site":"@webkit","description":"A typical website is made of numerous components coming from a wide variety of sources.","card":"summary_large_image","creator":"@johnwilander","title":"Privacy Preserving Ad Click Attribution For the Web","image":false,"image:src":"https://webkit.org/wp-content/uploads/store-ad-clicks-hero.png"},"archivedData":{"link":false,"wayback":false}}}