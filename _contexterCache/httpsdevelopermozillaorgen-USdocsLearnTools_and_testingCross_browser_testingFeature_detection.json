{"initialLink":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","sanitizedLink":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","finalLink":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","htmlEmbed":"<script>window.contexterSetup=window.contexterSetup||function(){window.contexterSetupComplete=!0;class ContexterLink extends HTMLAnchorElement{constructor(){super()}connectedCallback(){this.setAttribute(\"target\",\"_blank\")}}customElements.define(\"contexter-link\",ContexterLink,{extends:\"a\"}),customElements.define(\"contexter-inner\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__inner\"}}),customElements.define(\"contexter-thumbnail\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__thumbnail\"}}),customElements.define(\"contexter-byline\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__byline\"}}),customElements.define(\"contexter-keywordset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__keywordset\"}}),customElements.define(\"contexter-linkset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__linkset\"}}),customElements.define(\"contexter-meta\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__meta\"}}),customElements.define(\"contexter-summary\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"p-summary entry-summary\"}}),customElements.define(\"contexter-box-head\",class extends HTMLElement{constructor(){super()}connectedCallback(){this.className=\"contexter-box__head\"}}),customElements.define(\"contexter-box-inner\",class extends HTMLElement{constructor(){super()}connectedCallback(){}});class ContexterBox extends HTMLElement{constructor(){super(),this.first=!0,this.shadow=this.attachShadow({mode:\"open\"})}connectedCallback(){if(this.first){this.first=!1;var style=document.createElement(\"style\"),lightDomStyle=(style.innerHTML=`:host {--background: #f5f6f7;--border: darkblue;--blue: #0000ee;--font-color: black;--inner-border: black;font-family: Franklin,Arial,Helvetica,sans-serif;font-size: 14px;background: var(--background);width: 600px;color: var(--font-color);min-height: 90px;display: block;padding: 8px;border: 1px solid var(--border);cursor: pointer;box-sizing: border-box;margin: 6px;contain: content;margin: 6px auto;}// can only select top-level nodes with slotted::slotted(*) {max-width: 100%;display:block;}::slotted([slot=thumbnail]) {max-width: 100%;display:block;}::slotted([slot=header]) {width: 100%;font-size: 1.25rem;font-weight: bold;display:block;margin-bottom: 6px;}::slotted([slot=author]) {max-width: 50%;font-size: 12px;display:inline-block;float: left;}::slotted([slot=time]) {max-width: 50%;font-size: 12px;display:inline-block;float: right;}::slotted([slot=summary]) {width: 100%;margin-top: 6px;padding: 10px 2px;border-top: 1px solid var(--inner-border);font-size: 15px;display:inline-block;margin-bottom: 6px;}contexter-meta {height: auto;margin-bottom: 4px;width: 100%;display: grid;position: relative;min-height: 16px;grid-template-columns: repeat(2, 1fr);}::slotted([slot=keywords]) {width: 80%;padding: 2px 4px;border-top: 1px solid var(--inner-border);font-size: 11px;display: block;float: right;font-style: italic;text-align: right;grid-column: 2/2;grid-row: 1;align-self: end;justify-self: end;}::slotted([slot=keywords]):empty {border-top: 0px solid var(--inner-border);}::slotted([slot=archive-link]) {font-size: 1em;display: inline;}::slotted([slot=archive-link])::after {content: \"|\";display: inline;color: var(--font-color);text-decoration: none;margin: 0 .5em;}::slotted([slot=read-link]) {font-size: 1em;display: inline;}contexter-linkset {width: 80%;padding: 2px 4px;font-size: 13px;float: left;font-weight: bold;grid-row: 1;grid-column: 1/2;align-self: end;justify-self: start;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {:host {width: 310px;}}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){:host {--background: #354150;--border: #1f2b37;--blue: #55b0ff;--font-color: #ffffff;--inner-border: #787a7c;background: var(--background);border: 1px solid var(--border)}}`,document.createElement(\"style\"));lightDomStyle.innerHTML=`contexter-box {contain: content;}contexter-box .read-link {font-weight: bold;}contexter-box a {color: #0000ee;}contexter-box img {width: 100%;border: 0;padding: 0;margin: 0;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {...}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){contexter-box a {color: #55b0ff;}}`,this.appendChild(lightDomStyle),this.shadow.appendChild(style);const innerContainer=document.createElement(\"contexter-box-inner\"),innerSlotThumbnail=(this.shadow.appendChild(innerContainer),document.createElement(\"slot\")),innerSlotHeader=(innerSlotThumbnail.name=\"thumbnail\",innerContainer.appendChild(innerSlotThumbnail),document.createElement(\"slot\")),innerSlotAuthor=(innerSlotHeader.name=\"header\",innerContainer.appendChild(innerSlotHeader),document.createElement(\"slot\")),innerSlotTime=(innerSlotAuthor.name=\"author\",innerContainer.appendChild(innerSlotAuthor),document.createElement(\"slot\")),innerSlotSummary=(innerSlotTime.name=\"time\",innerContainer.appendChild(innerSlotTime),document.createElement(\"slot\")),metaContainer=(innerSlotSummary.name=\"summary\",innerContainer.appendChild(innerSlotSummary),document.createElement(\"contexter-meta\")),innerSlotInfo=(innerContainer.appendChild(metaContainer),document.createElement(\"slot\")),linkContainer=(innerSlotInfo.name=\"keywords\",metaContainer.appendChild(innerSlotInfo),document.createElement(\"contexter-linkset\")),innerSlotArchiveLink=(metaContainer.appendChild(linkContainer),document.createElement(\"slot\")),innerSlotReadLink=(innerSlotArchiveLink.name=\"archive-link\",linkContainer.appendChild(innerSlotArchiveLink),document.createElement(\"slot\"));innerSlotReadLink.name=\"read-link\",linkContainer.appendChild(innerSlotReadLink),this.className=\"contexter-box\",this.onclick=e=>{if(!e.target.className.includes(\"read-link\")&&!e.target.className.includes(\"title-link\")){const mainLinks=this.querySelectorAll(\"a.main-link\");mainLinks[0].click()}}}}}customElements.define(\"contexter-box\",ContexterBox)},window.contexterSetupComplete||window.contexterSetup();</script><contexter-box class=\"link-card h-entry hentry\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\"><contexter-thumbnail class=\"thumbnail\" slot=\"thumbnail\"></contexter-thumbnail><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><a is=\"contexter-link\" href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" itemprop=\"url\">Implementing feature detection - Learn web development | MDN</a></contexter-box-head></contexter-box-head><time class=\"dt-published published\" slot=\"time\" itemprop=\"datePublished\" datetime=\"2022-04-05T17:38:37.491Z\">3/5/2022</time><contexter-summary class=\"p-summary entry-summary\" itemprop=\"abstract\" slot=\"summary\"><p>This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.</p></contexter-summary><contexter-keywordset itemprop=\"keywords\" slot=\"keywords\"></contexter-keywordset><a is=\"contexter-link\" href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" class=\"read-link main-link\" itemprop=\"sameAs\" slot=\"read-link\">Read</a></contexter-box>","linkId":"eded70c12015d799c02584f37793bfac2ab0c2cb","data":{"originalLink":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","sanitizedLink":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","canonical":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","htmlText":"<!DOCTYPE html><html lang=\"en-US\" prefix=\"og: https://ogp.me/ns#\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><link rel=\"icon\" href=\"/favicon-48x48.cbbd161b.png\"><link rel=\"apple-touch-icon\" href=\"/apple-touch-icon.6803c6f0.png\"><meta name=\"theme-color\" content=\"#ffffff\"><link rel=\"manifest\" href=\"/manifest.56b1cedc.json\"><link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch.xml\" title=\"MDN Web Docs\"><script>Array.prototype.flat&&Array.prototype.includes||document.write('<script src=\"https://polyfill.io/v3/polyfill.min.js?features=Array.prototype.flat%2Ces6\"><\\/script>')</script><title>Implementing feature detection - Learn web development | MDN</title><link rel=\"alternate\" title=\"Implementing feature detection\" href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" hreflang=\"en\"><link rel=\"alternate\" title=\"Implementing feature detection\" href=\"https://developer.mozilla.org/zh-CN/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" hreflang=\"zh\"><link rel=\"alternate\" title=\"Реализация функции обнаружения\" href=\"https://developer.mozilla.org/ru/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" hreflang=\"ru\"><link rel=\"alternate\" title=\"機能検出の実装\" href=\"https://developer.mozilla.org/ja/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" hreflang=\"ja\"><meta name=\"description\" content=\"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.\"><meta property=\"og:url\" content=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\"><meta property=\"og:title\" content=\"Implementing feature detection - Learn web development | MDN\"><meta property=\"og:description\" content=\"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.\"><meta property=\"og:locale\" content=\"en-US\"><meta property=\"og:image\" content=\"https://developer.mozilla.org/mdn-social-share.cd6c4a5a.png\"><meta property=\"twitter:card\" content=\"summary_large_image\"><meta name=\"robots\" content=\"index, follow\"><link rel=\"canonical\" href=\"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\"><style media=\"print\">.breadcrumbs-container,.document-toc-container,.language-menu,.language-toggle,.on-github,.page-footer,.top-navigation-main,nav.sidebar,ul.prev-next{display:none!important}.main-page-content,.main-page-content pre{padding:2px}.main-page-content pre{border-left-width:2px}</style><link href=\"/static/css/main.58575977.chunk.css\" rel=\"stylesheet\"><script>LUX=(function(){var a=(\"undefined\"!==typeof(LUX)&&\"undefined\"!==typeof(LUX.gaMarks)?LUX.gaMarks:[]);var d=(\"undefined\"!==typeof(LUX)&&\"undefined\"!==typeof(LUX.gaMeasures)?LUX.gaMeasures:[]);var j=\"LUX_start\";var k=window.performance;var l=(\"undefined\"!==typeof(LUX)&&LUX.ns?LUX.ns:(Date.now?Date.now():+(new Date())));if(k&&k.timing&&k.timing.navigationStart){l=k.timing.navigationStart}function f(){if(k&&k.now){return k.now()}var o=Date.now?Date.now():+(new Date());return o-l}function b(n){if(k){if(k.mark){return k.mark(n)}else{if(k.webkitMark){return k.webkitMark(n)}}}a.push({name:n,entryType:\"mark\",startTime:f(),duration:0});return}function m(p,t,n){if(\"undefined\"===typeof(t)&&h(j)){t=j}if(k){if(k.measure){if(t){if(n){return k.measure(p,t,n)}else{return k.measure(p,t)}}else{return k.measure(p)}}else{if(k.webkitMeasure){return k.webkitMeasure(p,t,n)}}}var r=0,o=f();if(t){var s=h(t);if(s){r=s.startTime}else{if(k&&k.timing&&k.timing[t]){r=k.timing[t]-k.timing.navigationStart}else{return}}}if(n){var q=h(n);if(q){o=q.startTime}else{if(k&&k.timing&&k.timing[n]){o=k.timing[n]-k.timing.navigationStart}else{return}}}d.push({name:p,entryType:\"measure\",startTime:r,duration:(o-r)});return}function h(n){return c(n,g())}function c(p,o){for(i=o.length-1;i>=0;i--){var n=o[i];if(p===n.name){return n}}return undefined}function g(){if(k){if(k.getEntriesByType){return k.getEntriesByType(\"mark\")}else{if(k.webkitGetEntriesByType){return k.webkitGetEntriesByType(\"mark\")}}}return a}return{mark:b,measure:m,gaMarks:a,gaMeasures:d}})();LUX.ns=(Date.now?Date.now():+(new Date()));LUX.ac=[];LUX.cmd=function(a){LUX.ac.push(a)};LUX.init=function(){LUX.cmd([\"init\"])};LUX.send=function(){LUX.cmd([\"send\"])};LUX.addData=function(a,b){LUX.cmd([\"addData\",a,b])};LUX_ae=[];window.addEventListener(\"error\",function(a){LUX_ae.push(a)});LUX_al=[];if(\"function\"===typeof(PerformanceObserver)&&\"function\"===typeof(PerformanceLongTaskTiming)){var LongTaskObserver=new PerformanceObserver(function(c){var b=c.getEntries();for(var a=0;a<b.length;a++){var d=b[a];LUX_al.push(d)}});try{LongTaskObserver.observe({type:[\"longtask\"]})}catch(e){}};</script><script src=\"https://cdn.speedcurve.com/js/lux.js?id=108906238\" async=\"\" defer=\"\" crossorigin=\"anonymous\"></script><script defer=\"\" src=\"/static/js/ga.js\"></script><script src=\"/static/js/runtime-main.fab7ca3c.js\" defer=\"\"></script><script src=\"/static/js/4.ca2d761a.chunk.js\" defer=\"\"></script><script src=\"/static/js/main.1e030db0.chunk.js\" defer=\"\"></script></head><body><script>const c={light:\"#ffffff\",dark:\"#15141a\"};if(window&&document.body){const o=window.localStorage.getItem(\"theme\");o&&(document.body.className=o,document.body.style.backgroundColor=c[o])}</script><div id=\"root\"><ul id=\"nav-access\" class=\"a11y-nav\"><li><a id=\"skip-main\" href=\"#content\">Skip to main content</a></li><li><a id=\"skip-select-language\" href=\"#select-language\">Skip to select language</a></li></ul><div class=\"page-wrapper  category-learn document-page\"><header class=\"top-navigation\n      \n      \"><div class=\"container \"><div class=\"top-navigation-wrap\"><a href=\"/en-US/\" class=\"logo\" aria-label=\"MDN homepage\"><svg id=\"mdn-docs-logo_svg__mdn-docs-logo\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0\" y=\"0\" viewBox=\"0 0 694.9 104.4\" xml:space=\"preserve\"><style>.mdn-docs-logo_svg__logo-m{fill:var(--text-link)}</style><path d=\"M40.3 0L11.7 92.1H0L28.5 0h11.8zm10.4 0v92.1H40.3V0h10.4zM91 0L62.5 92.1H50.8L79.3 0H91zm10.4 0v92.1H91V0h10.4z\"></path><path class=\"mdn-docs-logo_svg__logo-m\" d=\"M627.9 95.6h67v8.8h-67v-8.8z\"></path><path d=\"M367 42h-4l-10.7 30.8h-5.5l-10.8-26h-.4l-10.5 26h-5.2L308.7 42h-3.8v-5.6H323V42h-6.5l6.8 20.4h.4l10.3-26h4.7l11.2 26h.5l5.7-20.3h-6.2v-5.6H367V42zm34.9 20c-.4 3.2-2 5.9-4.7 8.2-2.8 2.3-6.5 3.4-11.3 3.4-5.4 0-9.7-1.6-13.1-4.7-3.3-3.2-5-7.7-5-13.7 0-5.7 1.6-10.3 4.7-14s7.4-5.5 12.9-5.5c5.1 0 9.1 1.6 11.9 4.7s4.3 6.9 4.3 11.3c0 1.5-.2 3-.5 4.7h-25.6c.3 7.7 4 11.6 10.9 11.6 2.9 0 5.1-.7 6.5-2 1.5-1.4 2.5-3 3-4.9l6 .9zM394 51.3c.2-2.4-.4-4.7-1.8-6.9s-3.8-3.3-7-3.3c-3.1 0-5.3 1-6.9 3-1.5 2-2.5 4.4-2.8 7.2H394zm51 2.4c0 5-1.3 9.5-4 13.7s-6.9 6.2-12.7 6.2c-6 0-10.3-2.2-12.7-6.7-.1.4-.2 1.4-.4 2.9s-.3 2.5-.4 2.9h-7.3c.3-1.7.6-3.5.8-5.3.3-1.8.4-3.7.4-5.5V22.3h-6v-5.6H416v27c1.1-2.2 2.7-4.1 4.7-5.7 2-1.6 4.8-2.4 8.4-2.4 4.6 0 8.4 1.6 11.4 4.7 3 3.2 4.5 7.6 4.5 13.4zm-7.7.6c0-4.2-1-7.4-3-9.5-2-2.2-4.4-3.3-7.4-3.3-3.4 0-6 1.2-8 3.7-1.9 2.4-2.9 5-3 7.7V57c0 3 1 5.6 3 7.7s4.5 3.1 7.6 3.1c3.6 0 6.3-1.3 8.1-3.9 1.8-2.7 2.7-5.9 2.7-9.6zm69.2 18.5h-13.2v-7.2c-1.2 2.2-2.8 4.1-4.9 5.6-2.1 1.6-4.8 2.4-8.3 2.4-4.8 0-8.7-1.6-11.6-4.9-2.9-3.2-4.3-7.7-4.3-13.3 0-5 1.3-9.6 4-13.7 2.6-4.1 6.9-6.2 12.8-6.2 5.7 0 9.8 2.2 12.3 6.5V22.3h-8.6v-5.6h15.8v50.6h6v5.5zM493.2 56v-4.4c-.1-3-1.2-5.5-3.2-7.3s-4.4-2.8-7.2-2.8c-3.6 0-6.3 1.3-8.2 3.9-1.9 2.6-2.8 5.8-2.8 9.6 0 4.1 1 7.3 3 9.5s4.5 3.3 7.4 3.3c3.2 0 5.8-1.3 7.8-3.8 2.1-2.6 3.1-5.3 3.2-8zm53.1-1.4c0 5.6-1.8 10.2-5.3 13.7s-8.2 5.3-13.9 5.3-10.1-1.7-13.4-5.1c-3.3-3.4-5-7.9-5-13.5 0-5.3 1.6-9.9 4.7-13.7 3.2-3.8 7.9-5.7 14.2-5.7s11 1.9 14.1 5.7c3 3.7 4.6 8.1 4.6 13.3zm-7.7-.2c0-4-1-7.2-3-9.5s-4.8-3.5-8.2-3.5c-3.6 0-6.4 1.2-8.3 3.7s-2.9 5.6-2.9 9.5c0 3.7.9 6.8 2.8 9.4 1.9 2.6 4.6 3.9 8.3 3.9 3.6 0 6.4-1.3 8.4-3.8 1.9-2.6 2.9-5.8 2.9-9.7zm45 5.8c-.4 3.2-1.9 6.3-4.4 9.1-2.5 2.9-6.4 4.3-11.8 4.3-5.2 0-9.4-1.6-12.6-4.8-3.2-3.2-4.8-7.7-4.8-13.7 0-5.5 1.6-10.1 4.7-13.9 3.2-3.8 7.6-5.7 13.2-5.7 2.3 0 4.6.3 6.7.8 2.2.5 4.2 1.5 6.2 2.9l1.5 9.5-5.9.7-1.3-6.1c-2.1-1.2-4.5-1.8-7.2-1.8-3.5 0-6.1 1.2-7.7 3.7-1.7 2.5-2.5 5.7-2.5 9.6 0 4.1.9 7.3 2.7 9.5 1.8 2.3 4.4 3.4 7.8 3.4 5.2 0 8.2-2.9 9.2-8.8l6.2 1.3zm34.7 1.9c0 3.6-1.5 6.5-4.6 8.5s-7 3-11.7 3c-5.7 0-10.6-1.2-14.6-3.6l1.2-8.8 5.7.6-.2 4.7c1.1.5 2.3.9 3.6 1.1s2.6.3 3.9.3c2.4 0 4.5-.4 6.5-1.3 1.9-.9 2.9-2.2 2.9-4.1 0-1.8-.8-3.1-2.3-3.8s-3.5-1.3-5.8-1.7-4.6-.9-6.9-1.4c-2.3-.6-4.2-1.6-5.7-2.9-1.6-1.4-2.3-3.5-2.3-6.3 0-4.1 1.5-6.9 4.6-8.5s6.4-2.4 9.9-2.4c2.6 0 5 .3 7.2.9 2.2.6 4.3 1.4 6.1 2.4l.8 8.8-5.8.7-.8-5.7c-2.3-1-4.7-1.6-7.2-1.6-2.1 0-3.7.4-5.1 1.1-1.3.8-2 2-2 3.8 0 1.7.8 2.9 2.3 3.6 1.5.7 3.4 1.2 5.7 1.6 2.2.4 4.5.8 6.7 1.4 2.2.6 4.1 1.6 5.7 3 1.4 1.6 2.2 3.7 2.2 6.6zM197.6 73.2h-17.1v-5.5h3.8V51.9c0-3.7-.7-6.3-2.1-7.9-1.4-1.6-3.3-2.3-5.7-2.3-3.2 0-5.6 1.1-7.2 3.4s-2.4 4.6-2.5 6.9v15.6h6v5.5h-17.1v-5.5h3.8V51.9c0-3.8-.7-6.4-2.1-7.9-1.4-1.5-3.3-2.3-5.6-2.3-3.2 0-5.5 1.1-7.2 3.3-1.6 2.2-2.4 4.5-2.5 6.9v15.8h6.9v5.5h-20.2v-5.5h6V42.4h-6.1v-5.6h13.4v6.4c1.2-2.1 2.7-3.8 4.7-5.2 2-1.3 4.4-2 7.3-2s5.3.7 7.5 2.1c2.2 1.4 3.7 3.5 4.5 6.4 1.1-2.5 2.7-4.5 4.9-6.1s4.8-2.4 7.9-2.4c3.5 0 6.5 1.1 8.9 3.3s3.7 5.6 3.7 10.2v18.2h6.1v5.5zm42.5 0h-13.2V66c-1.2 2.2-2.8 4.1-4.9 5.6-2.1 1.6-4.8 2.4-8.3 2.4-4.8 0-8.7-1.6-11.6-4.9-2.9-3.2-4.3-7.7-4.3-13.3 0-5 1.3-9.6 4-13.7 2.6-4.1 6.9-6.2 12.8-6.2s9.8 2.2 12.3 6.5V22.7h-8.6v-5.6h15.8v50.6h6v5.5zm-13.3-16.8V52c-.1-3-1.2-5.5-3.2-7.3s-4.4-2.8-7.2-2.8c-3.6 0-6.3 1.3-8.2 3.9-1.9 2.6-2.8 5.8-2.8 9.6 0 4.1 1 7.3 3 9.5s4.5 3.3 7.4 3.3c3.2 0 5.8-1.3 7.8-3.8 2.1-2.6 3.1-5.3 3.2-8zm61.5 16.8H269v-5.5h6V51.9c0-3.7-.7-6.3-2.2-7.9-1.4-1.6-3.4-2.3-5.7-2.3-3.1 0-5.6 1-7.4 3s-2.8 4.4-2.9 7v15.9h6v5.5h-19.3v-5.5h6V42.4h-6.2v-5.6h13.6V43c2.6-4.6 6.8-6.9 12.7-6.9 3.6 0 6.7 1.1 9.2 3.3s3.7 5.6 3.7 10.2v18.2h6v5.4h-.2z\" fill=\"var(--text-primary)\"></path></svg></a><button aria-expanded=\"false\" aria-haspopup=\"menu\" aria-label=\"Open main menu\" title=\"Open main menu\" type=\"button\" class=\"button action has-icon main-menu-toggle\"><span class=\"button-wrap\"><span class=\"icon icon-menu \"></span><span class=\"visually-hidden\">Open main menu</span></span></button></div><div class=\"top-navigation-main\"><nav class=\"main-nav\" aria-label=\"Main menu\"><ul class=\"main-menu nojs\"><li class=\"top-level-entry-container\"><button type=\"button\" id=\"references-button\" class=\"top-level-entry menu-toggle\" aria-haspopup=\"menu\">References</button><a class=\"top-level-entry\" href=\"/en-US/docs/Web\">References</a><ul class=\"submenu references hidden\" role=\"menu\" aria-labelledby=\"references-button\"><li role=\"none\" class=\"apis-link-container mobile-only \"><a href=\"/en-US/docs/Web\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">Overview / Web Technology</div><p class=\"submenu-item-description\">Web technology reference for developers</p></div></a></li><li role=\"none\" class=\"html-link-container \"><a href=\"/en-US/docs/Web/HTML\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon html\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">HTML</div><p class=\"submenu-item-description\">Structure of content on the web</p></div></a></li><li role=\"none\" class=\"css-link-container \"><a href=\"/en-US/docs/Web/CSS\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon css\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">CSS</div><p class=\"submenu-item-description\">Code used to describe document style</p></div></a></li><li role=\"none\" class=\"javascript-link-container \"><a href=\"/en-US/docs/Web/JavaScript\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon javascript\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">JavaScript</div><p class=\"submenu-item-description\">General-purpose scripting language</p></div></a></li><li role=\"none\" class=\"http-link-container \"><a href=\"/en-US/docs/Web/HTTP\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon http\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">HTTP</div><p class=\"submenu-item-description\">Protocol for transmitting web resources</p></div></a></li><li role=\"none\" class=\"apis-link-container \"><a href=\"/en-US/docs/Web/API\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon apis\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">Web APIs</div><p class=\"submenu-item-description\">Interfaces for building web applications</p></div></a></li><li role=\"none\" class=\"apis-link-container desktop-only \"><a href=\"/en-US/docs/Web\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">Web Technology</div><p class=\"submenu-item-description\">Web technology reference for developers</p></div></a></li></ul></li><li class=\"top-level-entry-container\"><button type=\"button\" id=\"guides-button\" class=\"top-level-entry menu-toggle\" aria-haspopup=\"menu\">Guides</button><a class=\"top-level-entry\" href=\"/en-US/docs/Learn\">Guides</a><ul class=\"submenu guides hidden\" role=\"menu\" aria-labelledby=\"guides-button\"><li role=\"none\" class=\"apis-link-container mobile-only \"><a href=\"/en-US/docs/Learn\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon learn\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">Overview / MDN Learning Area</div><p class=\"submenu-item-description\">Learn web development</p></div></a></li><li role=\"none\" class=\"apis-link-container desktop-only \"><a href=\"/en-US/docs/Learn\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon learn\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">MDN Learning Area</div><p class=\"submenu-item-description\">Learn web development</p></div></a></li><li role=\"none\" class=\"html-link-container \"><a href=\"/en-US/docs/Learn/HTML\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon html\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">HTML</div><p class=\"submenu-item-description\">Learn to structure web content with HTML</p></div></a></li><li role=\"none\" class=\"css-link-container \"><a href=\"/en-US/docs/Learn/CSS\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon css\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">CSS</div><p class=\"submenu-item-description\">Learn to style content using CSS</p></div></a></li><li role=\"none\" class=\"javascript-link-container \"><a href=\"/en-US/docs/Learn/JavaScript\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon javascript\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">JavaScript</div><p class=\"submenu-item-description\">Learn to run scripts in the browser</p></div></a></li><li role=\"none\" class=\" \"><a href=\"/en-US/docs/Web/Accessibility\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">Accessibility</div><p class=\"submenu-item-description\">Learn to make the web accessible to all</p></div></a></li></ul></li><li class=\"top-level-entry-container\"><button id=\"mdn-plus-button\" class=\"top-level-entry menu-toggle\" aria-haspopup=\"menu\">MDN Plus</button><a class=\"top-level-entry\" href=\"/en-US/plus\">MDN Plus</a><ul class=\"submenu mdn-plus hidden\" role=\"menu\" aria-labelledby=\"mdn-plus-button\"><li role=\"none\" class=\"mobile-only \"><a href=\"/en-US/plus\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">Overview</div><p class=\"submenu-item-description\">More MDN. Your MDN.</p></div></a></li><li role=\"none\" class=\" \"><a href=\"/en-US/plus/docs/faq\" class=\"submenu-item \" role=\"menuitem\"><div class=\"submenu-icon\"></div><div class=\"submenu-content-container\"><div class=\"submenu-item-heading\">FAQ</div><p class=\"submenu-item-description\">Frequently asked questions about MDN Plus</p></div></a></li></ul></li></ul></nav><div class=\"header-search\"><form action=\"/en-US/search\" role=\"search\" aria-haspopup=\"listbox\" aria-owns=\"downshift-13347-menu\" aria-expanded=\"false\" class=\"search-form search-widget\" id=\"top-nav-search-form\"><label for=\"top-nav-search-q\" class=\"visually-hidden\">Search MDN</label><input type=\"search\" id=\"top-nav-search-q\" aria-autocomplete=\"list\" aria-controls=\"downshift-13347-menu\" aria-labelledby=\"downshift-13347-label\" autocomplete=\"off\" value=\"\" class=\"search-input-field\" name=\"q\" placeholder=\"   \" required=\"\"><button type=\"button\" class=\"button action has-icon clear-search-button\"><span class=\"button-wrap\"><span class=\"icon icon-cancel \"></span><span class=\"visually-hidden\">Clear search input</span></span></button><button type=\"submit\" class=\"button action has-icon search-button\"><span class=\"button-wrap\"><span class=\"icon icon-search \"></span><span class=\"visually-hidden\">Search</span></span></button><div id=\"downshift-13347-menu\" role=\"listbox\" aria-labelledby=\"downshift-13347-label\"></div></form></div><div class=\"theme-switcher-menu\"><button aria-controls=\"themes-menu\" aria-haspopup=\"menu\" type=\"button\" class=\"button action has-icon theme-switcher-menu small\"><span class=\"button-wrap\"><span class=\"icon icon-theme-os-default \"></span>Theme</span></button></div></div></div></header><div class=\"article-actions-container\"><div class=\"container\"><button type=\"button\" class=\"button action has-icon sidebar-button\"><span class=\"button-wrap\"><span class=\"icon icon-sidebar \"></span></span></button><nav class=\"breadcrumbs-container\" aria-label=\"Breadcrumb navigation\"><ol typeof=\"BreadcrumbList\" vocab=\"https://schema.org/\" aria-label=\"breadcrumbs\"><li property=\"itemListElement\" typeof=\"ListItem\"><a class=\"breadcrumb\" property=\"item\" typeof=\"WebPage\" href=\"/en-US/docs/Learn\"><span property=\"name\">Guides</span></a><meta property=\"position\" content=\"1\"></li><li property=\"itemListElement\" typeof=\"ListItem\"><a class=\"breadcrumb\" property=\"item\" typeof=\"WebPage\" href=\"/en-US/docs/Learn/Tools_and_testing\"><span property=\"name\">Tools and testing</span></a><meta property=\"position\" content=\"2\"></li><li property=\"itemListElement\" typeof=\"ListItem\"><a class=\"breadcrumb\" property=\"item\" typeof=\"WebPage\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\"><span property=\"name\">Cross browser testing</span></a><meta property=\"position\" content=\"3\"></li><li property=\"itemListElement\" typeof=\"ListItem\"><a class=\"breadcrumb-current-page\" property=\"item\" typeof=\"WebPage\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\"><span property=\"name\">Implementing feature detection</span></a><meta property=\"position\" content=\"4\"></li></ol></nav><div class=\"article-actions\"><button type=\"button\" class=\"button action has-icon article-actions-toggle\"><span class=\"button-wrap\"><span class=\"icon icon-ellipses \"></span><span class=\"article-actions-dialog-heading\">Article Actions</span></span></button><ul class=\"article-actions-entries\"><li class=\"article-actions-entry\"><div class=\"languages-switcher-menu open-on-focus-within\"><button aria-controls=\"language-menu\" aria-haspopup=\"menu\" type=\"button\" class=\"button action small has-icon languages-switcher-menu\"><span class=\"button-wrap\"><span class=\"icon icon-language \"></span>English (US)</span></button></div></li></ul></div></div></div><div class=\"article-wrapper\"><nav id=\"sidebar-quicklinks\" class=\"sidebar\"><button type=\"button\" class=\"button action backdrop\"><span class=\"button-wrap\"></span></button><div class=\"sidebar-inner\"><div class=\"in-nav-toc\"><aside class=\"document-toc-container\"><section class=\"document-toc\"><header><h2 class=\"document-toc-heading\">In this article</h2></header><ul class=\"document-toc-list\" id=\"toc-entries\"><li class=\"document-toc-item \"><a class=\"document-toc-link\" aria-current=\"true\" href=\"#the_concept_of_feature_detection\">The concept of feature detection</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#writing_your_own_feature_detection_tests\">Writing your own feature detection tests</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#using_modernizr_to_implement_feature_detection\">Using Modernizr to implement feature detection</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#summary\">Summary</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#in_this_module\">In this module</a></li></ul></section></aside></div><h4 class=\"sidebar-heading\">Related Topics</h4><div>\n\n<ol>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\"><strong>Complete beginners start here!</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Getting started with the Web</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web\">Getting started with the Web overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software\">Installing basic software</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\">What will your website look like?</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files\">Dealing with files</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\">HTML basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\">CSS basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\">JavaScript basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website\">Publishing your website</a></li>\n            <li><a href=\"/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works\">How the Web works</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/HTML\"><strong>HTML — Structuring the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introduction to HTML</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML\">Introduction to HTML overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\">Getting started with HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">What's in the head? Metadata in HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\">HTML text fundamentals</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\">Creating hyperlinks</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\">Advanced text formatting</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\">Document and website structure</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\">Debugging HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\">Assessment: Marking up a letter</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\">Assessment: Structuring a page of content</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Multimedia and embedding</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding\">Multimedia and embedding overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\">Images in HTML</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\">Video and audio content</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\">From object to iframe — other embedding technologies</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\">Adding vector graphics to the Web</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\">Responsive images</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\">Assessment: Mozilla splash page</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>HTML tables</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables\">HTML tables overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Basics\">HTML table basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Advanced\">HTML Table advanced features and accessibility</a></li>\n            <li><a href=\"/en-US/docs/Learn/HTML/Tables/Structuring_planet_data\">Assessment: Structuring planet data</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/CSS\"><strong>CSS — Styling the Web</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS first steps</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps\">CSS first steps overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/What_is_CSS\">What is CSS?</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/Getting_started\">Getting started with CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured\">How CSS is structured</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/How_CSS_works\">How CSS works</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/First_steps/Using_your_new_knowledge\">Using your new knowledge</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS building blocks</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks\">CSS building blocks overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\">Cascade and inheritance</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\">CSS selectors</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/The_box_model\">The box model</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\">Backgrounds and borders</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\">Handling different text directions</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content\">Overflowing content</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\">Values and units</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\">Sizing items in CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements\">Images, media, and form elements</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Styling_tables\">Styling tables</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS\">Debugging CSS</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Building_blocks/Organizing\">Organizing your CSS</a></li>\n      </ol></details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Styling text</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text\">Styling text overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Fundamentals\">Fundamental text and font styling</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_lists\">Styling lists</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Styling_links\">Styling links</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Web_fonts\">Web fonts</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\">Assessment: Typesetting a community school homepage</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>CSS layout</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout\">CSS layout overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Introduction\">Introduction to CSS layout</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow\">Normal Flow</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Grids\">Grids</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Floats\">Floats</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\">Positioning</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\">Multiple-column Layout</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\">Responsive design</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Media_queries\">Beginner's guide to media queries</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\">Legacy Layout Methods</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\">Supporting Older Browsers</a></li>\n            <li><a href=\"/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\">Fundamental Layout Comprehension</a></li>\n          </ol>\n      </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/JavaScript\"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript first steps</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps\">JavaScript first steps overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript\">What is JavaScript?</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/A_first_splash\">A first splash into JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong\">What went wrong? Troubleshooting JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Variables\">Storing the information you need — Variables</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Math\">Basic math in JavaScript — Numbers and operators</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Strings\">Handling text — Strings in JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods\">Useful string methods</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Arrays\">Arrays</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator\">Assessment: Silly story generator</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>JavaScript building blocks</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks\">JavaScript building blocks overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\">Making decisions in your code — Conditionals</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\">Looping code</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\">Functions — Reusable blocks of code</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\">Build your own function</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\">Function return values</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\">Introduction to events</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\">Assessment: Image gallery</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n      <details>\n          <summary>Introducing JavaScript objects</summary>\n          <ol>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects\">Introducing JavaScript objects overview</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Basics\">Object basics</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\">Object prototypes</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming\">Object-oriented programming concepts</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\">Classes in JavaScript</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/JSON\">Working with JSON data</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\">Object building practice</a></li>\n            <li><a href=\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\">Assessment: Adding features to our bouncing balls demo</a></li>\n          </ol>\n      </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Asynchronous JavaScript</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous\">Asynchronous JavaScript overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing\">Introducing asynchronous JavaScript</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Promises\">How to use promises</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Implementing_a_promise-based_API\">Implementing a promise-based API</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing_workers\">Introducing workers</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Asynchronous/Sequencing_animations\">Assessment: sequencing animations</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web APIs</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\">Client-side web APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\">Introduction to web APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\">Manipulating documents</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\">Fetching data from the server</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\">Third party APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\">Drawing graphics</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\">Video and audio APIs</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\">Client-side storage</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Forms\"><strong>Web forms — Working with user data</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Core forms learning pathway</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Forms\">Web forms overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Your_first_form\">Your first form</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\">How to structure a web form</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Basic_native_form_controls\">Basic native form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/HTML5_input_types\">The HTML5 input types</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Other_form_controls\">Other form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Styling_web_forms\">Styling web forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Advanced_form_styling\">Advanced form styling</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/UI_pseudo-classes\">UI pseudo-classes</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Form_validation\">Client-side form validation</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\">Sending form data</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Advanced forms articles</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\">How to build custom form controls</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\">Sending forms through JavaScript</a></li>\n          <li><a href=\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls\">CSS property compatibility table for form controls</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Accessibility\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility guides</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Accessibility\">Accessibility overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/What_is_accessibility\">What is accessibility?</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/HTML\">HTML: A good basis for accessibility</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\">CSS and JavaScript accessibility best practices</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\">WAI-ARIA basics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/Multimedia\">Accessible multimedia</a></li>\n          <li><a href=\"/en-US/docs/Learn/Accessibility/Mobile\">Mobile accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Accessibility assessment</summary>\n        <ol>\n            <li><a href=\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\">Assessment: Accessibility troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing\"><strong>Tools and testing</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Client-side web development tools</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools\">Client-side web development tools index</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\">Client-side tooling overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\">Command line crash course</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\">Package management basics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\">Introducing a complete toolchain</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\">Deploying our app</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Introduction to client-side frameworks</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\">Client-side frameworks overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\">Framework main features</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>React</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\">Getting started with React</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\">Beginning our React todo list</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\">Componentizing our React app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\">React interactivity: Events and state</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\">React interactivity: Editing, filtering, conditional rendering</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\">Accessibility in React</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\">React resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Ember</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\">Getting started with Ember</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\">Ember app structure and componentization</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\">Ember interactivity: Events, classes and state</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\">Routing in Ember</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\">Ember resources and troubleshooting</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Vue</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\">Getting started with Vue</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\">Creating our first Vue component</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\">Rendering a list of Vue components</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\">Adding a new todo form: Vue events, methods, and models</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\">Styling Vue components with CSS</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\">Using Vue computed properties</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \">Vue conditional rendering: editing existing todos</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\">Focus management with Vue refs</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\">Vue resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Svelte</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\">Getting started with Svelte</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\">Starting our Svelte Todo list app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\">Dynamic behavior in Svelte: working with variables and props</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\">Componentizing our Svelte app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\">Working with Svelte stores</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \">TypeScript support in Svelte</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\">Deployment and next steps</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Angular</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\">Getting started with Angular</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\">Beginning our Angular todo list app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\">Styling our Angular app</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\">Creating an item component</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\">Filtering our to-do items</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\">Building Angular applications and further resources</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Git and GitHub</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/GitHub\">Git and GitHub overview</a></li>\n          <li><a href=\"https://guides.github.com/activities/hello-world/\">Hello World</a></li>\n          <li><a href=\"https://guides.github.com/introduction/git-handbook/\">Git Handbook</a></li>\n          <li><a href=\"https://guides.github.com/activities/forking/\">Forking Projects</a></li>\n          <li><a href=\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\">About pull requests</a></li>\n          <li><a href=\"https://guides.github.com/features/issues/\">Mastering Issues</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details open=\"\">\n        <summary>Cross browser testing</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\">Cross browser testing overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\">Implementing feature detection</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n          <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n        </ol>\n    </details>\n  </li>\n  <li data-default-state=\"\"><a href=\"/en-US/docs/Learn/Server-side\"><strong>Server-side website programming</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>First steps</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps\">First steps overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Introduction\">Introduction to the server-side</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\">Client-Server overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Web_frameworks\">Server-side web frameworks</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/First_steps/Website_security\">Website security</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Django web framework (Python)</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django\">Django web framework (Python) overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Introduction\">Introduction</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/development_environment\">Setting up a development environment</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\">Tutorial: The Local Library website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/skeleton_website\">Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Models\">Tutorial Part 3: Using models</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Admin_site\">Tutorial Part 4: Django admin site</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Home_page\">Tutorial Part 5: Creating our home page</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Generic_views\">Tutorial Part 6: Generic list and detail views</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Sessions\">Tutorial Part 7: Sessions framework</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Authentication\">Tutorial Part 8: User authentication and permissions</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Forms\">Tutorial Part 9: Working with forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Testing\">Tutorial Part 10: Testing a Django web application</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/Deployment\">Tutorial Part 11: Deploying Django to production</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/web_application_security\">Web application security</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\">Assessment: DIY mini blog</a></li>\n        </ol>\n    </details>\n  </li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs\">Express Web Framework (Node.js/JavaScript) overview</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction\">Express/Node introduction</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment\">Setting up a Node (Express) development environment</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\">Express tutorial: The Local Library website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website\">Express Tutorial Part 2: Creating a skeleton website</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/routes\">Express Tutorial Part 4: Routes and controllers</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\">Express Tutorial Part 5: Displaying library data</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\">Express Tutorial Part 6: Working with forms</a></li>\n          <li><a href=\"/en-US/docs/Learn/Server-side/Express_Nodejs/deployment\">Express Tutorial Part 7: Deploying to production</a></li>\n        </ol>\n    </details>\n  </li>\n  <li><a href=\"#\"><strong>Further resources</strong></a></li>\n  <li class=\"toggle\">\n    <details>\n        <summary>Common questions</summary>\n        <ol>\n          <li><a href=\"/en-US/docs/Learn/HTML/Howto\">HTML questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/CSS/Howto\">CSS questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/JavaScript/Howto\">JavaScript questions</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Web_mechanics\">Web mechanics</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Tools_and_setup\">Tools and setup</a></li>\n          <li><a href=\"/en-US/docs/Learn/Common_questions#Design_and_accessibility\">Design and accessibility</a></li>\n        </ol>\n    </details>\n  </li>\n</ol>\n\n</div></div></nav><div class=\"toc\"><aside class=\"document-toc-container\"><section class=\"document-toc\"><header><h2 class=\"document-toc-heading\">In this article</h2></header><ul class=\"document-toc-list\" id=\"toc-entries\"><li class=\"document-toc-item \"><a class=\"document-toc-link\" aria-current=\"true\" href=\"#the_concept_of_feature_detection\">The concept of feature detection</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#writing_your_own_feature_detection_tests\">Writing your own feature detection tests</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#using_modernizr_to_implement_feature_detection\">Using Modernizr to implement feature detection</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#summary\">Summary</a></li><li class=\"document-toc-item \"><a class=\"document-toc-link\" href=\"#in_this_module\">In this module</a></li></ul></section></aside></div><main id=\"content\" class=\"main-content\" role=\"main\"><article class=\"main-page-content\" lang=\"en-US\"><h1>Implementing feature detection</h1><div><ul class=\"prev-next\">\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\"><span class=\"button-wrap\"> Previous </span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\"><span class=\"button-wrap\"> Overview: Cross browser testing</span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\"><span class=\"button-wrap\"> Next  </span></a></li>\n</ul>\n<p>Feature detection involves working out whether a browser supports a certain block of code, and running different code depending on whether it does (or doesn't), so that the browser can always provide a working experience rather than crashing/erroring in some browsers. This article details how to write your own simple feature detection, how to use a library to speed up implementation, and native features for feature detection such as <code>@supports</code>.</p>\n<div class=\"table-scroll\"><table>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Prerequisites:</th>\n      <td>\n        Familiarity with the core <a href=\"/en-US/docs/Learn/HTML\">HTML</a>,\n        <a href=\"/en-US/docs/Learn/CSS\">CSS</a>, and\n        <a href=\"/en-US/docs/Learn/JavaScript\">JavaScript</a> languages; an idea\n        of the high-level\n        <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">principles of cross-browser testing</a>.\n      </td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Objective:</th>\n      <td>\n        To understand what the concept of feature detection is, and be able to\n        implement suitable solutions in CSS and JavaScript.\n      </td>\n    </tr>\n  </tbody>\n</table></div></div><h2 id=\"the_concept_of_feature_detection\"><a href=\"#the_concept_of_feature_detection\" title=\"Permalink to The concept of feature detection\">The concept of feature detection</a></h2><div><p>The idea behind feature detection is that you can run a test to determine whether a feature is supported in the current browser, and then conditionally run code to provide an acceptable experience both in browsers that <em>do</em> support the feature, and browsers that <em>don't</em>. If you don't do this, browsers that don't support the features you are using in your code won't display your sites properly and will just fail, creating a bad user experience.</p>\n<p>Let's recap and look at the example we touched on in our <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript#feature_detection\">Handling common JavaScript problems</a> — the <a href=\"/en-US/docs/Web/API/Geolocation_API\">Geolocation API</a> (which exposes available location data for the device the web browser is running on) has the main entry point for its use, a <code>geolocation</code> property available on the global <a href=\"/en-US/docs/Web/API/Navigator\">Navigator</a> object. Therefore, you can detect whether the browser supports geolocation or not by using something like the following:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"geolocation\"</span> <span class=\"token keyword\">in</span> navigator<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">position</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// show the location on a map, perhaps using the Google Maps API</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Give the user a choice of static maps instead perhaps</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>It is probably better to use an established feature detection library however, rather than writing your own all the time. Modernizr is the industry standard for feature detection tests, and we'll look at that later on.</p>\n<p>Before we move on, we'd like to say one thing upfront — don't confuse feature detection with <strong>browser sniffing</strong> (detecting what specific browser is accessing the site) — this is a terrible practice that should be discouraged at all costs. See <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript#using_bad_browser_sniffing_code\">Using bad browser sniffing code</a> for more details.</p></div><h2 id=\"writing_your_own_feature_detection_tests\"><a href=\"#writing_your_own_feature_detection_tests\" title=\"Permalink to Writing your own feature detection tests\">Writing your own feature detection tests</a></h2><div><p>In this section, we'll look at implementing your own feature detection tests, in both CSS and JavaScript.</p></div><h3 id=\"css\"><a href=\"#css\" title=\"Permalink to CSS\">CSS</a></h3><div><p>You can write tests for CSS features by testing for the existence of <em><a href=\"/en-US/docs/Web/API/HTMLElement/style\">element.style.property</a></em> (e.g. <code>paragraph.style.transform</code>) in JavaScript.</p>\n<p>A classic example might be to test for <a href=\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a> support in a browser; for browsers that support the newest Flexbox spec, we could use a flexible and robust flex layout. For browsers that don't, we could use a floated layout that works OK, although it is slightly more brittle and hacky, and not as cool-looking.</p>\n<p>Let's implement something that demonstrates this, although we'll keep it simple for now.</p>\n<ol>\n  <li>Start by making local copies of our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/css-feature-detect.html\" class=\"external\" rel=\" noopener\"><code>css-feature-detect.html</code></a>, <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/flex-layout.css\" class=\"external\" rel=\" noopener\"><code>flex-layout.css</code></a>, <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/float-layout.css\" class=\"external\" rel=\" noopener\"><code>float-layout.css</code></a>, and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/basic-styling.css\" class=\"external\" rel=\" noopener\"><code>basic-styling.css</code></a> files. Save them in a new directory.</li>\n  <li>We will add the HTML5 Shiv to our example too so that the HTML5 semantic elements will style properly in older versions of IE. Download the latest version (see <a href=\"https://github.com/aFarkas/html5shiv#manual-installation\" class=\"external\" rel=\" noopener\">Manual installation</a>), unzip the ZIP file, copy the <code>html5shiv-printshiv.min.js</code> and <code>html5shiv.min.js</code> files into your example directory, and link to one of the files by putting the following under your <a href=\"/en-US/docs/Web/HTML/Element/title\"><code>&lt;title&gt;</code></a> element:\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>html5shiv.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>Have a look at your example CSS files — you'll see that <code>basic-styling.css</code> handles all the styling that we want to give to every browser, whereas the other two CSS files contain the CSS we want to selectively apply to browsers depending on their support levels. You can look at the different effects these two files have by manually changing the CSS file referred to by the second <a href=\"/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element, but let's instead implement some JavaScript to automatically swap them as needed.</li>\n  <li>First, remove the contents of the second <code>&lt;link&gt;</code> element's <code>href</code> attribute. We will fill this in dynamically later on.</li>\n  <li>Next, add a <code>&lt;script&gt;&lt;/script&gt;</code> element at the bottom of your body (just before the closing <code>&lt;/body&gt;</code> tag).</li>\n  <li>Give it the following contents:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> conditional <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.conditional'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> testElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>testElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>flex <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">&amp;&amp;</span> testElem<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>flexFlow <span class=\"token operator\">!==</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  conditional<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'flex-layout.css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  conditional<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'href'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float-layout.css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>Here we are grabbing a reference to the second <code>&lt;link&gt;</code> element, and creating a <code>&lt;div&gt;</code> element as part of our test. In our conditional statement, we test that the <a href=\"/en-US/docs/Web/CSS/flex\"><code>flex</code></a> and <a href=\"/en-US/docs/Web/CSS/flex-flow\"><code>flex-flow</code></a> properties exist in the browser. Note how the JavaScript representations of those properties that are stored inside the <a href=\"/en-US/docs/Web/API/HTMLElement/style\"><code>HTMLElement.style</code></a> object use lower camel case, not hyphens, to separate the words.</p>\n<div class=\"notecard note\" id=\"sect1\">\n  <p><strong>Note:</strong> If you have trouble getting this to work, you can compare it to our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/css-feature-detect-finished.html\" class=\"external\" rel=\" noopener\">css-feature-detect-finished.html</a> code (see also the <a href=\"https://mdn.github.io/learning-area/tools-testing/cross-browser-testing/feature-detection/css-feature-detect-finished.html\" class=\"external\" rel=\" noopener\">live version</a>).</p>\n</div>\n<p>When you save everything and try out your example, you should see the flexbox layout applied to the page if the browser supports modern flexbox, and the float layout if not.</p>\n<div class=\"notecard note\" id=\"sect2\">\n  <p><strong>Note:</strong> Often such an approach is overkill for a minor feature detection problem — you can often get away with using multiple vendor prefixes and fallback properties, as described in <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#css_fallback_behavior\">CSS fallback behavior</a> and <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#handling_css_prefixes\">Handling CSS prefixes</a>.</p>\n</div>\n<h4 id=\"supports\">@supports</h4>\n<p>In recent times, CSS has had its own native feature detection mechanism introduced — the <a href=\"/en-US/docs/Web/CSS/@supports\"><code>@supports</code></a> at-rule. This works in a similar manner to <a href=\"/en-US/docs/Web/CSS/Media_Queries\">media queries</a> (see also <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#responsive_design_problems\">Responsive design problems</a>) — except that instead of selectively applying CSS depending on a media feature like a resolution, screen width or aspect ratio, it selectively applies CSS depending on whether a CSS feature is supported.</p>\n<p>For example, we could rewrite our previous example to use <code>@supports</code> — see <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-feature-detect.html\" class=\"external\" rel=\" noopener\"><code>supports-feature-detect.html</code></a> and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-styling.css\" class=\"external\" rel=\" noopener\"><code>supports-styling.css</code></a>. If you look at the latter, you'll see a couple of <code>@supports</code> blocks, for example:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token punctuation\">(</span><span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> row<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token selector\">main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">main div</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 4%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token selector\">main div:last-child</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This at-rule block applies the CSS rule within only if the current browser supports both the <code>flex-flow: row</code> and <code>flex: 1</code> declarations. For each condition to work, you need to include a complete declaration (not just a property name) and NOT include the semi-colon on the end.</p>\n<p><code>@supports</code> also has <code>OR</code> and <code>NOT</code> logic available — the other block applies the float layout if the flexbox properties are not available:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token atrule\"><span class=\"token rule\">@supports</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span><span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> row<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">/* rules in here */</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>This may look a lot more convenient than the previous example — we can do all of our feature detection in CSS, no JavaScript required, and we can handle all the logic in a single CSS file, cutting down on HTTP requests. the problem here is browser support — <code>@supports</code> is not supported at all in IE, and only supported in very recent versions of Safari/iOS WebKit (9+/9.2+), whereas the JavaScript version should work in much older browsers (probably back to IE8 or 9, although older versions of IE will have additional problems, such as not supporting <a href=\"/en-US/docs/Web/API/Document/querySelector\"><code>Document.querySelector</code></a>, and having a messed up box model).</p></div><h3 id=\"javascript\"><a href=\"#javascript\" title=\"Permalink to JavaScript\">JavaScript</a></h3><div><p>We already saw an example of a JavaScript feature detection test earlier on. Generally, such tests are done via one of the following common patterns:</p>\n<div class=\"table-scroll\"><table class=\"standard-table\">\n  <caption>Summary of JavaScript feature detection techniques</caption>\n  <thead>\n    <tr>\n      <th scope=\"col\">Feature detection type</th>\n      <th scope=\"col\">Explanation</th>\n      <th scope=\"col\">Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em>If member in object</em></td>\n      <td>\n        Check whether a certain method or property (typically an entry point\n        into using the API or other feature you are detecting for) exists in its\n        parent Object.\n      </td>\n      <td>\n        <p><code>if(\"geolocation\" in navigator) { ... }</code></p>\n      </td>\n    </tr>\n    <tr>\n      <td><em>Property on element</em></td>\n      <td>\n        Create an element in memory using\n        <a href=\"/en-US/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a> and then check if a\n        property exists on it. The example shown is a way of detecting\n        <a href=\"/en-US/docs/Web/API/Canvas_API\">HTML5 Canvas</a> support.\n      </td>\n      <td><code>function supports_canvas() {<br>return\n!!document.createElement('canvas').getContext;<br>}<br><br>if(supports_canvas())\n{ ... }</code></td>\n    </tr>\n    <tr>\n      <td><em>Method on element return value</em></td>\n      <td>\n        Create an element in memory using\n        <a href=\"/en-US/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a> and then check if a\n        method exists on it. If it does, check what value it returns.\n      </td>\n      <td>\n        See\n        <a href=\"https://diveinto.html5doctor.com/detect.html#video-formats\" class=\"external\" rel=\" noopener\">Dive Into HTML5 Video Formats detection</a>\n        test.\n      </td>\n    </tr>\n    <tr>\n      <td><em>Property on element retains value</em></td>\n      <td>\n        Create an element in memory using\n        <a href=\"/en-US/docs/Web/API/Document/createElement\"><code>Document.createElement()</code></a>, set a property to\n        a certain value, then check to see if the value is retained.\n      </td>\n      <td>\n        See\n        <a href=\"https://diveinto.html5doctor.com/detect.html#input-types\" class=\"external\" rel=\" noopener\">Dive into HTML5 <code>&lt;input&gt;</code> types detection</a>\n        test.\n      </td>\n    </tr>\n  </tbody>\n</table></div>\n<div class=\"notecard note\" id=\"sect3\">\n  <p><strong>Note:</strong> The double <code>NOT</code> in the above example (<code>!!</code>) is a way to force a return value to become a \"proper\" boolean value, rather than a <a href=\"/en-US/docs/Glossary/Truthy\">Truthy</a>/<a href=\"/en-US/docs/Glossary/Falsy\">Falsy</a> value that may skew the results.</p>\n</div>\n<p>The <a href=\"https://diveinto.html5doctor.com/detect.html\" class=\"external\" rel=\" noopener\">Dive into HTML5 Detecting HTML5 Features</a> page has a lot more useful feature detection tests besides the ones listed above, and you can generally find a feature detection test for most things by searching for \"detect support for YOUR-FEATURE-HERE\" in your favorite search engine. Bear in mind though that some features, however, are known to be undetectable — see Modernizr's list of <a href=\"https://github.com/Modernizr/Modernizr/wiki/Undetectables\" class=\"external\" rel=\" noopener\">Undetectables</a>.</p>\n<h4 id=\"matchmedia\">matchMedia</h4>\n<p>We also wanted to mention the <a href=\"/en-US/docs/Web/API/Window/matchMedia\"><code>Window.matchMedia</code></a> JavaScript feature at this point too. This is a property that allows you to run media query tests inside JavaScript. It looks like this:</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(max-width: 480px)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// run JavaScript in here.</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>As an example, our <a href=\"https://github.com/chrisdavidmills/snapshot\" class=\"external\" rel=\" noopener\">Snapshot</a> demo makes use of it to selectively apply the Brick JavaScript library and use it to handle the UI layout, but only for the small screen layout (480px wide or less). We first use the <code>media</code> attribute to only apply the Brick CSS to the page if the page width is 480px or less:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code>&lt;link href=<span class=\"token string\">\"dist/brick.css\"</span> type=<span class=\"token string\">\"text/css\"</span> rel=<span class=\"token string\">\"stylesheet\"</span> media=<span class=\"token string\">\"all and (max-width: 480px)\"</span>&gt;\n</code></pre></div>\n<p>We then use <code>matchMedia()</code> in the JavaScript several times, to only run Brick navigation functions if we are on the small screen layout (in wider screen layouts, everything can be seen at once, so we don't need to navigate between different views).</p>\n<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(max-width: 480px)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matches<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  deck<span class=\"token punctuation\">.</span><span class=\"token function\">shuffleTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div></div><h2 id=\"using_modernizr_to_implement_feature_detection\"><a href=\"#using_modernizr_to_implement_feature_detection\" title=\"Permalink to Using Modernizr to implement feature detection\">Using Modernizr to implement feature detection</a></h2><div><p>It is possible to implement your own feature detection tests using techniques like the ones detailed above. You might as well use a dedicated feature detection library however, as it makes things much easier. The mother of all feature detection libraries is <a href=\"https://modernizr.com/\" class=\"external\" rel=\" noopener\">Modernizr</a>, and it can detect just about everything you'll ever need. Let's look at how to use it now.</p>\n<p>When you are experimenting with Modernizr you might as well use the development build, which includes every possible feature detection test. Download this now by:</p>\n<ol>\n  <li>Clicking on the <a href=\"https://modernizr.com/download?do_not_use_in_production\" class=\"external\" rel=\" noopener\">Development build</a> link.</li>\n  <li>Clicking the big pink <em>Build</em> button on the page that comes up.</li>\n  <li>Clicking the top <em>Download</em> link in the dialog box that appears.</li>\n</ol>\n<p>Save it somewhere sensible, like the directory you've been creating your other examples for in this article.</p>\n<p>When you are using Modernizr in production, you can go to the <a href=\"https://modernizr.com/download\" class=\"external\" rel=\" noopener\">Download page</a> you've already visited and click the plus buttons for only the features you need feature detects for. Then when you click the <em>Build</em> button, you'll download a custom build containing only those feature detects, making for a much smaller file size.</p></div><h3 id=\"css_2\"><a href=\"#css_2\" title=\"Permalink to CSS\">CSS</a></h3><div><p>Let's have a look at how Modernizr works in terms of selectively applying CSS.</p>\n<ol>\n  <li>First, make a copy of <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-feature-detect.html\" class=\"external\" rel=\" noopener\"><code>supports-feature-detect.html</code></a> and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-styling.css\" class=\"external\" rel=\" noopener\"><code>supports-styling.css</code></a>. Save them as <code>modernizr-css.html</code> and <code>modernizr-css.css</code>.</li>\n  <li>Update your <a href=\"/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element in your HTML so it points to the correct CSS file (you should also update your <a href=\"/en-US/docs/Web/HTML/Element/title\"><code>&lt;title&gt;</code></a> element to something more suitable!):\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modernizr-css.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>Above this <code>&lt;link&gt;</code> element, add a <a href=\"/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> element to apply the Modernizr library to the page, as shown below. This needs to be applied to the page before any CSS (or JavaScript) that might make use of it.\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>modernizr-custom.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>Now edit your opening <code>&lt;html&gt;</code> tag, so that it looks like this:\n    <div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no-js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n  </li>\n</ol>\n<p>At this point, try loading your page, and you'll get an idea of how Modernizr works for CSS features. If you look at the DOM inspector of your browser's developer tools, you'll see that Modernizr has updated your <code>&lt;html&gt;</code> <code>class</code> value like so:</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>js no-htmlimports sizes flash transferables applicationcache blobconstructor\nblob-constructor cookies cors ...AND LOADS MORE VALUES!<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>It now contains a large number of classes that indicate the support status of different technology features. As an example, if the browser didn't support flexbox at all, <code>&lt;html&gt;</code> would be given a class name of <code>no-flexbox</code>. If it did support modern flexbox, it would get a class name of <code>flexbox</code>. If you search through the class list, you'll also see others relating to flexbox, like:</p>\n<ul>\n  <li><code>flexboxlegacy</code> for the old flexbox spec (2009).</li>\n  <li><code>flexboxtweener</code> for 2011 in between syntax supported by IE10.</li>\n  <li><code>flexwrap</code> for the <a href=\"/en-US/docs/Web/CSS/flex-wrap\"><code>flex-wrap</code></a> property, which isn't present in some implementations.</li>\n</ul>\n<div class=\"notecard note\" id=\"sect4\">\n  <p><strong>Note:</strong> You can find a list of what all the class names mean — see <a href=\"https://modernizr.com/docs#features\" class=\"external\" rel=\" noopener\">Features detected by Modernizr</a>.</p>\n</div>\n<p>Moving on, let's update our CSS to use Modernizr rather than <code>@supports</code>. Go into <code>modernizr-css.css</code>, and replace the two <code>@supports</code> blocks with the following:</p>\n<div class=\"code-example\"><pre class=\"brush: css notranslate\"><code><span class=\"token comment\">/* Properties for browsers with modern flexbox */</span>\n\n<span class=\"token selector\">.flexbox main</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flexbox main div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 4%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.flexbox main div:last-child</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* Fallbacks for browsers that don't support modern flexbox */</span>\n\n<span class=\"token selector\">.no-flexbox main div</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 22%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">float</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 4%<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.no-flexbox main div:last-child</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.no-flexbox footer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">clear</span><span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>So how does this work? Because all those class names have been put on the <code>&lt;html&gt;</code> element, you can target browsers that do or don't support a feature using specific descendant selectors. So here we're applying the top set of rules only to browsers that do support flexbox, and the bottom set of rules only to browsers that don't (<code>no-flexbox</code>).</p>\n<div class=\"notecard note\" id=\"sect5\">\n  <p><strong>Note:</strong> Bear in mind that all of Modernizr's HTML and JavaScript feature tests are also reported in these class names, so you can quite happily apply CSS selectively based on whether the browser supports HTML or JavaScript features, if needed.</p>\n</div>\n<div class=\"notecard note\" id=\"sect6\">\n  <p><strong>Note:</strong> If you have trouble getting this to work, check your code against our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.html\" class=\"external\" rel=\" noopener\"><code>modernizr-css.html</code></a> and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.css\" class=\"external\" rel=\" noopener\"><code>modernizr-css.css</code></a> files (see this running live also).</p>\n</div></div><h3 id=\"javascript_2\"><a href=\"#javascript_2\" title=\"Permalink to JavaScript\">JavaScript</a></h3><div><p>Modernizr is also equally well-prepared for implementing JavaScript feature detects too. It does this by making the global <code>Modernizr</code> object available to the page it is applied to, which contains results of the feature detects as <code>true</code>/<code>false</code> properties.</p>\n<p>For example, load up our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.html\" class=\"external\" rel=\" noopener\"><code>modernizr-css.html</code></a> example in your browser, then try going to your JavaScript console and typing in <code>Modernizr.</code> followed by some of those class names (they are the same here too). For example:</p>\n<pre class=\"notranslate\">Modernizr.flexbox\nModernizr.websqldatabase\nModernizr.xhr2\nModernizr.fetch\n</pre>\n<p>The console will return <code>true</code>/<code>false</code> values to indicate whether your browser supports those features or not.</p>\n<p>Let's look at an example to show how you'd use those properties.</p>\n<ol>\n  <li>First of all, make a local copy of the <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-js.html\" class=\"external\" rel=\" noopener\"><code>modernizr-js.html</code></a> example file.</li>\n  <li>Attach the Modernizr library to the HTML using a <code>&lt;script&gt;</code> element, as we have done in previous demos. Put it above the existing <code>&lt;script&gt;</code> element, which is attaching the Google Maps API to the page.</li>\n  <li>Next, fill in the <code>YOUR-API-KEY</code> placeholder text in the second <code>&lt;script&gt;</code> element (as it is now) with a valid Google Maps API key. To get a key, sign in to a Google account, go to the <a href=\"https://developers.google.com/maps/documentation/javascript/get-api-key\" class=\"external\" rel=\" noopener\">Get a Key/Authentication</a> page, then click the blue <em>Get a Key</em> button and follow the instructions.</li>\n  <li>Finally, add another <code>&lt;script&gt;</code> element at the bottom of the HTML body (just before the <code>&lt;/body&gt;</code> tag), and put the following script inside the tags:\n    <div class=\"code-example\"><pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Modernizr<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">position</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">let</span> latlng <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">google<span class=\"token punctuation\">.</span>maps<span class=\"token punctuation\">.</span>LatLng</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">,</span>position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> myOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">zoom</span><span class=\"token operator\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">center</span><span class=\"token operator\">:</span> latlng<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">mapTypeId</span><span class=\"token operator\">:</span> google<span class=\"token punctuation\">.</span>maps<span class=\"token punctuation\">.</span>MapTypeId<span class=\"token punctuation\">.</span><span class=\"token constant\">TERRAIN</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">disableDefaultUI</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">google<span class=\"token punctuation\">.</span>maps<span class=\"token punctuation\">.</span>Map</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"map_canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> myOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> para <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  para<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">'Argh, no geolocation!'</span><span class=\"token punctuation\">;</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>para<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>Try your example out! Here we use the <code>Modernizr.geolocation</code> test to check whether geolocation is supported by the current browser. If it is, we run some code that gets your device's current location, and plots it on a Google Map.</p></div><h2 id=\"summary\"><a href=\"#summary\" title=\"Permalink to Summary\">Summary</a></h2><div><p>This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.</p>\n<p>Next up, we'll start looking at automated testing.</p><ul class=\"prev-next\">\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\"><span class=\"button-wrap\"> Previous </span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\"><span class=\"button-wrap\"> Overview: Cross browser testing</span></a></li>\n    <li><a class=\"button secondary\" href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\"><span class=\"button-wrap\"> Next  </span></a></li>\n</ul></div><h2 id=\"in_this_module\"><a href=\"#in_this_module\" title=\"Permalink to In this module\">In this module</a></h2><div><ul>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" aria-current=\"page\">Implementing feature detection</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n</ul></div><aside class=\"metadata\"><div class=\"metadata-content-container\"><div id=\"on-github\" class=\"on-github\"><h4>Found a problem with this page?</h4><ul><li><a href=\"https://github.com/mdn/content/edit/main/files/en-us/learn/tools_and_testing/cross_browser_testing/feature_detection/index.md\" title=\"You're going to need to sign in to GitHub first (Opens in a new tab)\" target=\"_blank\" rel=\"noopener noreferrer\">Edit on <b>GitHub</b></a></li><li><a href=\"https://github.com/mdn/content/blob/main/files/en-us/learn/tools_and_testing/cross_browser_testing/feature_detection/index.md?plain=1\" title=\"Folder: en-us/learn/tools_and_testing/cross_browser_testing/feature_detection (Opens in a new tab)\" target=\"_blank\" rel=\"noopener noreferrer\">Source on <b>GitHub</b></a></li><li><a href=\"https://github.com/mdn/content/issues/new?body=MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FLearn%2FTools_and_testing%2FCross_browser_testing%2FFeature_detection%0A%0A%23%23%23%23+What+information+was+incorrect%2C+unhelpful%2C+or+incomplete%3F%0A%0A%0A%23%23%23%23+Specific+section+or+headline%3F%0A%0A%0A%23%23%23%23+What+did+you+expect+to+see%3F%0A%0A%0A%23%23%23%23+Did+you+test+this%3F+If+so%2C+how%3F%0A%0A%0A%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EMDN+Content+page+report+details%3C%2Fsummary%3E%0A%0A*+Folder%3A+%60en-us%2Flearn%2Ftools_and_testing%2Fcross_browser_testing%2Ffeature_detection%60%0A*+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FLearn%2FTools_and_testing%2FCross_browser_testing%2FFeature_detection%0A*+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Flearn%2Ftools_and_testing%2Fcross_browser_testing%2Ffeature_detection%2Findex.md%0A*+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2F358158b18ad8c2b90b83fe4dc03bdd7fd2e423da%0A*+Document+last+modified%3A+2022-03-19T16%3A52%3A08.000Z%0A%0A%3C%2Fdetails%3E&amp;title=Issue+with+%22Implementing+feature+detection%22%3A+%28short+summary+here+please%29&amp;labels=needs-triage%2CContent%3ALearn\" title=\"This will take you to https://github.com/mdn/content to file a new issue\" target=\"_blank\" rel=\"noopener noreferrer\">Report a problem with this content on <b>GitHub</b></a></li><li>Want to fix the problem yourself? See<!-- --> <a href=\"https://github.com/mdn/content/blob/main/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">our Contribution guide</a>.</li></ul></div><p class=\"last-modified-date\"><b>Last modified:</b> <time datetime=\"2022-03-19T16:52:08.000Z\">Mar 19, 2022</time>,<!-- --> <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection/contributors.txt\">by MDN contributors</a></p></div></aside></article></main></div></div><footer id=\"nav-footer\" class=\"page-footer\"><div class=\"page-footer-grid\"><div class=\"page-footer-logo-col\"><a href=\"/\" class=\"mdn-footer-logo\" aria-label=\"MDN homepage\"><svg width=\"48\" height=\"17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20.04 16.512h-4.536v-6.096c0-.928-.16-1.592-.48-1.992-.304-.4-.76-.6-1.368-.6-.736 0-1.272.24-1.608.72-.32.48-.48 1.096-.48 1.848v3.792h1.44v2.328H8.472v-6.096c0-.928-.16-1.592-.48-1.992-.304-.4-.76-.6-1.368-.6-.752 0-1.288.24-1.608.72-.32.48-.48 1.096-.48 1.848v3.792H6.6v2.328H0v-2.328h1.44V8.04H.024V5.688h4.512V7.32c.688-1.232 1.784-1.848 3.288-1.848.784 0 1.504.192 2.16.576.656.384 1.112.968 1.368 1.752.64-1.552 1.816-2.328 3.528-2.328.976 0 1.84.304 2.592.912.752.608 1.128 1.552 1.128 2.832v4.968h1.44v2.328zM33.671 16.512h-4.536v-2.016a4.446 4.446 0 01-1.344 1.608c-.592.432-1.376.648-2.352.648-1.424 0-2.544-.488-3.36-1.464-.816-.976-1.224-2.304-1.224-3.984 0-1.616.4-2.992 1.2-4.128.8-1.136 2.008-1.704 3.624-1.704.88 0 1.6.176 2.16.528.56.352.992.8 1.296 1.344V2.352h-2.16V0h5.256v14.184h1.44v2.328zm-4.536-5.472v-.264c0-.896-.24-1.592-.72-2.088-.464-.512-1.048-.768-1.752-.768-.688 0-1.296.256-1.824.768-.512.512-.768 1.32-.768 2.424 0 1.04.24 1.832.72 2.376.48.544 1.048.816 1.704.816.816 0 1.456-.344 1.92-1.032.48-.688.72-1.432.72-2.232zM47.959 16.512h-5.976v-2.328h1.44v-3.768c0-.928-.16-1.592-.48-1.992-.304-.4-.76-.6-1.368-.6-.736 0-1.304.232-1.704.696-.4.448-.608 1.04-.624 1.776v3.888h1.44v2.328H34.71v-2.328h1.44V8.04h-1.56V5.688h4.656v1.656c.72-1.248 1.88-1.872 3.48-1.872 1.024 0 1.912.304 2.664.912.752.608 1.128 1.552 1.128 2.832v4.968h1.44v2.328z\" fill=\"currentColor\"></path></svg></a><p>Your blueprint for a better internet.</p><ul class=\"social-icons\"><li><a class=\"icon icon-twitter\" href=\"https://twitter.com/mozdevnet\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"visually-hidden\">MDN on Twitter</span></a></li><li><a class=\"icon icon-github-mark-small\" href=\"https://github.com/mdn/\" target=\"_blank\" rel=\"noopener noreferrer\"><span class=\"visually-hidden\">MDN on Github</span></a></li></ul></div><div class=\"page-footer-nav-col-1\"><h2 class=\"footer-nav-heading\">MDN</h2><ul class=\"footer-nav-list\"><li class=\"footer-nav-item\"><a href=\"/en-US/about\">About</a></li><li class=\"footer-nav-item\"><a href=\"https://hacks.mozilla.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Hacks Blog</a></li><li class=\"footer-nav-item\"><a href=\"https://www.mozilla.org/en-US/careers/listings/?team=Marketing\" target=\"_blank\" rel=\"noopener noreferrer\">Careers</a></li></ul></div><div class=\"page-footer-nav-col-2\"><h2 class=\"footer-nav-heading\">Support</h2><ul class=\"footer-nav-list\"><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"https://support.mozilla.org/products/mdn-plus\">Product help</a></li><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"/en-US/docs/MDN/Contribute/Feedback#documentation_issues\">Report a page issue</a></li><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"/en-US/docs/MDN/Contribute/Feedback#site_issues\">Report a site issue</a></li></ul></div><div class=\"page-footer-nav-col-3\"><h2 class=\"footer-nav-heading\">Our communities</h2><ul class=\"footer-nav-list\"><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"/en-US/community\">MDN Community</a></li><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"https://discourse.mozilla.org/c/mdn/236\" target=\"_blank\" rel=\"noopener noreferrer\">MDN Forum</a></li><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"https://wiki.mozilla.org/Matrix\" target=\"_blank\" rel=\"noopener noreferrer\">MDN Chat</a></li></ul></div><div class=\"page-footer-nav-col-4\"><h2 class=\"footer-nav-heading\">Developers</h2><ul class=\"footer-nav-list\"><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"/en-US/docs/Web\">Web Technologies</a></li><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"/en-US/docs/Learn\">Learn Web Development</a></li><li class=\"footer-nav-item\"><a class=\"footer-nav-link\" href=\"/en-US/plus\">MDN Plus</a></li></ul></div><div class=\"page-footer-moz\"><a href=\"https://www.mozilla.org/\" class=\"footer-moz-logo-link\" target=\"_blank\" rel=\"noopener noreferrer\"><svg width=\"112\" height=\"32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M41.753 14.218c-2.048 0-3.324 1.522-3.324 4.157 0 2.423 1.119 4.286 3.29 4.286 2.082 0 3.447-1.678 3.447-4.347 0-2.826-1.522-4.096-3.413-4.096zm54.89 7.044c0 .901.437 1.618 1.645 1.618 1.427 0 2.949-1.024 3.044-3.352-.649-.095-1.365-.185-2.02-.185-1.426-.005-2.668.397-2.668 1.92z\" fill=\"currentColor\"></path><path d=\"M0 0v32h111.908V0H0zm32.56 25.426h-5.87v-7.884c0-2.423-.806-3.352-2.39-3.352-1.924 0-2.702 1.365-2.702 3.324v4.868h1.864v3.044h-5.864v-7.884c0-2.423-.806-3.352-2.39-3.352-1.924 0-2.702 1.365-2.702 3.324v4.868h2.669v3.044H6.642v-3.044h1.863v-7.918H6.642V11.42h5.864v2.11c.839-1.489 2.3-2.39 4.252-2.39 2.02 0 3.878.963 4.566 3.01.778-1.862 2.361-3.01 4.566-3.01 2.512 0 4.812 1.522 4.812 4.84v6.402h1.863v3.044h-.005zm9.036.307c-4.314 0-7.296-2.635-7.296-7.106 0-4.096 2.484-7.481 7.514-7.481s7.481 3.38 7.481 7.29c0 4.472-3.228 7.297-7.699 7.297zm22.578-.307H51.942l-.403-2.11 7.7-8.846h-4.376l-.621 2.17-2.888-.313.498-4.907h12.294l.313 2.11-7.767 8.852h4.533l.654-2.172 3.167.308-.872 4.908zm7.99 0h-4.191v-5.03h4.19v5.03zm0-8.976h-4.191v-5.03h4.19v5.03zm2.618 8.976l6.054-21.358h3.945l-6.054 21.358h-3.945zm8.136 0l6.048-21.358h3.945l-6.054 21.358h-3.939zm21.486.307c-1.863 0-2.887-1.085-3.072-2.792-.805 1.427-2.232 2.792-4.498 2.792-2.02 0-4.314-1.085-4.314-4.006 0-3.447 3.323-4.253 6.518-4.253.778 0 1.584.034 2.3.124v-.465c0-1.427-.034-3.133-2.3-3.133-.84 0-1.488.061-2.143.402l-.453 1.578-3.195-.34.549-3.224c2.45-.996 3.692-1.27 5.992-1.27 3.01 0 5.556 1.55 5.556 4.75v6.083c0 .805.314 1.085.963 1.085.184 0 .375-.034.587-.095l.034 2.11a5.432 5.432 0 01-2.524.654z\" fill=\"currentColor\"></path></svg></a><ul class=\"footer-moz-list\"><li class=\"footer-moz-item\"><a href=\"https://www.mozilla.org/privacy/websites/\" class=\"footer-moz-link\" target=\"_blank\" rel=\"noopener noreferrer\">Website Privacy Notice</a></li><li class=\"footer-moz-item\"><a href=\"https://www.mozilla.org/privacy/websites/#cookies\" class=\"footer-moz-link\" target=\"_blank\" rel=\"noopener noreferrer\">Cookies</a></li><li class=\"footer-moz-item\"><a href=\"https://www.mozilla.org/about/legal/terms/mozilla\" class=\"footer-moz-link\" target=\"_blank\" rel=\"noopener noreferrer\">Legal</a></li><li class=\"footer-moz-item\"><a href=\"https://www.mozilla.org/about/governance/policies/participation/\" class=\"footer-moz-link\" target=\"_blank\" rel=\"noopener noreferrer\">Community Participation Guidelines</a></li></ul></div><div class=\"page-footer-legal\"><p id=\"license\" class=\"page-footer-legal-text\">Visit<!-- --> <a href=\"https://www.mozilla.org\" target=\"_blank\" rel=\"noopener noreferrer\">Mozilla Corporation’s</a> <!-- -->not-for-profit parent, the<!-- --> <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://foundation.mozilla.org/\">Mozilla Foundation</a>.<br>Portions of this content are ©1998–<!-- -->2022<!-- --> by individual mozilla.org contributors. Content available under<!-- --> <a href=\"/docs/MDN/About#Copyrights_and_licenses\">a Creative Commons license</a>.</p></div></div></footer></div><script type=\"application/json\" id=\"hydration\">{\"doc\":{\"isMarkdown\":true,\"isTranslated\":false,\"isActive\":true,\"flaws\":{},\"title\":\"Implementing feature detection\",\"mdn_url\":\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\",\"locale\":\"en-US\",\"native\":\"English (US)\",\"sidebarHTML\":\"\\n\\n<ol>\\n  <li data-default-state=\\\"\\\"><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web\\\"><strong>Complete beginners start here!</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Getting started with the Web</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web\\\">Getting started with the Web overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software\\\">Installing basic software</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\\\">What will your website look like?</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files\\\">Dealing with files</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\\\">HTML basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\\\">CSS basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\\\">JavaScript basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website\\\">Publishing your website</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works\\\">How the Web works</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li data-default-state=\\\"\\\"><a href=\\\"/en-US/docs/Learn/HTML\\\"><strong>HTML — Structuring the Web</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Introduction to HTML</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML\\\">Introduction to HTML overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\\\">Getting started with HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\\\">What's in the head? Metadata in HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\\\">HTML text fundamentals</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\\\">Creating hyperlinks</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\\\">Advanced text formatting</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\\\">Document and website structure</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\\\">Debugging HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\\\">Assessment: Marking up a letter</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\\\">Assessment: Structuring a page of content</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Multimedia and embedding</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding\\\">Multimedia and embedding overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\\\">Images in HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\\\">Video and audio content</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\\\">From object to iframe — other embedding technologies</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\\\">Adding vector graphics to the Web</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\\\">Responsive images</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\\\">Assessment: Mozilla splash page</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>HTML tables</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables\\\">HTML tables overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables/Basics\\\">HTML table basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables/Advanced\\\">HTML Table advanced features and accessibility</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables/Structuring_planet_data\\\">Assessment: Structuring planet data</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li data-default-state=\\\"\\\"><a href=\\\"/en-US/docs/Learn/CSS\\\"><strong>CSS — Styling the Web</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>CSS first steps</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps\\\">CSS first steps overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/What_is_CSS\\\">What is CSS?</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/Getting_started\\\">Getting started with CSS</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured\\\">How CSS is structured</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/How_CSS_works\\\">How CSS works</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/Using_your_new_knowledge\\\">Using your new knowledge</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>CSS building blocks</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks\\\">CSS building blocks overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\\\">Cascade and inheritance</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\\\">CSS selectors</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/The_box_model\\\">The box model</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\\\">Backgrounds and borders</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\\\">Handling different text directions</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content\\\">Overflowing content</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\\\">Values and units</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\\\">Sizing items in CSS</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements\\\">Images, media, and form elements</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Styling_tables\\\">Styling tables</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS\\\">Debugging CSS</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Organizing\\\">Organizing your CSS</a></li>\\n      </ol></details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Styling text</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text\\\">Styling text overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Fundamentals\\\">Fundamental text and font styling</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Styling_lists\\\">Styling lists</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Styling_links\\\">Styling links</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Web_fonts\\\">Web fonts</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\\\">Assessment: Typesetting a community school homepage</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>CSS layout</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout\\\">CSS layout overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Introduction\\\">Introduction to CSS layout</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow\\\">Normal Flow</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\\\">Flexbox</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Grids\\\">Grids</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Floats\\\">Floats</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\\\">Positioning</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\\\">Multiple-column Layout</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\\\">Responsive design</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Media_queries\\\">Beginner's guide to media queries</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\\\">Legacy Layout Methods</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\\\">Supporting Older Browsers</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\\\">Fundamental Layout Comprehension</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li data-default-state=\\\"\\\"><a href=\\\"/en-US/docs/Learn/JavaScript\\\"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>JavaScript first steps</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps\\\">JavaScript first steps overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript\\\">What is JavaScript?</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/A_first_splash\\\">A first splash into JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong\\\">What went wrong? Troubleshooting JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Variables\\\">Storing the information you need — Variables</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Math\\\">Basic math in JavaScript — Numbers and operators</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Strings\\\">Handling text — Strings in JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods\\\">Useful string methods</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Arrays\\\">Arrays</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator\\\">Assessment: Silly story generator</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>JavaScript building blocks</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks\\\">JavaScript building blocks overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\\\">Making decisions in your code — Conditionals</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\\\">Looping code</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\\\">Functions — Reusable blocks of code</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\\\">Build your own function</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\\\">Function return values</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\\\">Introduction to events</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\\\">Assessment: Image gallery</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Introducing JavaScript objects</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects\\\">Introducing JavaScript objects overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Basics\\\">Object basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\\\">Object prototypes</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_programming\\\">Object-oriented programming concepts</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\\\">Classes in JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/JSON\\\">Working with JSON data</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\\\">Object building practice</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\\\">Assessment: Adding features to our bouncing balls demo</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Asynchronous JavaScript</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous\\\">Asynchronous JavaScript overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing\\\">Introducing asynchronous JavaScript</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Promises\\\">How to use promises</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Implementing_a_promise-based_API\\\">Implementing a promise-based API</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing_workers\\\">Introducing workers</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Sequencing_animations\\\">Assessment: sequencing animations</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Client-side web APIs</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\\\">Client-side web APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\\\">Introduction to web APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\\\">Manipulating documents</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\\\">Fetching data from the server</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\\\">Third party APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\\\">Drawing graphics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\\\">Video and audio APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\\\">Client-side storage</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"/en-US/docs/Learn/Forms\\\"><strong>Web forms — Working with user data</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Core forms learning pathway</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms\\\">Web forms overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Your_first_form\\\">Your first form</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\\\">How to structure a web form</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Basic_native_form_controls\\\">Basic native form controls</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/HTML5_input_types\\\">The HTML5 input types</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Other_form_controls\\\">Other form controls</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Styling_web_forms\\\">Styling web forms</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Advanced_form_styling\\\">Advanced form styling</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">UI pseudo-classes</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Form_validation\\\">Client-side form validation</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\\\">Sending form data</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Advanced forms articles</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\\\">How to build custom form controls</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\\\">Sending forms through JavaScript</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls\\\">CSS property compatibility table for form controls</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"/en-US/docs/Learn/Accessibility\\\"><strong>Accessibility — Make the web usable by everyone</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Accessibility guides</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility\\\">Accessibility overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/What_is_accessibility\\\">What is accessibility?</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/HTML\\\">HTML: A good basis for accessibility</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\\\">CSS and JavaScript accessibility best practices</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\\\">WAI-ARIA basics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/Multimedia\\\">Accessible multimedia</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/Mobile\\\">Mobile accessibility</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Accessibility assessment</summary>\\n        <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\\\">Assessment: Accessibility troubleshooting</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing\\\"><strong>Tools and testing</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Client-side web development tools</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools\\\">Client-side web development tools index</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\\\">Client-side tooling overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\\\">Command line crash course</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\\\">Package management basics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\\\">Introducing a complete toolchain</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\\\">Deploying our app</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Introduction to client-side frameworks</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Introduction\\\">Client-side frameworks overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Main_features\\\">Framework main features</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>React</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_getting_started\\\">Getting started with React</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_todo_list_beginning\\\">Beginning our React todo list</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_components\\\">Componentizing our React app</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_events_state\\\">React interactivity: Events and state</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_interactivity_filtering_conditional_rendering\\\">React interactivity: Editing, filtering, conditional rendering</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_accessibility\\\">Accessibility in React</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/React_resources\\\">React resources</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Ember</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_getting_started\\\">Getting started with Ember</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_structure_componentization\\\">Ember app structure and componentization</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_interactivity_events_state\\\">Ember interactivity: Events, classes and state</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_conditional_footer\\\">Ember Interactivity: Footer functionality, conditional rendering</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_routing\\\">Routing in Ember</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Ember_resources\\\">Ember resources and troubleshooting</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Vue</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_getting_started\\\">Getting started with Vue</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_first_component\\\">Creating our first Vue component</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_rendering_lists\\\">Rendering a list of Vue components</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_methods_events_models\\\">Adding a new todo form: Vue events, methods, and models</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_styling\\\">Styling Vue components with CSS</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_computed_properties\\\">Using Vue computed properties</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_conditional_rendering  \\\">Vue conditional rendering: editing existing todos</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_refs_focus_management\\\">Focus management with Vue refs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Vue_resources\\\">Vue resources</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Svelte</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_getting_started\\\">Getting started with Svelte</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_Todo_list_beginning\\\">Starting our Svelte Todo list app</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_variables_props\\\">Dynamic behavior in Svelte: working with variables and props</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_components\\\">Componentizing our Svelte app</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_reactivity_lifecycle_accessibility\\\">Advanced Svelte: Reactivity, lifecycle, accessibility</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_stores\\\">Working with Svelte stores</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript  \\\">TypeScript support in Svelte</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_deployment_next\\\">Deployment and next steps</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Angular</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_getting_started\\\">Getting started with Angular</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_todo_list_beginning\\\">Beginning our Angular todo list app</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_styling\\\">Styling our Angular app</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_item_component\\\">Creating an item component</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_filtering\\\">Filtering our to-do items</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Angular_building\\\">Building Angular applications and further resources</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Git and GitHub</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/GitHub\\\">Git and GitHub overview</a></li>\\n          <li><a href=\\\"https://guides.github.com/activities/hello-world/\\\">Hello World</a></li>\\n          <li><a href=\\\"https://guides.github.com/introduction/git-handbook/\\\">Git Handbook</a></li>\\n          <li><a href=\\\"https://guides.github.com/activities/forking/\\\">Forking Projects</a></li>\\n          <li><a href=\\\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\\\">About pull requests</a></li>\\n          <li><a href=\\\"https://guides.github.com/features/issues/\\\">Mastering Issues</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details open=\\\"\\\">\\n        <summary>Cross browser testing</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\\\">Cross browser testing overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\\\">Introduction to cross browser testing</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\\\">Strategies for carrying out testing</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\\\">Handling common HTML and CSS problems</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\\\">Handling common JavaScript problems</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\\\">Handling common accessibility problems</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\\\">Implementing feature detection</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\\\">Introduction to automated testing</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\\\">Setting up your own test automation environment</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li data-default-state=\\\"\\\"><a href=\\\"/en-US/docs/Learn/Server-side\\\"><strong>Server-side website programming</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>First steps</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps\\\">First steps overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Introduction\\\">Introduction to the server-side</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\\\">Client-Server overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Web_frameworks\\\">Server-side web frameworks</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Website_security\\\">Website security</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Django web framework (Python)</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django\\\">Django web framework (Python) overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Introduction\\\">Introduction</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/development_environment\\\">Setting up a development environment</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\\\">Tutorial: The Local Library website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/skeleton_website\\\">Tutorial Part 2: Creating a skeleton website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Models\\\">Tutorial Part 3: Using models</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Admin_site\\\">Tutorial Part 4: Django admin site</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Home_page\\\">Tutorial Part 5: Creating our home page</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Generic_views\\\">Tutorial Part 6: Generic list and detail views</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Sessions\\\">Tutorial Part 7: Sessions framework</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Authentication\\\">Tutorial Part 8: User authentication and permissions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Forms\\\">Tutorial Part 9: Working with forms</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Testing\\\">Tutorial Part 10: Testing a Django web application</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Deployment\\\">Tutorial Part 11: Deploying Django to production</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/web_application_security\\\">Web application security</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\\\">Assessment: DIY mini blog</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs\\\">Express Web Framework (Node.js/JavaScript) overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction\\\">Express/Node introduction</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment\\\">Setting up a Node (Express) development environment</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\\\">Express tutorial: The Local Library website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website\\\">Express Tutorial Part 2: Creating a skeleton website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose\\\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/routes\\\">Express Tutorial Part 4: Routes and controllers</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\\\">Express Tutorial Part 5: Displaying library data</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\\\">Express Tutorial Part 6: Working with forms</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/deployment\\\">Express Tutorial Part 7: Deploying to production</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"#\\\"><strong>Further resources</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Common questions</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/HTML/Howto\\\">HTML questions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/CSS/Howto\\\">CSS questions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Howto\\\">JavaScript questions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Common_questions#Web_mechanics\\\">Web mechanics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Common_questions#Tools_and_setup\\\">Tools and setup</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Common_questions#Design_and_accessibility\\\">Design and accessibility</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n</ol>\\n\\n\",\"body\":[{\"type\":\"prose\",\"value\":{\"id\":null,\"title\":null,\"isH3\":false,\"content\":\"<ul class=\\\"prev-next\\\">\\n    <li><a class=\\\"button secondary\\\" href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\\\"><span class=\\\"button-wrap\\\"> Previous </span></a></li>\\n    <li><a class=\\\"button secondary\\\" href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\\\"><span class=\\\"button-wrap\\\"> Overview: Cross browser testing</span></a></li>\\n    <li><a class=\\\"button secondary\\\" href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\\\"><span class=\\\"button-wrap\\\"> Next  </span></a></li>\\n</ul>\\n<p>Feature detection involves working out whether a browser supports a certain block of code, and running different code depending on whether it does (or doesn't), so that the browser can always provide a working experience rather than crashing/erroring in some browsers. This article details how to write your own simple feature detection, how to use a library to speed up implementation, and native features for feature detection such as <code>@supports</code>.</p>\\n<div class=\\\"table-scroll\\\"><table>\\n  <tbody>\\n    <tr>\\n      <th scope=\\\"row\\\">Prerequisites:</th>\\n      <td>\\n        Familiarity with the core <a href=\\\"/en-US/docs/Learn/HTML\\\">HTML</a>,\\n        <a href=\\\"/en-US/docs/Learn/CSS\\\">CSS</a>, and\\n        <a href=\\\"/en-US/docs/Learn/JavaScript\\\">JavaScript</a> languages; an idea\\n        of the high-level\\n        <a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\\\">principles of cross-browser testing</a>.\\n      </td>\\n    </tr>\\n    <tr>\\n      <th scope=\\\"row\\\">Objective:</th>\\n      <td>\\n        To understand what the concept of feature detection is, and be able to\\n        implement suitable solutions in CSS and JavaScript.\\n      </td>\\n    </tr>\\n  </tbody>\\n</table></div>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"the_concept_of_feature_detection\",\"title\":\"The concept of feature detection\",\"isH3\":false,\"content\":\"<p>The idea behind feature detection is that you can run a test to determine whether a feature is supported in the current browser, and then conditionally run code to provide an acceptable experience both in browsers that <em>do</em> support the feature, and browsers that <em>don't</em>. If you don't do this, browsers that don't support the features you are using in your code won't display your sites properly and will just fail, creating a bad user experience.</p>\\n<p>Let's recap and look at the example we touched on in our <a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript#feature_detection\\\">Handling common JavaScript problems</a> — the <a href=\\\"/en-US/docs/Web/API/Geolocation_API\\\">Geolocation API</a> (which exposes available location data for the device the web browser is running on) has the main entry point for its use, a <code>geolocation</code> property available on the global <a href=\\\"/en-US/docs/Web/API/Navigator\\\">Navigator</a> object. Therefore, you can detect whether the browser supports geolocation or not by using something like the following:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: js notranslate\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"geolocation\\\"</span> <span class=\\\"token keyword\\\">in</span> navigator<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  navigator<span class=\\\"token punctuation\\\">.</span>geolocation<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getCurrentPosition</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">position</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// show the location on a map, perhaps using the Google Maps API</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Give the user a choice of static maps instead perhaps</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n<p>It is probably better to use an established feature detection library however, rather than writing your own all the time. Modernizr is the industry standard for feature detection tests, and we'll look at that later on.</p>\\n<p>Before we move on, we'd like to say one thing upfront — don't confuse feature detection with <strong>browser sniffing</strong> (detecting what specific browser is accessing the site) — this is a terrible practice that should be discouraged at all costs. See <a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript#using_bad_browser_sniffing_code\\\">Using bad browser sniffing code</a> for more details.</p>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"writing_your_own_feature_detection_tests\",\"title\":\"Writing your own feature detection tests\",\"isH3\":false,\"content\":\"<p>In this section, we'll look at implementing your own feature detection tests, in both CSS and JavaScript.</p>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"css\",\"title\":\"CSS\",\"isH3\":true,\"content\":\"<p>You can write tests for CSS features by testing for the existence of <em><a href=\\\"/en-US/docs/Web/API/HTMLElement/style\\\">element.style.property</a></em> (e.g. <code>paragraph.style.transform</code>) in JavaScript.</p>\\n<p>A classic example might be to test for <a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\\\">Flexbox</a> support in a browser; for browsers that support the newest Flexbox spec, we could use a flexible and robust flex layout. For browsers that don't, we could use a floated layout that works OK, although it is slightly more brittle and hacky, and not as cool-looking.</p>\\n<p>Let's implement something that demonstrates this, although we'll keep it simple for now.</p>\\n<ol>\\n  <li>Start by making local copies of our <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/css-feature-detect.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>css-feature-detect.html</code></a>, <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/flex-layout.css\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>flex-layout.css</code></a>, <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/float-layout.css\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>float-layout.css</code></a>, and <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/basic-styling.css\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>basic-styling.css</code></a> files. Save them in a new directory.</li>\\n  <li>We will add the HTML5 Shiv to our example too so that the HTML5 semantic elements will style properly in older versions of IE. Download the latest version (see <a href=\\\"https://github.com/aFarkas/html5shiv#manual-installation\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Manual installation</a>), unzip the ZIP file, copy the <code>html5shiv-printshiv.min.js</code> and <code>html5shiv.min.js</code> files into your example directory, and link to one of the files by putting the following under your <a href=\\\"/en-US/docs/Web/HTML/Element/title\\\"><code>&lt;title&gt;</code></a> element:\\n    <div class=\\\"code-example\\\"><pre class=\\\"brush: html notranslate\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>html5shiv.min.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token script\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div>\\n  </li>\\n  <li>Have a look at your example CSS files — you'll see that <code>basic-styling.css</code> handles all the styling that we want to give to every browser, whereas the other two CSS files contain the CSS we want to selectively apply to browsers depending on their support levels. You can look at the different effects these two files have by manually changing the CSS file referred to by the second <a href=\\\"/en-US/docs/Web/HTML/Element/link\\\"><code>&lt;link&gt;</code></a> element, but let's instead implement some JavaScript to automatically swap them as needed.</li>\\n  <li>First, remove the contents of the second <code>&lt;link&gt;</code> element's <code>href</code> attribute. We will fill this in dynamically later on.</li>\\n  <li>Next, add a <code>&lt;script&gt;&lt;/script&gt;</code> element at the bottom of your body (just before the closing <code>&lt;/body&gt;</code> tag).</li>\\n  <li>Give it the following contents:\\n    <div class=\\\"code-example\\\"><pre class=\\\"brush: js notranslate\\\"><code><span class=\\\"token keyword\\\">const</span> conditional <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">querySelector</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'.conditional'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> testElem <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'div'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>testElem<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>flex <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">undefined</span> <span class=\\\"token operator\\\">&amp;&amp;</span> testElem<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>flexFlow <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  conditional<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'href'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'flex-layout.css'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  conditional<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setAttribute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'href'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'float-layout.css'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n  </li>\\n</ol>\\n<p>Here we are grabbing a reference to the second <code>&lt;link&gt;</code> element, and creating a <code>&lt;div&gt;</code> element as part of our test. In our conditional statement, we test that the <a href=\\\"/en-US/docs/Web/CSS/flex\\\"><code>flex</code></a> and <a href=\\\"/en-US/docs/Web/CSS/flex-flow\\\"><code>flex-flow</code></a> properties exist in the browser. Note how the JavaScript representations of those properties that are stored inside the <a href=\\\"/en-US/docs/Web/API/HTMLElement/style\\\"><code>HTMLElement.style</code></a> object use lower camel case, not hyphens, to separate the words.</p>\\n<div class=\\\"notecard note\\\" id=\\\"sect1\\\">\\n  <p><strong>Note:</strong> If you have trouble getting this to work, you can compare it to our <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/css-feature-detect-finished.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\">css-feature-detect-finished.html</a> code (see also the <a href=\\\"https://mdn.github.io/learning-area/tools-testing/cross-browser-testing/feature-detection/css-feature-detect-finished.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\">live version</a>).</p>\\n</div>\\n<p>When you save everything and try out your example, you should see the flexbox layout applied to the page if the browser supports modern flexbox, and the float layout if not.</p>\\n<div class=\\\"notecard note\\\" id=\\\"sect2\\\">\\n  <p><strong>Note:</strong> Often such an approach is overkill for a minor feature detection problem — you can often get away with using multiple vendor prefixes and fallback properties, as described in <a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#css_fallback_behavior\\\">CSS fallback behavior</a> and <a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#handling_css_prefixes\\\">Handling CSS prefixes</a>.</p>\\n</div>\\n<h4 id=\\\"supports\\\">@supports</h4>\\n<p>In recent times, CSS has had its own native feature detection mechanism introduced — the <a href=\\\"/en-US/docs/Web/CSS/@supports\\\"><code>@supports</code></a> at-rule. This works in a similar manner to <a href=\\\"/en-US/docs/Web/CSS/Media_Queries\\\">media queries</a> (see also <a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#responsive_design_problems\\\">Responsive design problems</a>) — except that instead of selectively applying CSS depending on a media feature like a resolution, screen width or aspect ratio, it selectively applies CSS depending on whether a CSS feature is supported.</p>\\n<p>For example, we could rewrite our previous example to use <code>@supports</code> — see <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-feature-detect.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>supports-feature-detect.html</code></a> and <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-styling.css\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>supports-styling.css</code></a>. If you look at the latter, you'll see a couple of <code>@supports</code> blocks, for example:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: css notranslate\\\"><code><span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@supports</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token property\\\">flex-flow</span><span class=\\\"token punctuation\\\">:</span> row<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">and</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token property\\\">flex</span><span class=\\\"token punctuation\\\">:</span> 1<span class=\\\"token punctuation\\\">)</span></span> <span class=\\\"token punctuation\\\">{</span>\\n\\n  <span class=\\\"token selector\\\">main</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">display</span><span class=\\\"token punctuation\\\">:</span> flex<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token selector\\\">main div</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">padding-right</span><span class=\\\"token punctuation\\\">:</span> 4%<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">flex</span><span class=\\\"token punctuation\\\">:</span> 1<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token selector\\\">main div:last-child</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">padding-right</span><span class=\\\"token punctuation\\\">:</span> 0<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n<p>This at-rule block applies the CSS rule within only if the current browser supports both the <code>flex-flow: row</code> and <code>flex: 1</code> declarations. For each condition to work, you need to include a complete declaration (not just a property name) and NOT include the semi-colon on the end.</p>\\n<p><code>@supports</code> also has <code>OR</code> and <code>NOT</code> logic available — the other block applies the float layout if the flexbox properties are not available:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: css notranslate\\\"><code><span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@supports</span> <span class=\\\"token keyword\\\">not</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token property\\\">flex-flow</span><span class=\\\"token punctuation\\\">:</span> row<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">and</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token property\\\">flex</span><span class=\\\"token punctuation\\\">:</span> 1<span class=\\\"token punctuation\\\">)</span></span> <span class=\\\"token punctuation\\\">{</span>\\n\\n  <span class=\\\"token comment\\\">/* rules in here */</span>\\n\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n<p>This may look a lot more convenient than the previous example — we can do all of our feature detection in CSS, no JavaScript required, and we can handle all the logic in a single CSS file, cutting down on HTTP requests. the problem here is browser support — <code>@supports</code> is not supported at all in IE, and only supported in very recent versions of Safari/iOS WebKit (9+/9.2+), whereas the JavaScript version should work in much older browsers (probably back to IE8 or 9, although older versions of IE will have additional problems, such as not supporting <a href=\\\"/en-US/docs/Web/API/Document/querySelector\\\"><code>Document.querySelector</code></a>, and having a messed up box model).</p>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"javascript\",\"title\":\"JavaScript\",\"isH3\":true,\"content\":\"<p>We already saw an example of a JavaScript feature detection test earlier on. Generally, such tests are done via one of the following common patterns:</p>\\n<div class=\\\"table-scroll\\\"><table class=\\\"standard-table\\\">\\n  <caption>Summary of JavaScript feature detection techniques</caption>\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">Feature detection type</th>\\n      <th scope=\\\"col\\\">Explanation</th>\\n      <th scope=\\\"col\\\">Example</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td><em>If member in object</em></td>\\n      <td>\\n        Check whether a certain method or property (typically an entry point\\n        into using the API or other feature you are detecting for) exists in its\\n        parent Object.\\n      </td>\\n      <td>\\n        <p><code>if(\\\"geolocation\\\" in navigator) { ... }</code></p>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td><em>Property on element</em></td>\\n      <td>\\n        Create an element in memory using\\n        <a href=\\\"/en-US/docs/Web/API/Document/createElement\\\"><code>Document.createElement()</code></a> and then check if a\\n        property exists on it. The example shown is a way of detecting\\n        <a href=\\\"/en-US/docs/Web/API/Canvas_API\\\">HTML5 Canvas</a> support.\\n      </td>\\n      <td><code>function supports_canvas() {<br>return\\n!!document.createElement('canvas').getContext;<br>}<br><br>if(supports_canvas())\\n{ ... }</code></td>\\n    </tr>\\n    <tr>\\n      <td><em>Method on element return value</em></td>\\n      <td>\\n        Create an element in memory using\\n        <a href=\\\"/en-US/docs/Web/API/Document/createElement\\\"><code>Document.createElement()</code></a> and then check if a\\n        method exists on it. If it does, check what value it returns.\\n      </td>\\n      <td>\\n        See\\n        <a href=\\\"https://diveinto.html5doctor.com/detect.html#video-formats\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Dive Into HTML5 Video Formats detection</a>\\n        test.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td><em>Property on element retains value</em></td>\\n      <td>\\n        Create an element in memory using\\n        <a href=\\\"/en-US/docs/Web/API/Document/createElement\\\"><code>Document.createElement()</code></a>, set a property to\\n        a certain value, then check to see if the value is retained.\\n      </td>\\n      <td>\\n        See\\n        <a href=\\\"https://diveinto.html5doctor.com/detect.html#input-types\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Dive into HTML5 <code>&lt;input&gt;</code> types detection</a>\\n        test.\\n      </td>\\n    </tr>\\n  </tbody>\\n</table></div>\\n<div class=\\\"notecard note\\\" id=\\\"sect3\\\">\\n  <p><strong>Note:</strong> The double <code>NOT</code> in the above example (<code>!!</code>) is a way to force a return value to become a \\\"proper\\\" boolean value, rather than a <a href=\\\"/en-US/docs/Glossary/Truthy\\\">Truthy</a>/<a href=\\\"/en-US/docs/Glossary/Falsy\\\">Falsy</a> value that may skew the results.</p>\\n</div>\\n<p>The <a href=\\\"https://diveinto.html5doctor.com/detect.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Dive into HTML5 Detecting HTML5 Features</a> page has a lot more useful feature detection tests besides the ones listed above, and you can generally find a feature detection test for most things by searching for \\\"detect support for YOUR-FEATURE-HERE\\\" in your favorite search engine. Bear in mind though that some features, however, are known to be undetectable — see Modernizr's list of <a href=\\\"https://github.com/Modernizr/Modernizr/wiki/Undetectables\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Undetectables</a>.</p>\\n<h4 id=\\\"matchmedia\\\">matchMedia</h4>\\n<p>We also wanted to mention the <a href=\\\"/en-US/docs/Web/API/Window/matchMedia\\\"><code>Window.matchMedia</code></a> JavaScript feature at this point too. This is a property that allows you to run media query tests inside JavaScript. It looks like this:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: js notranslate\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">matchMedia</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"(max-width: 480px)\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>matches<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// run JavaScript in here.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n<p>As an example, our <a href=\\\"https://github.com/chrisdavidmills/snapshot\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Snapshot</a> demo makes use of it to selectively apply the Brick JavaScript library and use it to handle the UI layout, but only for the small screen layout (480px wide or less). We first use the <code>media</code> attribute to only apply the Brick CSS to the page if the page width is 480px or less:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: css notranslate\\\"><code>&lt;link href=<span class=\\\"token string\\\">\\\"dist/brick.css\\\"</span> type=<span class=\\\"token string\\\">\\\"text/css\\\"</span> rel=<span class=\\\"token string\\\">\\\"stylesheet\\\"</span> media=<span class=\\\"token string\\\">\\\"all and (max-width: 480px)\\\"</span>&gt;\\n</code></pre></div>\\n<p>We then use <code>matchMedia()</code> in the JavaScript several times, to only run Brick navigation functions if we are on the small screen layout (in wider screen layouts, everything can be seen at once, so we don't need to navigate between different views).</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: js notranslate\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">matchMedia</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"(max-width: 480px)\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>matches<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  deck<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shuffleTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"using_modernizr_to_implement_feature_detection\",\"title\":\"Using Modernizr to implement feature detection\",\"isH3\":false,\"content\":\"<p>It is possible to implement your own feature detection tests using techniques like the ones detailed above. You might as well use a dedicated feature detection library however, as it makes things much easier. The mother of all feature detection libraries is <a href=\\\"https://modernizr.com/\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Modernizr</a>, and it can detect just about everything you'll ever need. Let's look at how to use it now.</p>\\n<p>When you are experimenting with Modernizr you might as well use the development build, which includes every possible feature detection test. Download this now by:</p>\\n<ol>\\n  <li>Clicking on the <a href=\\\"https://modernizr.com/download?do_not_use_in_production\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Development build</a> link.</li>\\n  <li>Clicking the big pink <em>Build</em> button on the page that comes up.</li>\\n  <li>Clicking the top <em>Download</em> link in the dialog box that appears.</li>\\n</ol>\\n<p>Save it somewhere sensible, like the directory you've been creating your other examples for in this article.</p>\\n<p>When you are using Modernizr in production, you can go to the <a href=\\\"https://modernizr.com/download\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Download page</a> you've already visited and click the plus buttons for only the features you need feature detects for. Then when you click the <em>Build</em> button, you'll download a custom build containing only those feature detects, making for a much smaller file size.</p>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"css_2\",\"title\":\"CSS\",\"isH3\":true,\"content\":\"<p>Let's have a look at how Modernizr works in terms of selectively applying CSS.</p>\\n<ol>\\n  <li>First, make a copy of <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-feature-detect.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>supports-feature-detect.html</code></a> and <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-styling.css\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>supports-styling.css</code></a>. Save them as <code>modernizr-css.html</code> and <code>modernizr-css.css</code>.</li>\\n  <li>Update your <a href=\\\"/en-US/docs/Web/HTML/Element/link\\\"><code>&lt;link&gt;</code></a> element in your HTML so it points to the correct CSS file (you should also update your <a href=\\\"/en-US/docs/Web/HTML/Element/title\\\"><code>&lt;title&gt;</code></a> element to something more suitable!):\\n    <div class=\\\"code-example\\\"><pre class=\\\"brush: html notranslate\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>link</span> <span class=\\\"token attr-name\\\">href</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>modernizr-css.css<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">rel</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>stylesheet<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div>\\n  </li>\\n  <li>Above this <code>&lt;link&gt;</code> element, add a <a href=\\\"/en-US/docs/Web/HTML/Element/script\\\"><code>&lt;script&gt;</code></a> element to apply the Modernizr library to the page, as shown below. This needs to be applied to the page before any CSS (or JavaScript) that might make use of it.\\n    <div class=\\\"code-example\\\"><pre class=\\\"brush: html notranslate\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>modernizr-custom.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token script\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div>\\n  </li>\\n  <li>Now edit your opening <code>&lt;html&gt;</code> tag, so that it looks like this:\\n    <div class=\\\"code-example\\\"><pre class=\\\"brush: html notranslate\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>no-js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div>\\n  </li>\\n</ol>\\n<p>At this point, try loading your page, and you'll get an idea of how Modernizr works for CSS features. If you look at the DOM inspector of your browser's developer tools, you'll see that Modernizr has updated your <code>&lt;html&gt;</code> <code>class</code> value like so:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: html notranslate\\\"><code><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>js no-htmlimports sizes flash transferables applicationcache blobconstructor\\nblob-constructor cookies cors ...AND LOADS MORE VALUES!<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre></div>\\n<p>It now contains a large number of classes that indicate the support status of different technology features. As an example, if the browser didn't support flexbox at all, <code>&lt;html&gt;</code> would be given a class name of <code>no-flexbox</code>. If it did support modern flexbox, it would get a class name of <code>flexbox</code>. If you search through the class list, you'll also see others relating to flexbox, like:</p>\\n<ul>\\n  <li><code>flexboxlegacy</code> for the old flexbox spec (2009).</li>\\n  <li><code>flexboxtweener</code> for 2011 in between syntax supported by IE10.</li>\\n  <li><code>flexwrap</code> for the <a href=\\\"/en-US/docs/Web/CSS/flex-wrap\\\"><code>flex-wrap</code></a> property, which isn't present in some implementations.</li>\\n</ul>\\n<div class=\\\"notecard note\\\" id=\\\"sect4\\\">\\n  <p><strong>Note:</strong> You can find a list of what all the class names mean — see <a href=\\\"https://modernizr.com/docs#features\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Features detected by Modernizr</a>.</p>\\n</div>\\n<p>Moving on, let's update our CSS to use Modernizr rather than <code>@supports</code>. Go into <code>modernizr-css.css</code>, and replace the two <code>@supports</code> blocks with the following:</p>\\n<div class=\\\"code-example\\\"><pre class=\\\"brush: css notranslate\\\"><code><span class=\\\"token comment\\\">/* Properties for browsers with modern flexbox */</span>\\n\\n<span class=\\\"token selector\\\">.flexbox main</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">display</span><span class=\\\"token punctuation\\\">:</span> flex<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token selector\\\">.flexbox main div</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">padding-right</span><span class=\\\"token punctuation\\\">:</span> 4%<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">flex</span><span class=\\\"token punctuation\\\">:</span> 1<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token selector\\\">.flexbox main div:last-child</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">padding-right</span><span class=\\\"token punctuation\\\">:</span> 0<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">/* Fallbacks for browsers that don't support modern flexbox */</span>\\n\\n<span class=\\\"token selector\\\">.no-flexbox main div</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">width</span><span class=\\\"token punctuation\\\">:</span> 22%<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">float</span><span class=\\\"token punctuation\\\">:</span> left<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token property\\\">padding-right</span><span class=\\\"token punctuation\\\">:</span> 4%<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token selector\\\">.no-flexbox main div:last-child</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">padding-right</span><span class=\\\"token punctuation\\\">:</span> 0<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token selector\\\">.no-flexbox footer</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">clear</span><span class=\\\"token punctuation\\\">:</span> left<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n<p>So how does this work? Because all those class names have been put on the <code>&lt;html&gt;</code> element, you can target browsers that do or don't support a feature using specific descendant selectors. So here we're applying the top set of rules only to browsers that do support flexbox, and the bottom set of rules only to browsers that don't (<code>no-flexbox</code>).</p>\\n<div class=\\\"notecard note\\\" id=\\\"sect5\\\">\\n  <p><strong>Note:</strong> Bear in mind that all of Modernizr's HTML and JavaScript feature tests are also reported in these class names, so you can quite happily apply CSS selectively based on whether the browser supports HTML or JavaScript features, if needed.</p>\\n</div>\\n<div class=\\\"notecard note\\\" id=\\\"sect6\\\">\\n  <p><strong>Note:</strong> If you have trouble getting this to work, check your code against our <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>modernizr-css.html</code></a> and <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.css\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>modernizr-css.css</code></a> files (see this running live also).</p>\\n</div>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"javascript_2\",\"title\":\"JavaScript\",\"isH3\":true,\"content\":\"<p>Modernizr is also equally well-prepared for implementing JavaScript feature detects too. It does this by making the global <code>Modernizr</code> object available to the page it is applied to, which contains results of the feature detects as <code>true</code>/<code>false</code> properties.</p>\\n<p>For example, load up our <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>modernizr-css.html</code></a> example in your browser, then try going to your JavaScript console and typing in <code>Modernizr.</code> followed by some of those class names (they are the same here too). For example:</p>\\n<pre class=\\\"notranslate\\\">Modernizr.flexbox\\nModernizr.websqldatabase\\nModernizr.xhr2\\nModernizr.fetch\\n</pre>\\n<p>The console will return <code>true</code>/<code>false</code> values to indicate whether your browser supports those features or not.</p>\\n<p>Let's look at an example to show how you'd use those properties.</p>\\n<ol>\\n  <li>First of all, make a local copy of the <a href=\\\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-js.html\\\" class=\\\"external\\\" rel=\\\" noopener\\\"><code>modernizr-js.html</code></a> example file.</li>\\n  <li>Attach the Modernizr library to the HTML using a <code>&lt;script&gt;</code> element, as we have done in previous demos. Put it above the existing <code>&lt;script&gt;</code> element, which is attaching the Google Maps API to the page.</li>\\n  <li>Next, fill in the <code>YOUR-API-KEY</code> placeholder text in the second <code>&lt;script&gt;</code> element (as it is now) with a valid Google Maps API key. To get a key, sign in to a Google account, go to the <a href=\\\"https://developers.google.com/maps/documentation/javascript/get-api-key\\\" class=\\\"external\\\" rel=\\\" noopener\\\">Get a Key/Authentication</a> page, then click the blue <em>Get a Key</em> button and follow the instructions.</li>\\n  <li>Finally, add another <code>&lt;script&gt;</code> element at the bottom of the HTML body (just before the <code>&lt;/body&gt;</code> tag), and put the following script inside the tags:\\n    <div class=\\\"code-example\\\"><pre class=\\\"brush: js notranslate\\\"><code><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>Modernizr<span class=\\\"token punctuation\\\">.</span>geolocation<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n  navigator<span class=\\\"token punctuation\\\">.</span>geolocation<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getCurrentPosition</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">position</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\n    <span class=\\\"token keyword\\\">let</span> latlng <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>LatLng</span><span class=\\\"token punctuation\\\">(</span>position<span class=\\\"token punctuation\\\">.</span>coords<span class=\\\"token punctuation\\\">.</span>latitude<span class=\\\"token punctuation\\\">,</span>position<span class=\\\"token punctuation\\\">.</span>coords<span class=\\\"token punctuation\\\">.</span>longitude<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> myOptions <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">zoom</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">center</span><span class=\\\"token operator\\\">:</span> latlng<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">mapTypeId</span><span class=\\\"token operator\\\">:</span> google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>MapTypeId<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">TERRAIN</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">disableDefaultUI</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">let</span> map <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">google<span class=\\\"token punctuation\\\">.</span>maps<span class=\\\"token punctuation\\\">.</span>Map</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"map_canvas\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> myOptions<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> para <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'p'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  para<span class=\\\"token punctuation\\\">.</span>textContent <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Argh, no geolocation!'</span><span class=\\\"token punctuation\\\">;</span>\\n  document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendChild</span><span class=\\\"token punctuation\\\">(</span>para<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div>\\n  </li>\\n</ol>\\n<p>Try your example out! Here we use the <code>Modernizr.geolocation</code> test to check whether geolocation is supported by the current browser. If it is, we run some code that gets your device's current location, and plots it on a Google Map.</p>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"summary\",\"title\":\"Summary\",\"isH3\":false,\"content\":\"<p>This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.</p>\\n<p>Next up, we'll start looking at automated testing.</p><ul class=\\\"prev-next\\\">\\n    <li><a class=\\\"button secondary\\\" href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\\\"><span class=\\\"button-wrap\\\"> Previous </span></a></li>\\n    <li><a class=\\\"button secondary\\\" href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\\\"><span class=\\\"button-wrap\\\"> Overview: Cross browser testing</span></a></li>\\n    <li><a class=\\\"button secondary\\\" href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\\\"><span class=\\\"button-wrap\\\"> Next  </span></a></li>\\n</ul>\"}},{\"type\":\"prose\",\"value\":{\"id\":\"in_this_module\",\"title\":\"In this module\",\"isH3\":false,\"content\":\"<ul>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\\\">Introduction to cross browser testing</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\\\">Strategies for carrying out testing</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\\\">Handling common HTML and CSS problems</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\\\">Handling common JavaScript problems</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\\\">Handling common accessibility problems</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\\\" aria-current=\\\"page\\\">Implementing feature detection</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\\\">Introduction to automated testing</a></li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\\\">Setting up your own test automation environment</a></li>\\n</ul>\"}}],\"toc\":[{\"text\":\"The concept of feature detection\",\"id\":\"the_concept_of_feature_detection\"},{\"text\":\"Writing your own feature detection tests\",\"id\":\"writing_your_own_feature_detection_tests\"},{\"text\":\"Using Modernizr to implement feature detection\",\"id\":\"using_modernizr_to_implement_feature_detection\"},{\"text\":\"Summary\",\"id\":\"summary\"},{\"text\":\"In this module\",\"id\":\"in_this_module\"}],\"summary\":\"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.\",\"popularity\":0.0026,\"modified\":\"2022-03-19T16:52:08.000Z\",\"other_translations\":[{\"title\":\"機能検出の実装\",\"locale\":\"ja\",\"native\":\"日本語\"},{\"title\":\"Реализация функции обнаружения\",\"locale\":\"ru\",\"native\":\"Русский\"},{\"title\":\"Implementing feature detection\",\"locale\":\"zh-CN\",\"native\":\"中文 (简体)\"}],\"source\":{\"folder\":\"en-us/learn/tools_and_testing/cross_browser_testing/feature_detection\",\"github_url\":\"https://github.com/mdn/content/blob/main/files/en-us/learn/tools_and_testing/cross_browser_testing/feature_detection/index.md\",\"last_commit_url\":\"https://github.com/mdn/content/commit/358158b18ad8c2b90b83fe4dc03bdd7fd2e423da\",\"filename\":\"index.md\"},\"short_title\":\"Implementing feature detection\",\"parents\":[{\"uri\":\"/en-US/docs/Learn\",\"title\":\"Guides\"},{\"uri\":\"/en-US/docs/Learn/Tools_and_testing\",\"title\":\"Tools and testing\"},{\"uri\":\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\",\"title\":\"Cross browser testing\"},{\"uri\":\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\",\"title\":\"Implementing feature detection\"}],\"pageTitle\":\"Implementing feature detection - Learn web development | MDN\",\"noIndexing\":false}}</script></body></html>","oembed":false,"readabilityObject":{"title":"Implementing feature detection - Learn web development | MDN","content":"<div id=\"readability-page-1\" class=\"page\"><div id=\"content\" role=\"main\"><article lang=\"en-US\"><div><ul>\n    <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\"><span> Previous </span></a></li>\n    <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\"><span> Overview: Cross browser testing</span></a></li>\n    <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\"><span> Next  </span></a></li>\n</ul>\n<p>Feature detection involves working out whether a browser supports a certain block of code, and running different code depending on whether it does (or doesn't), so that the browser can always provide a working experience rather than crashing/erroring in some browsers. This article details how to write your own simple feature detection, how to use a library to speed up implementation, and native features for feature detection such as <code>@supports</code>.</p>\n</div><h2 id=\"the_concept_of_feature_detection\"><a href=\"#the_concept_of_feature_detection\" title=\"Permalink to The concept of feature detection\">The concept of feature detection</a></h2><div><p>The idea behind feature detection is that you can run a test to determine whether a feature is supported in the current browser, and then conditionally run code to provide an acceptable experience both in browsers that <em>do</em> support the feature, and browsers that <em>don't</em>. If you don't do this, browsers that don't support the features you are using in your code won't display your sites properly and will just fail, creating a bad user experience.</p>\n<p>Let's recap and look at the example we touched on in our <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript#feature_detection\">Handling common JavaScript problems</a> — the <a href=\"/en-US/docs/Web/API/Geolocation_API\">Geolocation API</a> (which exposes available location data for the device the web browser is running on) has the main entry point for its use, a <code>geolocation</code> property available on the global <a href=\"/en-US/docs/Web/API/Navigator\">Navigator</a> object. Therefore, you can detect whether the browser supports geolocation or not by using something like the following:</p>\n<div><pre><code><span>if</span> <span>(</span><span>\"geolocation\"</span> <span>in</span> navigator<span>)</span> <span>{</span>\n  navigator<span>.</span>geolocation<span>.</span><span>getCurrentPosition</span><span>(</span><span>function</span><span>(</span><span>position</span><span>)</span> <span>{</span>\n    <span>// show the location on a map, perhaps using the Google Maps API</span>\n  <span>}</span><span>)</span><span>;</span>\n<span>}</span> <span>else</span> <span>{</span>\n  <span>// Give the user a choice of static maps instead perhaps</span>\n<span>}</span>\n</code></pre></div>\n<p>It is probably better to use an established feature detection library however, rather than writing your own all the time. Modernizr is the industry standard for feature detection tests, and we'll look at that later on.</p>\n<p>Before we move on, we'd like to say one thing upfront — don't confuse feature detection with <strong>browser sniffing</strong> (detecting what specific browser is accessing the site) — this is a terrible practice that should be discouraged at all costs. See <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript#using_bad_browser_sniffing_code\">Using bad browser sniffing code</a> for more details.</p></div><h2 id=\"writing_your_own_feature_detection_tests\"><a href=\"#writing_your_own_feature_detection_tests\" title=\"Permalink to Writing your own feature detection tests\">Writing your own feature detection tests</a></h2><p>In this section, we'll look at implementing your own feature detection tests, in both CSS and JavaScript.</p><h3 id=\"css\"><a href=\"#css\" title=\"Permalink to CSS\">CSS</a></h3><div><p>You can write tests for CSS features by testing for the existence of <em><a href=\"/en-US/docs/Web/API/HTMLElement/style\">element.style.property</a></em> (e.g. <code>paragraph.style.transform</code>) in JavaScript.</p>\n<p>A classic example might be to test for <a href=\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\">Flexbox</a> support in a browser; for browsers that support the newest Flexbox spec, we could use a flexible and robust flex layout. For browsers that don't, we could use a floated layout that works OK, although it is slightly more brittle and hacky, and not as cool-looking.</p>\n<p>Let's implement something that demonstrates this, although we'll keep it simple for now.</p>\n<ol>\n  <li>Start by making local copies of our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/css-feature-detect.html\" rel=\" noopener\"><code>css-feature-detect.html</code></a>, <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/flex-layout.css\" rel=\" noopener\"><code>flex-layout.css</code></a>, <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/float-layout.css\" rel=\" noopener\"><code>float-layout.css</code></a>, and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/basic-styling.css\" rel=\" noopener\"><code>basic-styling.css</code></a> files. Save them in a new directory.</li>\n  <li>We will add the HTML5 Shiv to our example too so that the HTML5 semantic elements will style properly in older versions of IE. Download the latest version (see <a href=\"https://github.com/aFarkas/html5shiv#manual-installation\" rel=\" noopener\">Manual installation</a>), unzip the ZIP file, copy the <code>html5shiv-printshiv.min.js</code> and <code>html5shiv.min.js</code> files into your example directory, and link to one of the files by putting the following under your <a href=\"/en-US/docs/Web/HTML/Element/title\"><code>&lt;title&gt;</code></a> element:\n    <div><pre><code><span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>\"</span>html5shiv.min.js<span>\"</span></span><span>&gt;</span></span><span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>Have a look at your example CSS files — you'll see that <code>basic-styling.css</code> handles all the styling that we want to give to every browser, whereas the other two CSS files contain the CSS we want to selectively apply to browsers depending on their support levels. You can look at the different effects these two files have by manually changing the CSS file referred to by the second <a href=\"/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element, but let's instead implement some JavaScript to automatically swap them as needed.</li>\n  <li>First, remove the contents of the second <code>&lt;link&gt;</code> element's <code>href</code> attribute. We will fill this in dynamically later on.</li>\n  <li>Next, add a <code>&lt;script&gt;&lt;/script&gt;</code> element at the bottom of your body (just before the closing <code>&lt;/body&gt;</code> tag).</li>\n  <li>Give it the following contents:\n    <div><pre><code><span>const</span> conditional <span>=</span> document<span>.</span><span>querySelector</span><span>(</span><span>'.conditional'</span><span>)</span><span>;</span>\n<span>const</span> testElem <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>'div'</span><span>)</span><span>;</span>\n<span>if</span> <span>(</span>testElem<span>.</span>style<span>.</span>flex <span>!==</span> <span>undefined</span> <span>&amp;&amp;</span> testElem<span>.</span>style<span>.</span>flexFlow <span>!==</span> <span>undefined</span><span>)</span> <span>{</span>\n  conditional<span>.</span><span>setAttribute</span><span>(</span><span>'href'</span><span>,</span> <span>'flex-layout.css'</span><span>)</span><span>;</span>\n<span>}</span> <span>else</span> <span>{</span>\n  conditional<span>.</span><span>setAttribute</span><span>(</span><span>'href'</span><span>,</span> <span>'float-layout.css'</span><span>)</span><span>;</span>\n<span>}</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>Here we are grabbing a reference to the second <code>&lt;link&gt;</code> element, and creating a <code>&lt;div&gt;</code> element as part of our test. In our conditional statement, we test that the <a href=\"/en-US/docs/Web/CSS/flex\"><code>flex</code></a> and <a href=\"/en-US/docs/Web/CSS/flex-flow\"><code>flex-flow</code></a> properties exist in the browser. Note how the JavaScript representations of those properties that are stored inside the <a href=\"/en-US/docs/Web/API/HTMLElement/style\"><code>HTMLElement.style</code></a> object use lower camel case, not hyphens, to separate the words.</p>\n\n<p>When you save everything and try out your example, you should see the flexbox layout applied to the page if the browser supports modern flexbox, and the float layout if not.</p>\n<p><strong>Note:</strong> Often such an approach is overkill for a minor feature detection problem — you can often get away with using multiple vendor prefixes and fallback properties, as described in <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#css_fallback_behavior\">CSS fallback behavior</a> and <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#handling_css_prefixes\">Handling CSS prefixes</a>.</p>\n<h4 id=\"supports\">@supports</h4>\n<p>In recent times, CSS has had its own native feature detection mechanism introduced — the <a href=\"/en-US/docs/Web/CSS/@supports\"><code>@supports</code></a> at-rule. This works in a similar manner to <a href=\"/en-US/docs/Web/CSS/Media_Queries\">media queries</a> (see also <a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS#responsive_design_problems\">Responsive design problems</a>) — except that instead of selectively applying CSS depending on a media feature like a resolution, screen width or aspect ratio, it selectively applies CSS depending on whether a CSS feature is supported.</p>\n<p>For example, we could rewrite our previous example to use <code>@supports</code> — see <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-feature-detect.html\" rel=\" noopener\"><code>supports-feature-detect.html</code></a> and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-styling.css\" rel=\" noopener\"><code>supports-styling.css</code></a>. If you look at the latter, you'll see a couple of <code>@supports</code> blocks, for example:</p>\n<div><pre><code><span><span>@supports</span> <span>(</span><span>flex-flow</span><span>:</span> row<span>)</span> <span>and</span> <span>(</span><span>flex</span><span>:</span> 1<span>)</span></span> <span>{</span>\n\n  <span>main</span> <span>{</span>\n    <span>display</span><span>:</span> flex<span>;</span>\n  <span>}</span>\n\n  <span>main div</span> <span>{</span>\n    <span>padding-right</span><span>:</span> 4%<span>;</span>\n    <span>flex</span><span>:</span> 1<span>;</span>\n  <span>}</span>\n\n  <span>main div:last-child</span> <span>{</span>\n    <span>padding-right</span><span>:</span> 0<span>;</span>\n  <span>}</span>\n\n<span>}</span>\n</code></pre></div>\n<p>This at-rule block applies the CSS rule within only if the current browser supports both the <code>flex-flow: row</code> and <code>flex: 1</code> declarations. For each condition to work, you need to include a complete declaration (not just a property name) and NOT include the semi-colon on the end.</p>\n<p><code>@supports</code> also has <code>OR</code> and <code>NOT</code> logic available — the other block applies the float layout if the flexbox properties are not available:</p>\n<div><pre><code><span><span>@supports</span> <span>not</span> <span>(</span><span>flex-flow</span><span>:</span> row<span>)</span> <span>and</span> <span>(</span><span>flex</span><span>:</span> 1<span>)</span></span> <span>{</span>\n\n  <span>/* rules in here */</span>\n\n<span>}</span>\n</code></pre></div>\n<p>This may look a lot more convenient than the previous example — we can do all of our feature detection in CSS, no JavaScript required, and we can handle all the logic in a single CSS file, cutting down on HTTP requests. the problem here is browser support — <code>@supports</code> is not supported at all in IE, and only supported in very recent versions of Safari/iOS WebKit (9+/9.2+), whereas the JavaScript version should work in much older browsers (probably back to IE8 or 9, although older versions of IE will have additional problems, such as not supporting <a href=\"/en-US/docs/Web/API/Document/querySelector\"><code>Document.querySelector</code></a>, and having a messed up box model).</p></div><h3 id=\"javascript\"><a href=\"#javascript\" title=\"Permalink to JavaScript\">JavaScript</a></h3><div><p>We already saw an example of a JavaScript feature detection test earlier on. Generally, such tests are done via one of the following common patterns:</p>\n\n<p><strong>Note:</strong> The double <code>NOT</code> in the above example (<code>!!</code>) is a way to force a return value to become a \"proper\" boolean value, rather than a <a href=\"/en-US/docs/Glossary/Truthy\">Truthy</a>/<a href=\"/en-US/docs/Glossary/Falsy\">Falsy</a> value that may skew the results.</p>\n<p>The <a href=\"https://diveinto.html5doctor.com/detect.html\" rel=\" noopener\">Dive into HTML5 Detecting HTML5 Features</a> page has a lot more useful feature detection tests besides the ones listed above, and you can generally find a feature detection test for most things by searching for \"detect support for YOUR-FEATURE-HERE\" in your favorite search engine. Bear in mind though that some features, however, are known to be undetectable — see Modernizr's list of <a href=\"https://github.com/Modernizr/Modernizr/wiki/Undetectables\" rel=\" noopener\">Undetectables</a>.</p>\n<h4 id=\"matchmedia\">matchMedia</h4>\n<p>We also wanted to mention the <a href=\"/en-US/docs/Web/API/Window/matchMedia\"><code>Window.matchMedia</code></a> JavaScript feature at this point too. This is a property that allows you to run media query tests inside JavaScript. It looks like this:</p>\n<div><pre><code><span>if</span> <span>(</span>window<span>.</span><span>matchMedia</span><span>(</span><span>\"(max-width: 480px)\"</span><span>)</span><span>.</span>matches<span>)</span> <span>{</span>\n  <span>// run JavaScript in here.</span>\n<span>}</span>\n</code></pre></div>\n<p>As an example, our <a href=\"https://github.com/chrisdavidmills/snapshot\" rel=\" noopener\">Snapshot</a> demo makes use of it to selectively apply the Brick JavaScript library and use it to handle the UI layout, but only for the small screen layout (480px wide or less). We first use the <code>media</code> attribute to only apply the Brick CSS to the page if the page width is 480px or less:</p>\n<div><pre><code>&lt;link href=<span>\"dist/brick.css\"</span> type=<span>\"text/css\"</span> rel=<span>\"stylesheet\"</span> media=<span>\"all and (max-width: 480px)\"</span>&gt;\n</code></pre></div>\n<p>We then use <code>matchMedia()</code> in the JavaScript several times, to only run Brick navigation functions if we are on the small screen layout (in wider screen layouts, everything can be seen at once, so we don't need to navigate between different views).</p>\n<div><pre><code><span>if</span> <span>(</span>window<span>.</span><span>matchMedia</span><span>(</span><span>\"(max-width: 480px)\"</span><span>)</span><span>.</span>matches<span>)</span> <span>{</span>\n  deck<span>.</span><span>shuffleTo</span><span>(</span><span>1</span><span>)</span><span>;</span>\n<span>}</span>\n</code></pre></div></div><h2 id=\"using_modernizr_to_implement_feature_detection\"><a href=\"#using_modernizr_to_implement_feature_detection\" title=\"Permalink to Using Modernizr to implement feature detection\">Using Modernizr to implement feature detection</a></h2><div><p>It is possible to implement your own feature detection tests using techniques like the ones detailed above. You might as well use a dedicated feature detection library however, as it makes things much easier. The mother of all feature detection libraries is <a href=\"https://modernizr.com/\" rel=\" noopener\">Modernizr</a>, and it can detect just about everything you'll ever need. Let's look at how to use it now.</p>\n<p>When you are experimenting with Modernizr you might as well use the development build, which includes every possible feature detection test. Download this now by:</p>\n<ol>\n  <li>Clicking on the <a href=\"https://modernizr.com/download?do_not_use_in_production\" rel=\" noopener\">Development build</a> link.</li>\n  <li>Clicking the big pink <em>Build</em> button on the page that comes up.</li>\n  <li>Clicking the top <em>Download</em> link in the dialog box that appears.</li>\n</ol>\n<p>Save it somewhere sensible, like the directory you've been creating your other examples for in this article.</p>\n<p>When you are using Modernizr in production, you can go to the <a href=\"https://modernizr.com/download\" rel=\" noopener\">Download page</a> you've already visited and click the plus buttons for only the features you need feature detects for. Then when you click the <em>Build</em> button, you'll download a custom build containing only those feature detects, making for a much smaller file size.</p></div><h3 id=\"css_2\"><a href=\"#css_2\" title=\"Permalink to CSS\">CSS</a></h3><div><p>Let's have a look at how Modernizr works in terms of selectively applying CSS.</p>\n<ol>\n  <li>First, make a copy of <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-feature-detect.html\" rel=\" noopener\"><code>supports-feature-detect.html</code></a> and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/supports-styling.css\" rel=\" noopener\"><code>supports-styling.css</code></a>. Save them as <code>modernizr-css.html</code> and <code>modernizr-css.css</code>.</li>\n  <li>Update your <a href=\"/en-US/docs/Web/HTML/Element/link\"><code>&lt;link&gt;</code></a> element in your HTML so it points to the correct CSS file (you should also update your <a href=\"/en-US/docs/Web/HTML/Element/title\"><code>&lt;title&gt;</code></a> element to something more suitable!):\n    <div><pre><code><span><span><span>&lt;</span>link</span> <span>href</span><span><span>=</span><span>\"</span>modernizr-css.css<span>\"</span></span> <span>rel</span><span><span>=</span><span>\"</span>stylesheet<span>\"</span></span><span>&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>Above this <code>&lt;link&gt;</code> element, add a <a href=\"/en-US/docs/Web/HTML/Element/script\"><code>&lt;script&gt;</code></a> element to apply the Modernizr library to the page, as shown below. This needs to be applied to the page before any CSS (or JavaScript) that might make use of it.\n    <div><pre><code><span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>\"</span>modernizr-custom.js<span>\"</span></span><span>&gt;</span></span><span></span><span><span><span>&lt;/</span>script</span><span>&gt;</span></span>\n</code></pre></div>\n  </li>\n  <li>Now edit your opening <code>&lt;html&gt;</code> tag, so that it looks like this:\n    \n  </li>\n</ol>\n<p>At this point, try loading your page, and you'll get an idea of how Modernizr works for CSS features. If you look at the DOM inspector of your browser's developer tools, you'll see that Modernizr has updated your <code>&lt;html&gt;</code> <code>class</code> value like so:</p>\n<div><pre><code><span><span><span>&lt;</span>html</span> <span>class</span><span><span>=</span><span>\"</span>js no-htmlimports sizes flash transferables applicationcache blobconstructor\nblob-constructor cookies cors ...AND LOADS MORE VALUES!<span>\"</span></span><span>&gt;</span></span>\n</code></pre></div>\n<p>It now contains a large number of classes that indicate the support status of different technology features. As an example, if the browser didn't support flexbox at all, <code>&lt;html&gt;</code> would be given a class name of <code>no-flexbox</code>. If it did support modern flexbox, it would get a class name of <code>flexbox</code>. If you search through the class list, you'll also see others relating to flexbox, like:</p>\n<ul>\n  <li><code>flexboxlegacy</code> for the old flexbox spec (2009).</li>\n  <li><code>flexboxtweener</code> for 2011 in between syntax supported by IE10.</li>\n  <li><code>flexwrap</code> for the <a href=\"/en-US/docs/Web/CSS/flex-wrap\"><code>flex-wrap</code></a> property, which isn't present in some implementations.</li>\n</ul>\n\n<p>Moving on, let's update our CSS to use Modernizr rather than <code>@supports</code>. Go into <code>modernizr-css.css</code>, and replace the two <code>@supports</code> blocks with the following:</p>\n<div><pre><code><span>/* Properties for browsers with modern flexbox */</span>\n\n<span>.flexbox main</span> <span>{</span>\n  <span>display</span><span>:</span> flex<span>;</span>\n<span>}</span>\n\n<span>.flexbox main div</span> <span>{</span>\n  <span>padding-right</span><span>:</span> 4%<span>;</span>\n  <span>flex</span><span>:</span> 1<span>;</span>\n<span>}</span>\n\n<span>.flexbox main div:last-child</span> <span>{</span>\n  <span>padding-right</span><span>:</span> 0<span>;</span>\n<span>}</span>\n\n<span>/* Fallbacks for browsers that don't support modern flexbox */</span>\n\n<span>.no-flexbox main div</span> <span>{</span>\n  <span>width</span><span>:</span> 22%<span>;</span>\n  <span>float</span><span>:</span> left<span>;</span>\n  <span>padding-right</span><span>:</span> 4%<span>;</span>\n<span>}</span>\n\n<span>.no-flexbox main div:last-child</span> <span>{</span>\n  <span>padding-right</span><span>:</span> 0<span>;</span>\n<span>}</span>\n\n<span>.no-flexbox footer</span> <span>{</span>\n  <span>clear</span><span>:</span> left<span>;</span>\n<span>}</span>\n</code></pre></div>\n<p>So how does this work? Because all those class names have been put on the <code>&lt;html&gt;</code> element, you can target browsers that do or don't support a feature using specific descendant selectors. So here we're applying the top set of rules only to browsers that do support flexbox, and the bottom set of rules only to browsers that don't (<code>no-flexbox</code>).</p>\n<p><strong>Note:</strong> Bear in mind that all of Modernizr's HTML and JavaScript feature tests are also reported in these class names, so you can quite happily apply CSS selectively based on whether the browser supports HTML or JavaScript features, if needed.</p>\n<p><strong>Note:</strong> If you have trouble getting this to work, check your code against our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.html\" rel=\" noopener\"><code>modernizr-css.html</code></a> and <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.css\" rel=\" noopener\"><code>modernizr-css.css</code></a> files (see this running live also).</p></div><h3 id=\"javascript_2\"><a href=\"#javascript_2\" title=\"Permalink to JavaScript\">JavaScript</a></h3><div><p>Modernizr is also equally well-prepared for implementing JavaScript feature detects too. It does this by making the global <code>Modernizr</code> object available to the page it is applied to, which contains results of the feature detects as <code>true</code>/<code>false</code> properties.</p>\n<p>For example, load up our <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-css.html\" rel=\" noopener\"><code>modernizr-css.html</code></a> example in your browser, then try going to your JavaScript console and typing in <code>Modernizr.</code> followed by some of those class names (they are the same here too). For example:</p>\n<pre>Modernizr.flexbox\nModernizr.websqldatabase\nModernizr.xhr2\nModernizr.fetch\n</pre>\n<p>The console will return <code>true</code>/<code>false</code> values to indicate whether your browser supports those features or not.</p>\n<p>Let's look at an example to show how you'd use those properties.</p>\n<ol>\n  <li>First of all, make a local copy of the <a href=\"https://github.com/mdn/learning-area/blob/main/tools-testing/cross-browser-testing/feature-detection/modernizr-js.html\" rel=\" noopener\"><code>modernizr-js.html</code></a> example file.</li>\n  <li>Attach the Modernizr library to the HTML using a <code>&lt;script&gt;</code> element, as we have done in previous demos. Put it above the existing <code>&lt;script&gt;</code> element, which is attaching the Google Maps API to the page.</li>\n  <li>Next, fill in the <code>YOUR-API-KEY</code> placeholder text in the second <code>&lt;script&gt;</code> element (as it is now) with a valid Google Maps API key. To get a key, sign in to a Google account, go to the <a href=\"https://developers.google.com/maps/documentation/javascript/get-api-key\" rel=\" noopener\">Get a Key/Authentication</a> page, then click the blue <em>Get a Key</em> button and follow the instructions.</li>\n  <li>Finally, add another <code>&lt;script&gt;</code> element at the bottom of the HTML body (just before the <code>&lt;/body&gt;</code> tag), and put the following script inside the tags:\n    <div><pre><code><span>if</span> <span>(</span>Modernizr<span>.</span>geolocation<span>)</span> <span>{</span>\n\n  navigator<span>.</span>geolocation<span>.</span><span>getCurrentPosition</span><span>(</span><span>function</span><span>(</span><span>position</span><span>)</span> <span>{</span>\n\n    <span>let</span> latlng <span>=</span> <span>new</span> <span>google<span>.</span>maps<span>.</span>LatLng</span><span>(</span>position<span>.</span>coords<span>.</span>latitude<span>,</span>position<span>.</span>coords<span>.</span>longitude<span>)</span><span>;</span>\n    <span>let</span> myOptions <span>=</span> <span>{</span>\n      <span>zoom</span><span>:</span> <span>8</span><span>,</span>\n      <span>center</span><span>:</span> latlng<span>,</span>\n      <span>mapTypeId</span><span>:</span> google<span>.</span>maps<span>.</span>MapTypeId<span>.</span><span>TERRAIN</span><span>,</span>\n      <span>disableDefaultUI</span><span>:</span> <span>true</span>\n    <span>}</span>\n    <span>let</span> map <span>=</span> <span>new</span> <span>google<span>.</span>maps<span>.</span>Map</span><span>(</span>document<span>.</span><span>getElementById</span><span>(</span><span>\"map_canvas\"</span><span>)</span><span>,</span> myOptions<span>)</span><span>;</span>\n  <span>}</span><span>)</span><span>;</span>\n\n<span>}</span> <span>else</span> <span>{</span>\n  <span>const</span> para <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>'p'</span><span>)</span><span>;</span>\n  para<span>.</span>textContent <span>=</span> <span>'Argh, no geolocation!'</span><span>;</span>\n  document<span>.</span>body<span>.</span><span>appendChild</span><span>(</span>para<span>)</span><span>;</span>\n<span>}</span>\n</code></pre></div>\n  </li>\n</ol>\n<p>Try your example out! Here we use the <code>Modernizr.geolocation</code> test to check whether geolocation is supported by the current browser. If it is, we run some code that gets your device's current location, and plots it on a Google Map.</p></div><h2 id=\"summary\"><a href=\"#summary\" title=\"Permalink to Summary\">Summary</a></h2><div><p>This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.</p>\n<p>Next up, we'll start looking at automated testing.</p><ul>\n    <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\"><span> Previous </span></a></li>\n    <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\"><span> Overview: Cross browser testing</span></a></li>\n    <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\"><span> Next  </span></a></li>\n</ul></div><h2 id=\"in_this_module\"><a href=\"#in_this_module\" title=\"Permalink to In this module\">In this module</a></h2><div><ul>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\">Introduction to cross browser testing</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\">Strategies for carrying out testing</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\">Handling common HTML and CSS problems</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\">Handling common JavaScript problems</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\">Handling common accessibility problems</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\" aria-current=\"page\">Implementing feature detection</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\">Introduction to automated testing</a></li>\n  <li><a href=\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\">Setting up your own test automation environment</a></li>\n</ul></div></article></div></div>","textContent":"\n     Previous \n     Overview: Cross browser testing\n     Next  \n\nFeature detection involves working out whether a browser supports a certain block of code, and running different code depending on whether it does (or doesn't), so that the browser can always provide a working experience rather than crashing/erroring in some browsers. This article details how to write your own simple feature detection, how to use a library to speed up implementation, and native features for feature detection such as @supports.\nThe concept of feature detectionThe idea behind feature detection is that you can run a test to determine whether a feature is supported in the current browser, and then conditionally run code to provide an acceptable experience both in browsers that do support the feature, and browsers that don't. If you don't do this, browsers that don't support the features you are using in your code won't display your sites properly and will just fail, creating a bad user experience.\nLet's recap and look at the example we touched on in our Handling common JavaScript problems — the Geolocation API (which exposes available location data for the device the web browser is running on) has the main entry point for its use, a geolocation property available on the global Navigator object. Therefore, you can detect whether the browser supports geolocation or not by using something like the following:\nif (\"geolocation\" in navigator) {\n  navigator.geolocation.getCurrentPosition(function(position) {\n    // show the location on a map, perhaps using the Google Maps API\n  });\n} else {\n  // Give the user a choice of static maps instead perhaps\n}\n\nIt is probably better to use an established feature detection library however, rather than writing your own all the time. Modernizr is the industry standard for feature detection tests, and we'll look at that later on.\nBefore we move on, we'd like to say one thing upfront — don't confuse feature detection with browser sniffing (detecting what specific browser is accessing the site) — this is a terrible practice that should be discouraged at all costs. See Using bad browser sniffing code for more details.Writing your own feature detection testsIn this section, we'll look at implementing your own feature detection tests, in both CSS and JavaScript.CSSYou can write tests for CSS features by testing for the existence of element.style.property (e.g. paragraph.style.transform) in JavaScript.\nA classic example might be to test for Flexbox support in a browser; for browsers that support the newest Flexbox spec, we could use a flexible and robust flex layout. For browsers that don't, we could use a floated layout that works OK, although it is slightly more brittle and hacky, and not as cool-looking.\nLet's implement something that demonstrates this, although we'll keep it simple for now.\n\n  Start by making local copies of our css-feature-detect.html, flex-layout.css, float-layout.css, and basic-styling.css files. Save them in a new directory.\n  We will add the HTML5 Shiv to our example too so that the HTML5 semantic elements will style properly in older versions of IE. Download the latest version (see Manual installation), unzip the ZIP file, copy the html5shiv-printshiv.min.js and html5shiv.min.js files into your example directory, and link to one of the files by putting the following under your <title> element:\n    <script src=\"html5shiv.min.js\"></script>\n\n  \n  Have a look at your example CSS files — you'll see that basic-styling.css handles all the styling that we want to give to every browser, whereas the other two CSS files contain the CSS we want to selectively apply to browsers depending on their support levels. You can look at the different effects these two files have by manually changing the CSS file referred to by the second <link> element, but let's instead implement some JavaScript to automatically swap them as needed.\n  First, remove the contents of the second <link> element's href attribute. We will fill this in dynamically later on.\n  Next, add a <script></script> element at the bottom of your body (just before the closing </body> tag).\n  Give it the following contents:\n    const conditional = document.querySelector('.conditional');\nconst testElem = document.createElement('div');\nif (testElem.style.flex !== undefined && testElem.style.flexFlow !== undefined) {\n  conditional.setAttribute('href', 'flex-layout.css');\n} else {\n  conditional.setAttribute('href', 'float-layout.css');\n}\n\n  \n\nHere we are grabbing a reference to the second <link> element, and creating a <div> element as part of our test. In our conditional statement, we test that the flex and flex-flow properties exist in the browser. Note how the JavaScript representations of those properties that are stored inside the HTMLElement.style object use lower camel case, not hyphens, to separate the words.\n\nWhen you save everything and try out your example, you should see the flexbox layout applied to the page if the browser supports modern flexbox, and the float layout if not.\nNote: Often such an approach is overkill for a minor feature detection problem — you can often get away with using multiple vendor prefixes and fallback properties, as described in CSS fallback behavior and Handling CSS prefixes.\n@supports\nIn recent times, CSS has had its own native feature detection mechanism introduced — the @supports at-rule. This works in a similar manner to media queries (see also Responsive design problems) — except that instead of selectively applying CSS depending on a media feature like a resolution, screen width or aspect ratio, it selectively applies CSS depending on whether a CSS feature is supported.\nFor example, we could rewrite our previous example to use @supports — see supports-feature-detect.html and supports-styling.css. If you look at the latter, you'll see a couple of @supports blocks, for example:\n@supports (flex-flow: row) and (flex: 1) {\n\n  main {\n    display: flex;\n  }\n\n  main div {\n    padding-right: 4%;\n    flex: 1;\n  }\n\n  main div:last-child {\n    padding-right: 0;\n  }\n\n}\n\nThis at-rule block applies the CSS rule within only if the current browser supports both the flex-flow: row and flex: 1 declarations. For each condition to work, you need to include a complete declaration (not just a property name) and NOT include the semi-colon on the end.\n@supports also has OR and NOT logic available — the other block applies the float layout if the flexbox properties are not available:\n@supports not (flex-flow: row) and (flex: 1) {\n\n  /* rules in here */\n\n}\n\nThis may look a lot more convenient than the previous example — we can do all of our feature detection in CSS, no JavaScript required, and we can handle all the logic in a single CSS file, cutting down on HTTP requests. the problem here is browser support — @supports is not supported at all in IE, and only supported in very recent versions of Safari/iOS WebKit (9+/9.2+), whereas the JavaScript version should work in much older browsers (probably back to IE8 or 9, although older versions of IE will have additional problems, such as not supporting Document.querySelector, and having a messed up box model).JavaScriptWe already saw an example of a JavaScript feature detection test earlier on. Generally, such tests are done via one of the following common patterns:\n\nNote: The double NOT in the above example (!!) is a way to force a return value to become a \"proper\" boolean value, rather than a Truthy/Falsy value that may skew the results.\nThe Dive into HTML5 Detecting HTML5 Features page has a lot more useful feature detection tests besides the ones listed above, and you can generally find a feature detection test for most things by searching for \"detect support for YOUR-FEATURE-HERE\" in your favorite search engine. Bear in mind though that some features, however, are known to be undetectable — see Modernizr's list of Undetectables.\nmatchMedia\nWe also wanted to mention the Window.matchMedia JavaScript feature at this point too. This is a property that allows you to run media query tests inside JavaScript. It looks like this:\nif (window.matchMedia(\"(max-width: 480px)\").matches) {\n  // run JavaScript in here.\n}\n\nAs an example, our Snapshot demo makes use of it to selectively apply the Brick JavaScript library and use it to handle the UI layout, but only for the small screen layout (480px wide or less). We first use the media attribute to only apply the Brick CSS to the page if the page width is 480px or less:\n<link href=\"dist/brick.css\" type=\"text/css\" rel=\"stylesheet\" media=\"all and (max-width: 480px)\">\n\nWe then use matchMedia() in the JavaScript several times, to only run Brick navigation functions if we are on the small screen layout (in wider screen layouts, everything can be seen at once, so we don't need to navigate between different views).\nif (window.matchMedia(\"(max-width: 480px)\").matches) {\n  deck.shuffleTo(1);\n}\nUsing Modernizr to implement feature detectionIt is possible to implement your own feature detection tests using techniques like the ones detailed above. You might as well use a dedicated feature detection library however, as it makes things much easier. The mother of all feature detection libraries is Modernizr, and it can detect just about everything you'll ever need. Let's look at how to use it now.\nWhen you are experimenting with Modernizr you might as well use the development build, which includes every possible feature detection test. Download this now by:\n\n  Clicking on the Development build link.\n  Clicking the big pink Build button on the page that comes up.\n  Clicking the top Download link in the dialog box that appears.\n\nSave it somewhere sensible, like the directory you've been creating your other examples for in this article.\nWhen you are using Modernizr in production, you can go to the Download page you've already visited and click the plus buttons for only the features you need feature detects for. Then when you click the Build button, you'll download a custom build containing only those feature detects, making for a much smaller file size.CSSLet's have a look at how Modernizr works in terms of selectively applying CSS.\n\n  First, make a copy of supports-feature-detect.html and supports-styling.css. Save them as modernizr-css.html and modernizr-css.css.\n  Update your <link> element in your HTML so it points to the correct CSS file (you should also update your <title> element to something more suitable!):\n    <link href=\"modernizr-css.css\" rel=\"stylesheet\">\n\n  \n  Above this <link> element, add a <script> element to apply the Modernizr library to the page, as shown below. This needs to be applied to the page before any CSS (or JavaScript) that might make use of it.\n    <script src=\"modernizr-custom.js\"></script>\n\n  \n  Now edit your opening <html> tag, so that it looks like this:\n    \n  \n\nAt this point, try loading your page, and you'll get an idea of how Modernizr works for CSS features. If you look at the DOM inspector of your browser's developer tools, you'll see that Modernizr has updated your <html> class value like so:\n<html class=\"js no-htmlimports sizes flash transferables applicationcache blobconstructor\nblob-constructor cookies cors ...AND LOADS MORE VALUES!\">\n\nIt now contains a large number of classes that indicate the support status of different technology features. As an example, if the browser didn't support flexbox at all, <html> would be given a class name of no-flexbox. If it did support modern flexbox, it would get a class name of flexbox. If you search through the class list, you'll also see others relating to flexbox, like:\n\n  flexboxlegacy for the old flexbox spec (2009).\n  flexboxtweener for 2011 in between syntax supported by IE10.\n  flexwrap for the flex-wrap property, which isn't present in some implementations.\n\n\nMoving on, let's update our CSS to use Modernizr rather than @supports. Go into modernizr-css.css, and replace the two @supports blocks with the following:\n/* Properties for browsers with modern flexbox */\n\n.flexbox main {\n  display: flex;\n}\n\n.flexbox main div {\n  padding-right: 4%;\n  flex: 1;\n}\n\n.flexbox main div:last-child {\n  padding-right: 0;\n}\n\n/* Fallbacks for browsers that don't support modern flexbox */\n\n.no-flexbox main div {\n  width: 22%;\n  float: left;\n  padding-right: 4%;\n}\n\n.no-flexbox main div:last-child {\n  padding-right: 0;\n}\n\n.no-flexbox footer {\n  clear: left;\n}\n\nSo how does this work? Because all those class names have been put on the <html> element, you can target browsers that do or don't support a feature using specific descendant selectors. So here we're applying the top set of rules only to browsers that do support flexbox, and the bottom set of rules only to browsers that don't (no-flexbox).\nNote: Bear in mind that all of Modernizr's HTML and JavaScript feature tests are also reported in these class names, so you can quite happily apply CSS selectively based on whether the browser supports HTML or JavaScript features, if needed.\nNote: If you have trouble getting this to work, check your code against our modernizr-css.html and modernizr-css.css files (see this running live also).JavaScriptModernizr is also equally well-prepared for implementing JavaScript feature detects too. It does this by making the global Modernizr object available to the page it is applied to, which contains results of the feature detects as true/false properties.\nFor example, load up our modernizr-css.html example in your browser, then try going to your JavaScript console and typing in Modernizr. followed by some of those class names (they are the same here too). For example:\nModernizr.flexbox\nModernizr.websqldatabase\nModernizr.xhr2\nModernizr.fetch\n\nThe console will return true/false values to indicate whether your browser supports those features or not.\nLet's look at an example to show how you'd use those properties.\n\n  First of all, make a local copy of the modernizr-js.html example file.\n  Attach the Modernizr library to the HTML using a <script> element, as we have done in previous demos. Put it above the existing <script> element, which is attaching the Google Maps API to the page.\n  Next, fill in the YOUR-API-KEY placeholder text in the second <script> element (as it is now) with a valid Google Maps API key. To get a key, sign in to a Google account, go to the Get a Key/Authentication page, then click the blue Get a Key button and follow the instructions.\n  Finally, add another <script> element at the bottom of the HTML body (just before the </body> tag), and put the following script inside the tags:\n    if (Modernizr.geolocation) {\n\n  navigator.geolocation.getCurrentPosition(function(position) {\n\n    let latlng = new google.maps.LatLng(position.coords.latitude,position.coords.longitude);\n    let myOptions = {\n      zoom: 8,\n      center: latlng,\n      mapTypeId: google.maps.MapTypeId.TERRAIN,\n      disableDefaultUI: true\n    }\n    let map = new google.maps.Map(document.getElementById(\"map_canvas\"), myOptions);\n  });\n\n} else {\n  const para = document.createElement('p');\n  para.textContent = 'Argh, no geolocation!';\n  document.body.appendChild(para);\n}\n\n  \n\nTry your example out! Here we use the Modernizr.geolocation test to check whether geolocation is supported by the current browser. If it is, we run some code that gets your device's current location, and plots it on a Google Map.SummaryThis article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.\nNext up, we'll start looking at automated testing.\n     Previous \n     Overview: Cross browser testing\n     Next  \nIn this module\n  Introduction to cross browser testing\n  Strategies for carrying out testing\n  Handling common HTML and CSS problems\n  Handling common JavaScript problems\n  Handling common accessibility problems\n  Implementing feature detection\n  Introduction to automated testing\n  Setting up your own test automation environment\n","length":16064,"excerpt":"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.","byline":null,"dir":null,"siteName":null,"lang":"en-US"},"finalizedMeta":{"title":"Implementing feature detection - Learn web development | MDN","description":"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.","author":false,"creator":"","publisher":false,"date":"2022-04-05T17:38:37.491Z","topics":[]},"jsonLd":{"@type":false,"headline":false,"description":false,"image":[],"mainEntityOfPage":{"@type":false,"@id":false},"datePublished":false,"dateModified":false,"isAccessibleForFree":false,"isPartOf":{"@type":[],"name":false,"productID":false},"discussionUrl":false,"license":false,"author":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false},"publisher":{"@type":false,"name":false,"description":false,"sameAs":false,"logo":{"@type":false,"url":false},"publishingPrinciples":false},"editor":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false}},"twitterObj":false,"status":200,"metadata":{"author":false,"title":"Implementing feature detection - Learn web development | MDN","description":"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.","canonical":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","keywords":[],"image":false,"firstParagraph":"Web technology reference for developers"},"dublinCore":{},"opengraph":{"title":"Implementing feature detection - Learn web development | MDN","description":"This article covered feature detection in a reasonable amount of detail, going through the main concepts and showing you how to both implement your own feature detection tests and use the Modernizr library to implement tests more easily.","url":"https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection","site_name":false,"locale":"en-US","type":false,"typeObject":{"published_time":false,"modified_time":false,"author":false,"publisher":false,"section":false,"tag":[]},"image":"https://developer.mozilla.org/mdn-social-share.cd6c4a5a.png"},"twitter":{"site":false,"description":false,"card":false,"creator":false,"title":false,"image":false},"archivedData":{"link":false,"wayback":false}}}