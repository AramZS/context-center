{"initialLink":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","sanitizedLink":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","finalLink":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","htmlEmbed":"<script>window.contexterSetup=window.contexterSetup||function(){window.contexterSetupComplete=!0;class ContexterLink extends HTMLAnchorElement{constructor(){super()}connectedCallback(){this.setAttribute(\"target\",\"_blank\")}}customElements.define(\"contexter-link\",ContexterLink,{extends:\"a\"}),customElements.define(\"contexter-inner\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__inner\"}}),customElements.define(\"contexter-thumbnail\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__thumbnail\"}}),customElements.define(\"contexter-byline\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__byline\"}}),customElements.define(\"contexter-keywordset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__keywordset\"}}),customElements.define(\"contexter-linkset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__linkset\"}}),customElements.define(\"contexter-meta\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__meta\"}}),customElements.define(\"contexter-summary\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"p-summary entry-summary\"}}),customElements.define(\"contexter-box-head\",class extends HTMLElement{constructor(){super()}connectedCallback(){this.className=\"contexter-box__head\"}}),customElements.define(\"contexter-box-inner\",class extends HTMLElement{constructor(){super()}connectedCallback(){}});class ContexterBox extends HTMLElement{constructor(){super(),this.first=!0,this.shadow=this.attachShadow({mode:\"open\"})}connectedCallback(){if(this.first){this.first=!1;var style=document.createElement(\"style\"),lightDomStyle=(style.innerHTML=`:host {--background: #f5f6f7;--border: darkblue;--blue: #0000ee;--font-color: black;--inner-border: black;font-family: Franklin,Arial,Helvetica,sans-serif;font-size: 14px;background: var(--background);width: 600px;color: var(--font-color);min-height: 90px;display: block;padding: 8px;border: 1px solid var(--border);cursor: pointer;box-sizing: border-box;margin: 6px;contain: content;margin: 6px auto;}// can only select top-level nodes with slotted::slotted(*) {max-width: 100%;display:block;}::slotted([slot=thumbnail]) {max-width: 100%;display:block;}::slotted([slot=header]) {width: 100%;font-size: 1.25rem;font-weight: bold;display:block;margin-bottom: 6px;}::slotted([slot=author]) {max-width: 50%;font-size: 12px;display:inline-block;float: left;}::slotted([slot=time]) {max-width: 50%;font-size: 12px;display:inline-block;float: right;}::slotted([slot=summary]) {width: 100%;margin-top: 6px;padding: 10px 2px;border-top: 1px solid var(--inner-border);font-size: 15px;display:inline-block;margin-bottom: 6px;}contexter-meta {height: auto;margin-bottom: 4px;width: 100%;display: grid;position: relative;min-height: 16px;grid-template-columns: repeat(2, 1fr);}::slotted([slot=keywords]) {width: 80%;padding: 2px 4px;border-top: 1px solid var(--inner-border);font-size: 11px;display: block;float: right;font-style: italic;text-align: right;grid-column: 2/2;grid-row: 1;align-self: end;justify-self: end;}::slotted([slot=keywords]):empty {border-top: 0px solid var(--inner-border);}::slotted([slot=archive-link]) {font-size: 1em;display: inline;}::slotted([slot=archive-link])::after {content: \"|\";display: inline;color: var(--font-color);text-decoration: none;margin: 0 .5em;}::slotted([slot=read-link]) {font-size: 1em;display: inline;}contexter-linkset {width: 80%;padding: 2px 4px;font-size: 13px;float: left;font-weight: bold;grid-row: 1;grid-column: 1/2;align-self: end;justify-self: start;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {:host {width: 310px;}}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){:host {--background: #354150;--border: #1f2b37;--blue: #55b0ff;--font-color: #ffffff;--inner-border: #787a7c;background: var(--background);border: 1px solid var(--border)}}`,document.createElement(\"style\"));lightDomStyle.innerHTML=`contexter-box {contain: content;}contexter-box .read-link {font-weight: bold;}contexter-box a {color: #0000ee;}contexter-box img {width: 100%;border: 0;padding: 0;margin: 0;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {...}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){contexter-box a {color: #55b0ff;}}`,this.appendChild(lightDomStyle),this.shadow.appendChild(style);const innerContainer=document.createElement(\"contexter-box-inner\"),innerSlotThumbnail=(this.shadow.appendChild(innerContainer),document.createElement(\"slot\")),innerSlotHeader=(innerSlotThumbnail.name=\"thumbnail\",innerContainer.appendChild(innerSlotThumbnail),document.createElement(\"slot\")),innerSlotAuthor=(innerSlotHeader.name=\"header\",innerContainer.appendChild(innerSlotHeader),document.createElement(\"slot\")),innerSlotTime=(innerSlotAuthor.name=\"author\",innerContainer.appendChild(innerSlotAuthor),document.createElement(\"slot\")),innerSlotSummary=(innerSlotTime.name=\"time\",innerContainer.appendChild(innerSlotTime),document.createElement(\"slot\")),metaContainer=(innerSlotSummary.name=\"summary\",innerContainer.appendChild(innerSlotSummary),document.createElement(\"contexter-meta\")),innerSlotInfo=(innerContainer.appendChild(metaContainer),document.createElement(\"slot\")),linkContainer=(innerSlotInfo.name=\"keywords\",metaContainer.appendChild(innerSlotInfo),document.createElement(\"contexter-linkset\")),innerSlotArchiveLink=(metaContainer.appendChild(linkContainer),document.createElement(\"slot\")),innerSlotReadLink=(innerSlotArchiveLink.name=\"archive-link\",linkContainer.appendChild(innerSlotArchiveLink),document.createElement(\"slot\"));innerSlotReadLink.name=\"read-link\",linkContainer.appendChild(innerSlotReadLink),this.className=\"contexter-box\",this.onclick=e=>{if(!e.target.className.includes(\"read-link\")&&!e.target.className.includes(\"title-link\")){const mainLinks=this.querySelectorAll(\"a.main-link\");mainLinks[0].click()}}}}}customElements.define(\"contexter-box\",ContexterBox)},window.contexterSetupComplete||window.contexterSetup();</script><contexter-box class=\"link-card h-entry hentry\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\"><contexter-thumbnail class=\"thumbnail\" slot=\"thumbnail\"></contexter-thumbnail><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><a is=\"contexter-link\" href=\"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html\" itemprop=\"url\">Providing Meaningful Search Results Without Own Index?- Bj√∂rn W√§rmedal</a></contexter-box-head></contexter-box-head><time class=\"dt-published published\" slot=\"time\" itemprop=\"datePublished\" datetime=\"2022-07-07T18:58:09.163Z\">6/7/2022</time><contexter-summary class=\"p-summary entry-summary\" itemprop=\"abstract\" slot=\"summary\"><p>üçµÔ∏è</p></contexter-summary><contexter-keywordset itemprop=\"keywords\" slot=\"keywords\"></contexter-keywordset><a href=\"https://web.archive.org/web/20220707185814/https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html\" is=\"contexter-link\" target=\"_blank\" rel=\"timemap\" class=\"read-link archive-link\" itemprop=\"archivedAt\" slot=\"archive-link\">Archived</a><a is=\"contexter-link\" href=\"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html\" class=\"read-link main-link\" itemprop=\"sameAs\" slot=\"read-link\">Read</a></contexter-box>","linkId":"6ce7ebbd56211e772e5e3da29c6095a279eb8174","data":{"originalLink":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","sanitizedLink":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","canonical":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","htmlText":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tmax-width: 45em; margin: auto; padding: 0 1em 5em; background-color: #333333; color: #dddddd;\n\t\t\t}\n\t\t\ta, a:visited {\n\t\t\t\tcolor: lightgreen; text-decoration: none;\n\t\t\t}\n\t\t\t#logotype {\n\t\t\t\ttext-align:center; font-size:300%;\n\t\t\t}\n\t\t</style>\n\t\t<meta charset='utf-8'>\n\t\t<meta name='viewport' content='width=device-width,initial-scale=1'>\n\t\t<link rel='alternate' type='application/atom+xml' title='Atom feed' href='/~bjorn/atom.xml'/>\n\t\t<link rel='icon' href='data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üçµÔ∏è</text></svg>'>\n\t\t<link rel='me' href='mailto:bjorn.warmedal@gmail.com' />\n\t\t<title>Providing Meaningful Search Results Without Own Index?\n - Bj√∂rn W√§rmedal</title>\n\t</head>\n\t<body>\n\t\t<p id='logotype'><a class='u-url' rel='me' href='/~bjorn/index.html'>üçµÔ∏è</a></p>\n<p style='text-align:right;margin:0'>2022-07-02</p>\n<h1>Providing Meaningful Search Results Without Own Index?</h1>\n<p>I have this idea for a search engine that would be similar to \"bangs\" in DuckDuckGo. Bangs mean that you prepend your search with a predefined shortcut to direct it to a specific site, like \"!w\" to search Wikipedia. When you prepend !w DuckDuckGo will redirect you to the Wikipedia search page with your query attached. In essence it's exactly like just going to Wikipedia and searching there from the start.</p>\n<p>My idea is this: a lot of sites have a search API. That means my search engine could send your query to multiple different sites and collate the replies into a set for you to peruse.</p>\n<p>But how accurate would a search like that be, and how should the results be weighted and presented? A model for each API called would have to be created and maintained, because Wikipedia and StackExchange have different APIs. And speaking of accuracy the latter actually say in their documentation that their search function isn't super and that you should use a \"proper\" search engine to get better results. On their own site.</p>\n<p>Could quality results be found this way? Searching for \"How to upgrade Ubuntu\" will probably only turn up results from a couple of sources. It's not feasible to propagate the search to hundreds of sites; maybe only five or ten at most.</p>\n<p>Of course SEO would be completely powerless to affect results, so that's pretty cool.</p>\n<p>The cool thing about a search engine like this is that one could optionally do all the queries on the client side with JavaScript and thereby both saving resources on the server and keeping the user's search history from it.</p>\n<p>Hmmm. Maybe I should just try this.</p>\n<h2>EDIT:</h2>\n<p>After looking around more I've concluded that too few pages have an API for this project to be viable. That's too bad.</p>\n<!--\nThree men are on a deserted island when a bottle with a genie floats ashore. The genie tells them that they have one wish each.\n\nThe first man says \"I miss my family so much. Being here is awful. I wish to be at home!\" and as the next gentle breeze passes he dissolves and finds himself at home.\n\nThe second man says \"Hell yeah, getting off this god forsaken island sounds nice. I wanna go home too!\" With the next breeze he too disappears.\n\nThe genie turns to the third man. \"And you, friend. What would you like to wish for?\"\n\n\"Well,\" says the tired and starving man. \"It's awful lonely now. I wish the other two were here with me.\"\n\n-->\n<p>-- CC0 Bj√∂rn W√§rmedal</p>\n</body>\n</html>","oembed":false,"readabilityObject":{"title":"Providing Meaningful Search Results Without Own Index?","content":"<div id=\"readability-page-1\" class=\"page\">\n\t\t<p id=\"logotype\"><a rel=\"me\" href=\"/~bjorn/index.html\">üçµÔ∏è</a></p>\n<p>2022-07-02</p>\n\n<p>I have this idea for a search engine that would be similar to \"bangs\" in DuckDuckGo. Bangs mean that you prepend your search with a predefined shortcut to direct it to a specific site, like \"!w\" to search Wikipedia. When you prepend !w DuckDuckGo will redirect you to the Wikipedia search page with your query attached. In essence it's exactly like just going to Wikipedia and searching there from the start.</p>\n<p>My idea is this: a lot of sites have a search API. That means my search engine could send your query to multiple different sites and collate the replies into a set for you to peruse.</p>\n<p>But how accurate would a search like that be, and how should the results be weighted and presented? A model for each API called would have to be created and maintained, because Wikipedia and StackExchange have different APIs. And speaking of accuracy the latter actually say in their documentation that their search function isn't super and that you should use a \"proper\" search engine to get better results. On their own site.</p>\n<p>Could quality results be found this way? Searching for \"How to upgrade Ubuntu\" will probably only turn up results from a couple of sources. It's not feasible to propagate the search to hundreds of sites; maybe only five or ten at most.</p>\n<p>Of course SEO would be completely powerless to affect results, so that's pretty cool.</p>\n<p>The cool thing about a search engine like this is that one could optionally do all the queries on the client side with JavaScript and thereby both saving resources on the server and keeping the user's search history from it.</p>\n<p>Hmmm. Maybe I should just try this.</p>\n<h2>EDIT:</h2>\n<p>After looking around more I've concluded that too few pages have an API for this project to be viable. That's too bad.</p>\n<!--\nThree men are on a deserted island when a bottle with a genie floats ashore. The genie tells them that they have one wish each.\n\nThe first man says \"I miss my family so much. Being here is awful. I wish to be at home!\" and as the next gentle breeze passes he dissolves and finds himself at home.\n\nThe second man says \"Hell yeah, getting off this god forsaken island sounds nice. I wanna go home too!\" With the next breeze he too disappears.\n\nThe genie turns to the third man. \"And you, friend. What would you like to wish for?\"\n\n\"Well,\" says the tired and starving man. \"It's awful lonely now. I wish the other two were here with me.\"\n\n-->\n<p>-- CC0 Bj√∂rn W√§rmedal</p>\n\n</div>","textContent":"\n\t\tüçµÔ∏è\n2022-07-02\n\nI have this idea for a search engine that would be similar to \"bangs\" in DuckDuckGo. Bangs mean that you prepend your search with a predefined shortcut to direct it to a specific site, like \"!w\" to search Wikipedia. When you prepend !w DuckDuckGo will redirect you to the Wikipedia search page with your query attached. In essence it's exactly like just going to Wikipedia and searching there from the start.\nMy idea is this: a lot of sites have a search API. That means my search engine could send your query to multiple different sites and collate the replies into a set for you to peruse.\nBut how accurate would a search like that be, and how should the results be weighted and presented? A model for each API called would have to be created and maintained, because Wikipedia and StackExchange have different APIs. And speaking of accuracy the latter actually say in their documentation that their search function isn't super and that you should use a \"proper\" search engine to get better results. On their own site.\nCould quality results be found this way? Searching for \"How to upgrade Ubuntu\" will probably only turn up results from a couple of sources. It's not feasible to propagate the search to hundreds of sites; maybe only five or ten at most.\nOf course SEO would be completely powerless to affect results, so that's pretty cool.\nThe cool thing about a search engine like this is that one could optionally do all the queries on the client side with JavaScript and thereby both saving resources on the server and keeping the user's search history from it.\nHmmm. Maybe I should just try this.\nEDIT:\nAfter looking around more I've concluded that too few pages have an API for this project to be viable. That's too bad.\n\n-- CC0 Bj√∂rn W√§rmedal\n\n","length":1771,"excerpt":"üçµÔ∏è","byline":null,"dir":null,"siteName":null,"lang":null},"finalizedMeta":{"title":"Providing Meaningful Search Results Without Own Index?\n - Bj√∂rn W√§rmedal","description":"üçµÔ∏è","author":false,"creator":"","publisher":false,"date":"2022-07-07T18:58:09.163Z","topics":[]},"jsonLd":{"@type":false,"headline":false,"description":false,"image":[],"mainEntityOfPage":{"@type":false,"@id":false},"datePublished":false,"dateModified":false,"isAccessibleForFree":false,"isPartOf":{"@type":[],"name":false,"productID":false},"discussionUrl":false,"license":false,"author":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false},"publisher":{"@type":false,"name":false,"description":false,"sameAs":false,"logo":{"@type":false,"url":false},"publishingPrinciples":false},"editor":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false}},"twitterObj":false,"status":200,"metadata":{"author":false,"title":"Providing Meaningful Search Results Without Own Index?\n - Bj√∂rn W√§rmedal","description":false,"canonical":"https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","keywords":[],"image":false,"firstParagraph":"üçµÔ∏è"},"dublinCore":{},"opengraph":{"title":false,"description":false,"url":false,"site_name":false,"locale":false,"type":false,"typeObject":{"published_time":false,"modified_time":false,"author":false,"publisher":false,"section":false,"tag":[]},"image":false},"twitter":{"site":false,"description":false,"card":false,"creator":false,"title":false,"image":false},"archivedData":{"link":"https://web.archive.org/web/20220707185814/https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html","wayback":"https://web.archive.org/web/20220707185814/https://warmedal.se/~bjorn/posts/2022-07-02-providing-meaningful-search-results-without-own-index.html"}}}