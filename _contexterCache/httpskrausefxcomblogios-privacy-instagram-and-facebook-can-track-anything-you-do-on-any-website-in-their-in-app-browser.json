{"initialLink":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","sanitizedLink":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","finalLink":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","htmlEmbed":"<script>window.contexterSetup=window.contexterSetup||function(){window.contexterSetupComplete=!0;class ContexterLink extends HTMLAnchorElement{constructor(){super()}connectedCallback(){this.setAttribute(\"target\",\"_blank\")}}customElements.define(\"contexter-link\",ContexterLink,{extends:\"a\"}),customElements.define(\"contexter-inner\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__inner\"}}),customElements.define(\"contexter-thumbnail\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__thumbnail\"}}),customElements.define(\"contexter-byline\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__byline\"}}),customElements.define(\"contexter-keywordset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__keywordset\"}}),customElements.define(\"contexter-linkset\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__linkset\"}}),customElements.define(\"contexter-meta\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"contexter-box__meta\"}}),customElements.define(\"contexter-summary\",class extends HTMLElement{constructor(){super()}attributeChangedCallback(name,oldValue,newValue){}connectedCallback(){this.className=\"p-summary entry-summary\"}}),customElements.define(\"contexter-box-head\",class extends HTMLElement{constructor(){super()}connectedCallback(){this.className=\"contexter-box__head\"}}),customElements.define(\"contexter-box-inner\",class extends HTMLElement{constructor(){super()}connectedCallback(){}});class ContexterBox extends HTMLElement{constructor(){super(),this.first=!0,this.shadow=this.attachShadow({mode:\"open\"})}connectedCallback(){if(this.first){this.first=!1;var style=document.createElement(\"style\"),lightDomStyle=(style.innerHTML=`:host {--background: #f5f6f7;--border: darkblue;--blue: #0000ee;--font-color: black;--inner-border: black;font-family: Franklin,Arial,Helvetica,sans-serif;font-size: 14px;background: var(--background);width: 600px;color: var(--font-color);min-height: 90px;display: block;padding: 8px;border: 1px solid var(--border);cursor: pointer;box-sizing: border-box;margin: 6px;contain: content;margin: 6px auto;}// can only select top-level nodes with slotted::slotted(*) {max-width: 100%;display:block;}::slotted([slot=thumbnail]) {max-width: 100%;display:block;}::slotted([slot=header]) {width: 100%;font-size: 1.25rem;font-weight: bold;display:block;margin-bottom: 6px;}::slotted([slot=author]) {max-width: 50%;font-size: 12px;display:inline-block;float: left;}::slotted([slot=time]) {max-width: 50%;font-size: 12px;display:inline-block;float: right;}::slotted([slot=summary]) {width: 100%;margin-top: 6px;padding: 10px 2px;border-top: 1px solid var(--inner-border);font-size: 15px;display:inline-block;margin-bottom: 6px;}contexter-meta {height: auto;margin-bottom: 4px;width: 100%;display: grid;position: relative;min-height: 16px;grid-template-columns: repeat(2, 1fr);}::slotted([slot=keywords]) {width: 80%;padding: 2px 4px;border-top: 1px solid var(--inner-border);font-size: 11px;display: block;float: right;font-style: italic;text-align: right;grid-column: 2/2;grid-row: 1;align-self: end;justify-self: end;}::slotted([slot=keywords]):empty {border-top: 0px solid var(--inner-border);}::slotted([slot=archive-link]) {font-size: 1em;display: inline;}::slotted([slot=archive-link])::after {content: \"|\";display: inline;color: var(--font-color);text-decoration: none;margin: 0 .5em;}::slotted([slot=read-link]) {font-size: 1em;display: inline;}contexter-linkset {width: 80%;padding: 2px 4px;font-size: 13px;float: left;font-weight: bold;grid-row: 1;grid-column: 1/2;align-self: end;justify-self: start;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {:host {width: 310px;}}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){:host {--background: #354150;--border: #1f2b37;--blue: #55b0ff;--font-color: #ffffff;--inner-border: #787a7c;background: var(--background);border: 1px solid var(--border)}}`,document.createElement(\"style\"));lightDomStyle.innerHTML=`contexter-box {contain: content;}contexter-box .read-link {font-weight: bold;}contexter-box a {color: #0000ee;}contexter-box img {width: 100%;border: 0;padding: 0;margin: 0;}/* Extra small devices (phones, 600px and down) */@media only screen and (max-width: 600px) {...}/* Small devices (portrait tablets and large phones, 600px and up) */@media only screen and (min-width: 600px) {...}/* Medium devices (landscape tablets, 768px and up) */@media only screen and (min-width: 768px) {...}/* Large devices (laptops/desktops, 992px and up) */@media only screen and (min-width: 992px) {...}/* Extra large devices (large laptops and desktops, 1200px and up) */@media only screen and (min-width: 1200px) {...}@media (prefers-color-scheme: dark){contexter-box a {color: #55b0ff;}}`,this.appendChild(lightDomStyle),this.shadow.appendChild(style);const innerContainer=document.createElement(\"contexter-box-inner\"),innerSlotThumbnail=(this.shadow.appendChild(innerContainer),document.createElement(\"slot\")),innerSlotHeader=(innerSlotThumbnail.name=\"thumbnail\",innerContainer.appendChild(innerSlotThumbnail),document.createElement(\"slot\")),innerSlotAuthor=(innerSlotHeader.name=\"header\",innerContainer.appendChild(innerSlotHeader),document.createElement(\"slot\")),innerSlotTime=(innerSlotAuthor.name=\"author\",innerContainer.appendChild(innerSlotAuthor),document.createElement(\"slot\")),innerSlotSummary=(innerSlotTime.name=\"time\",innerContainer.appendChild(innerSlotTime),document.createElement(\"slot\")),metaContainer=(innerSlotSummary.name=\"summary\",innerContainer.appendChild(innerSlotSummary),document.createElement(\"contexter-meta\")),innerSlotInfo=(innerContainer.appendChild(metaContainer),document.createElement(\"slot\")),linkContainer=(innerSlotInfo.name=\"keywords\",metaContainer.appendChild(innerSlotInfo),document.createElement(\"contexter-linkset\")),innerSlotArchiveLink=(metaContainer.appendChild(linkContainer),document.createElement(\"slot\")),innerSlotReadLink=(innerSlotArchiveLink.name=\"archive-link\",linkContainer.appendChild(innerSlotArchiveLink),document.createElement(\"slot\"));innerSlotReadLink.name=\"read-link\",linkContainer.appendChild(innerSlotReadLink),this.className=\"contexter-box\",this.onclick=e=>{if(!e.target.className.includes(\"read-link\")&&!e.target.className.includes(\"title-link\")){const mainLinks=this.querySelectorAll(\"a.main-link\");mainLinks[0].click()}}}}}customElements.define(\"contexter-box\",ContexterBox)},window.contexterSetupComplete||window.contexterSetup();</script><contexter-box class=\"link-card h-entry hentry\" itemscope=\"\" itemtype=\"https://schema.org/CreativeWork\"><contexter-thumbnail class=\"thumbnail\" slot=\"thumbnail\"></contexter-thumbnail><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><contexter-box-head slot=\"header\" class=\"p-name entry-title\" itemprop=\"headline\"><a is=\"contexter-link\" href=\"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser\" itemprop=\"url\">iOS Privacy: Instagram and Facebook can track anything you do on any website in their in-app browser Â· Felix Krause</a></contexter-box-head></contexter-box-head><time class=\"dt-published published\" slot=\"time\" itemprop=\"datePublished\" datetime=\"2022-08-10T21:57:56.912Z\">7/10/2022</time><contexter-summary class=\"p-summary entry-summary\" itemprop=\"abstract\" slot=\"summary\"><p>Founder of fastlane.tools</p></contexter-summary><contexter-keywordset itemprop=\"keywords\" slot=\"keywords\"></contexter-keywordset><a href=\"https://web.archive.org/web/20220810183555/https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser\" is=\"contexter-link\" target=\"_blank\" rel=\"timemap\" class=\"read-link archive-link\" itemprop=\"archivedAt\" slot=\"archive-link\">Archived</a><a is=\"contexter-link\" href=\"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser\" class=\"read-link main-link\" itemprop=\"sameAs\" slot=\"read-link\">Read</a></contexter-box>","linkId":"8772b1fffdbeef30524c02e5ccd7dc57df089db7","data":{"originalLink":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","sanitizedLink":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","canonical":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","htmlText":"<!DOCTYPE html>\n<html lang=\"en\">\n\n  <head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  <title>\n    \n      iOS Privacy: Instagram and Facebook can track anything you do on any website in their in-app browser &middot; Felix Krause\n    \n  </title>\n  \n  <link rel=\"stylesheet\" href=\"/assets/main.css\">\n  <link rel=\"alternate\" type=\"application/rss+xml\" title=\"Felix Krause\" href=\"/feed.xml\">\n  \n</head>\n\n\n  <body>\n\n    <header class=\"site-header\" role=\"banner\">\n\n    <div class=\"wrapper\">\n        <a class=\"site-title\" href=\"/\">Felix Krause</a>\n\n        <nav class=\"site-nav\">\n            <input type=\"checkbox\" id=\"nav-trigger\" class=\"nav-trigger\" />\n            <label for=\"nav-trigger\">\n        <span class=\"menu-icon\">\n          <svg viewBox=\"0 0 18 15\" width=\"18px\" height=\"15px\">\n            <path fill=\"#424242\" d=\"M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.031C17.335,0,18,0.665,18,1.484L18,1.484z\"/>\n            <path fill=\"#424242\" d=\"M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0c0-0.82,0.665-1.484,1.484-1.484 h15.031C17.335,6.031,18,6.696,18,7.516L18,7.516z\"/>\n            <path fill=\"#424242\" d=\"M18,13.516C18,14.335,17.335,15,16.516,15H1.484C0.665,15,0,14.335,0,13.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.031C17.335,12.031,18,12.696,18,13.516L18,13.516z\"/>\n          </svg>\n        </span>\n      </label>\n\n            <div class=\"trigger\">\n                <a href=\"/\" class=\"page-link active\">Blog</a>\n                <a href=\"/privacy\" class=\"page-link \">Privacy</a>\n                <a href=\"/projects\" class=\"page-link \">Projects</a>\n                <a href=\"/archive\" class=\"page-link \">Archive</a>\n                <a href=\"/about\" class=\"page-link \">About</a>\n            </div>\n        </nav>\n    </div>\n</header>\n\n    <main class=\"page-content\" aria-label=\"Content\">\n      <div class=\"wrapper\">\n        <div id=\"sidebar\">\n    <h1 style=\"font-size: 21px;\">Felix Krause</h1>\n    <p>Founder of <a href=\"https://fastlane.tools\" target=\"_blank\">fastlane.tools</a></p>\n\n    <div id=\"storyViewer\">\n    <div id=\"storyViewerDimmedBackground\" onclick=\"dismissStories()\"></div>\n    <div id=\"storyContent\">\n        <div id=\"storyHeader\">\n            <img id=\"storyHeaderProfilePicture\" onclick=\"window.open('https://instagram.com/krausefx', '_blank')\" />\n            <p id=\"storyUserlink\"><a href=\"https://instagram.com/krausefx\" target=\"_blank\">KrauseFx</a></p>\n            <p id=\"storyTimestamp\"></p>\n            <p id=\"poweredByInstapipe\"><a href=\"https://instapipe.net\" target=\"_blank\">instapipe.net</a></p>\n        </div>\n        <div id=\"storyProgressBar\"></div>\n        <div id=\"storyBackButton\" class=\"storyButton\" onclick=\"userDidClickPreviousStory()\">\n            &#x3C; </div>\n        <div id=\"storyNextButton\" class=\"storyButton\" onclick=\"userDidClickNextStory()\">\n            &#x3E;\n        </div>\n\n        <video autoplay playsinline muted id=\"storyVideoViewer\"></video>\n        <div id=\"storyPhotoViewer\" onclick=\"userDidClickNextStory()\">\n        </div>\n    </div>\n    <img src=\"\" id=\"fakeContentToPreloadImages\" />\n</div>\n\n<script type='text/javascript'>\n    let host = \"https://instapipe.net/\"\n    let userId = \"17841401712160068\"\n\n    var storiesToShow = null;\n    var timeOutForPhotos = 4.0;\n    var storyProgressSpacing = 5;\n    var progressPadding = 2;\n    var progressBars = null;\n    var storiesContent = null;\n\n    var nextStoryTimeout = null;\n    var currentIndex = -1;\n\n    function preloadStoriesIndex() {\n        var url = host + \"stories.json?user_id=\" + userId;\n\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.onreadystatechange = function() {\n            if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {\n                storiesContent = JSON.parse(xmlHttp.responseText)\n                if (storiesContent.length > 0) {\n                    document.getElementById(\"story-available\").classList.remove(\"story-not-available\");\n\n                    // preload the first story if it's a picture\n                    if (!storiesContent[0][\"is_video\"]) {\n                        document.getElementById(\"fakeContentToPreloadImages\").src = storiesContent[0][\"signed_url\"];\n                    }\n                }\n            }\n        };\n\n        xmlHttp.open(\"GET\", url, true); // true = asynchronous \n        xmlHttp.send(null);\n    }\n\n    function showStories() {\n        if (storiesContent == null || storiesContent.length == 0) {\n            return;\n        }\n\n        // Copy the profile picture URL to the story header, to only have to define it once\n        // we only do that once everything is loaded, as depending on the website\n        // the image node might not be acccessible yet\n        let profileImageURL = document.getElementById(\"storyProfilePicture\").src\n        document.getElementById(\"storyHeaderProfilePicture\").src = profileImageURL;\n\n        storiesToShow = []\n        progressBars = []\n\n        document.getElementById(\"storyViewer\").style.display = \"block\"\n\n        for (let storyIndex in storiesContent) {\n            let currentStory = storiesContent[storyIndex]\n            storiesToShow.push(currentStory)\n        }\n\n        for (let currentStoryIndex in storiesToShow) {\n            let currentStory = storiesToShow[currentStoryIndex]\n\n            // Append the progress items\n            var progressBarBackground = document.createElement(\"div\")\n            progressBarBackground.className = \"storyProgressBarItemBg\"\n            progressBarBackground.style.width = \"calc(\" + (1.0 / storiesToShow.length) * 100 + \"%\" + \" - \" + progressPadding * 2 + \"px)\"\n            progressBarBackground.style.marginRight = progressPadding + \"px\"\n            progressBarBackground.style.marginLeft = progressPadding + \"px\"\n            document.getElementById(\"storyProgressBar\").appendChild(progressBarBackground)\n\n            var progressBarForeground = document.createElement(\"div\")\n            progressBarForeground.style.width = \"0%\"\n            progressBarForeground.className = \"storyProgressBarItemFg\"\n            progressBarBackground.appendChild(progressBarForeground)\n\n            progressBars.push(progressBarForeground)\n        }\n\n        currentIndex = 0\n        renderCurrentStory()\n\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.onreadystatechange = function() {}\n        xmlHttp.open(\"GET\", host + \"didOpenStories?user_id=17841401712160068\", true); // true = asynchronous \n        xmlHttp.send(null);\n    }\n\n    function renderCurrentStory() {\n        currentStory = storiesToShow[currentIndex]\n\n        for (let index in progressBars) {\n            let currentProgressBar = progressBars[index]\n            if (currentIndex > index) {\n                currentProgressBar.style.width = \"100%\"\n            } else {\n                currentProgressBar.style.width = \"0%\"\n            }\n        }\n\n        // Show image/video\n        let videoViewer = document.getElementById(\"storyVideoViewer\")\n        let photoViewer = document.getElementById(\"storyPhotoViewer\")\n        let progressBarContent = progressBars[currentIndex]\n\n        document.getElementById(\"storyTimestamp\").textContent = currentStory[\"formatted_time_diff\"]\n\n        if (currentStory[\"is_video\"]) {\n            videoViewer.src = currentStory[\"signed_url\"]\n            videoViewer.style.display = \"block\"\n            videoViewer.onended = function() {\n                if (currentIndex < storiesToShow.length - 1) {\n                    currentIndex++;\n                    renderCurrentStory();\n                } else {\n                    dismissStories();\n                }\n            };\n            let videoUpdatedDuration = function() {\n                // this is triggered when the video file was loaded\n                // videos have dynamic length\n                animateProgressBar(progressBarContent, videoViewer.duration)\n                videoViewer.removeEventListener(\"durationchange\", videoUpdatedDuration)\n            }\n            videoViewer.addEventListener(\"durationchange\", videoUpdatedDuration)\n            videoViewer.load()\n            videoViewer.play()\n            photoViewer.style.display = \"none\"\n        } else {\n            photoViewer.style.backgroundImage = \"url('\" + currentStory[\"signed_url\"] + \"')\"\n            videoViewer.style.display = \"none\"\n            photoViewer.style.display = \"block\"\n            animateProgressBar(progressBarContent, timeOutForPhotos) // photos are always x seconds\n\n            // Advance to next story after X seconds\n            nextStoryTimeout = setTimeout(function() {\n                if (currentIndex < storiesToShow.length - 1) {\n                    currentIndex++;\n                    renderCurrentStory();\n                } else {\n                    dismissStories();\n                }\n            }, timeOutForPhotos * 1000)\n        }\n\n        // Trigger the next one\n        if (currentIndex < storiesToShow.length - 1 && !storiesToShow[currentIndex + 1][\"is_video\"]) {\n            setTimeout(function() {\n                // Poor person's pre-loading of images, with a slight delay\n                document.getElementById(\"fakeContentToPreloadImages\").src = storiesToShow[currentIndex + 1][\"signed_url\"]\n            }, timeOutForPhotos / 3.0 * 1000)\n        }\n    }\n\n    function animateProgressBar(progressBar, duration) {\n        progressBar.style.animationName = \"storyViewProgress\";\n        progressBar.style.animationDuration = duration + \"s\";\n    }\n\n    function userDidClickPreviousStory() {\n        if (currentIndex > 0) {\n            stopAllAnimations()\n            currentIndex--;\n            renderCurrentStory();\n        } else {\n            dismissStories();\n        }\n    }\n\n    function userDidClickNextStory() {\n        if (currentIndex < storiesToShow.length - 1) {\n            stopAllAnimations()\n            currentIndex++;\n            renderCurrentStory();\n        } else {\n            dismissStories();\n        }\n    }\n\n    function stopAllAnimations() {\n        clearTimeout(nextStoryTimeout)\n        document.getElementById(\"storyVideoViewer\").onended = null\n\n        for (let index in progressBars) {\n            let currentProgressBar = progressBars[index]\n            currentProgressBar.style.animationName = null\n        }\n    }\n\n    function dismissStories() {\n        document.getElementById(\"storyViewer\").style.display = \"none\"\n        document.getElementById(\"storyProgressBar\").innerHTML = \"\"\n        stopAllAnimations()\n    }\n\n    window.addEventListener(\"keyup\", function(e) {\n        if (e.keyCode == 27) { // ESC\n            dismissStories()\n            return true;\n        }\n        if (e.keyCode == 37) { // Left\n            userDidClickPreviousStory();\n        }\n        if (e.keyCode == 39) { // Right\n            userDidClickNextStory();\n        }\n    }, false);\n\n    preloadStoriesIndex();\n</script>\n<style type='text/css'>\n    #storyProfilePicture {\n        width: 128px;\n        height: 128px;\n        border-radius: 70px;\n        margin-left: 3px;\n        margin-top: 3px;\n        cursor: pointer;\n        border: 4px solid white;\n    }\n    \n    #story-available {\n        background-image: linear-gradient(rgb(186, 62, 138), #fba051);\n        height: 142px;\n        width: 142px;\n        z-index: -10;\n        border-radius: 70px;\n        margin-bottom: 15px;\n    }\n    \n    #story-available.story-not-available {\n        background-image: none !important;\n    }\n    \n    #story-available.story-not-available>img {\n        cursor: default !important;\n    }\n    \n    #storyViewer {\n        height: 100%;\n        width: 100%;\n        position: fixed;\n        top: 0;\n        left: 0;\n        z-index: 100;\n        text-align: center;\n        display: none;\n        font-family: 'Helvetica Neue', sans-serif;\n        font-weight: normal;\n    }\n    \n    #storyViewer>#storyViewerDimmedBackground {\n        /* This is a separate div to allow onclick events */\n        background-color: rgba(0, 0, 0, 0.8);\n        height: 100%;\n        width: 100%;\n        z-index: -1;\n        position: absolute;\n    }\n    \n    #storyViewer p {\n        color: #686868;\n        font-size: 20px;\n        line-height: 24px;\n        margin: 0 0 24px;\n        text-align: center;\n        text-justify: inter-word;\n    }\n    \n    #storyViewer>#storyContent {\n        width: 512px;\n        max-width: 80%;\n        /* for mobile devices */\n        margin-top: 30px;\n        display: inline-block;\n        /* \n    To get the right aspect ratio, while still having a dynamic content size\n    https://stackoverflow.com/questions/1495407/maintain-the-aspect-ratio-of-a-div-with-css\n    IG content: 910px height to 512px width = ~178%\n    So the `padding-bottom` sets the height of the content\n  */\n        padding-bottom: 178%;\n    }\n    \n    #storyViewer>#storyContent>.storyButton {\n        position: fixed;\n        top: calc(910px - 450px);\n        background-color: rgba(200, 200, 200, 0.88);\n        padding: 10px;\n        color: rgba(0, 0, 0, 0.8);\n        font-weight: bolder;\n        font-size: 16px;\n        border-radius: 18px;\n        width: 20px;\n        height: 20px;\n        text-align: center;\n        cursor: pointer;\n    }\n    \n    #storyViewer>#storyContent>#storyBackButton {\n        left: 50px;\n    }\n    \n    #storyViewer>#storyContent>#storyNextButton {\n        right: 53px;\n        /* no idea where the difference comes from */\n    }\n    \n    #storyViewer>#storyContent>#storyPhotoViewer {\n        width: 100%;\n        padding-bottom: 178%;\n        /* see comment in #storyContent */\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: 50% 50%;\n    }\n    \n    #storyViewer>#storyContent>#storyVideoViewer {\n        padding-bottom: 178%;\n        /* see comment in #storyContent */\n        width: 100%;\n    }\n    \n    #storyViewer>#storyContent>#storyProgressBar {\n        width: calc(100% + 4px);\n        margin-left: -2px;\n        height: 3px;\n        margin-top: 10px;\n        margin-bottom: 10px;\n    }\n    \n    #storyViewer>#storyContent>#storyProgressBar>.storyProgressBarItemBg {\n        border-radius: 6px;\n        background-color: rgba(187, 187, 187, 0.6);\n        height: 100%;\n        display: inline-block;\n        float: left;\n    }\n    \n    .storyProgressBarItemFg {\n        background-color: #FFF;\n        height: 100%;\n        border-radius: 3px;\n        animation-timing-function: linear;\n    }\n    \n    #fakeContentToPreloadImages {\n        height: 0;\n        width: 0;\n        opacity: 0;\n    }\n    \n    @keyframes storyViewProgress {\n        from {\n            width: 0%;\n        }\n        to {\n            width: 100%;\n        }\n    }\n    /* Story header */\n    \n    #storyHeader {\n        height: 50px;\n        text-align: left;\n    }\n    \n    #storyHeader>#storyHeaderProfilePicture {\n        height: 38px;\n        width: 38px;\n        border-radius: 19px;\n        cursor: pointer;\n        margin-top: 7px;\n        display: block-inline;\n    }\n    \n    #storyHeader>#storyUserlink {\n        display: block-inline;\n        margin-left: 50px;\n        text-align: left;\n        margin-top: -40px;\n        /* hacky */\n        padding-top: 0;\n        font-size: 20px;\n    }\n    \n    #storyHeader>#storyUserlink>a {\n        color: white !important;\n        text-decoration: none;\n    }\n    \n    #storyHeader>#storyTimestamp {\n        color: #777;\n        display: block-inline;\n        margin-left: 50px;\n        text-align: left;\n        margin-top: -28px;\n        padding-top: 0;\n        font-size: 16px;\n    }\n    \n    #storyHeader>#poweredByInstapipe {\n        display: block-inline;\n        margin-left: 150px;\n        text-align: right;\n        margin-top: -50px;\n        /* hacky */\n        padding-top: 0;\n        font-size: 16px;\n    }\n    \n    #storyHeader>#poweredByInstapipe>a {\n        color: #999 !important;\n        text-decoration: none;\n    }\n</style>\n\n    <div id=\"story-available\" class=\"story-not-available\">\n        <img src=\"/assets/FelixKrauseCropped.jpg\" id=\"storyProfilePicture\" onclick=\"showStories()\" />\n    </div>\n\n    <p><a href=\"/about\">More about me</a></p>\n\n    <!-- Social links -->\n    <ul class=\"social-media-list\" style=\"margin-top: 20px; margin-bottom: 30px;\">\n        <li>\n            <a href=\"https://github.com/KrauseFx\" target=\"_blank\"><span class=\"icon icon--github\"><svg viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\"><path fill=\"#828282\" d=\"M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z\"/></svg>\n</span><span class=\"username\">KrauseFx</span></a>\n\n        </li>\n        <li>\n            <a href=\"https://twitter.com/KrauseFx\" target=\"_blank\"><span class=\"icon icon--twitter\"><svg viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\"><path fill=\"#828282\" d=\"M15.969,3.058c-0.586,0.26-1.217,0.436-1.878,0.515c0.675-0.405,1.194-1.045,1.438-1.809c-0.632,0.375-1.332,0.647-2.076,0.793c-0.596-0.636-1.446-1.033-2.387-1.033c-1.806,0-3.27,1.464-3.27,3.27 c0,0.256,0.029,0.506,0.085,0.745C5.163,5.404,2.753,4.102,1.14,2.124C0.859,2.607,0.698,3.168,0.698,3.767 c0,1.134,0.577,2.135,1.455,2.722C1.616,6.472,1.112,6.325,0.671,6.08c0,0.014,0,0.027,0,0.041c0,1.584,1.127,2.906,2.623,3.206 C3.02,9.402,2.731,9.442,2.433,9.442c-0.211,0-0.416-0.021-0.615-0.059c0.416,1.299,1.624,2.245,3.055,2.271 c-1.119,0.877-2.529,1.4-4.061,1.4c-0.264,0-0.524-0.015-0.78-0.046c1.447,0.928,3.166,1.469,5.013,1.469 c6.015,0,9.304-4.983,9.304-9.304c0-0.142-0.003-0.283-0.009-0.423C14.976,4.29,15.531,3.714,15.969,3.058z\"/></svg>\n</span><span class=\"username\">KrauseFx</span></a>\n\n        </li>\n        <li>\n            <a href=\"https://instagram.com/KrauseFx\" target=\"_blank\"><span class=\"icon icon--instagram\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\"/></svg>\n</span><span class=\"username\">KrauseFx</span></a>\n\n        </li>\n        <li>\n            <a href=\"https://www.linkedin.com/in/KrauseFx\"><span class=\"icon icon--linked\"><svg width=\"16px\" height=\"16px\" viewBox=\"0 0 430.117 430.117\" xml:space=\"preserve\"><path id=\"LinkedIn\" fill=\"#828282\" d=\"M430.117,261.543V420.56h-92.188V272.193c0-37.271-13.334-62.707-46.703-62.707 c-25.473,0-40.632,17.142-47.301,33.724c-2.432,5.928-3.058,14.179-3.058,22.477V420.56h-92.219c0,0,1.242-251.285,0-277.32h92.21 v39.309c-0.187,0.294-0.43,0.611-0.606,0.896h0.606v-0.896c12.251-18.869,34.13-45.824,83.102-45.824 C384.633,136.724,430.117,176.361,430.117,261.543z M52.183,9.558C20.635,9.558,0,30.251,0,57.463 c0,26.619,20.038,47.94,50.959,47.94h0.616c32.159,0,52.159-21.317,52.159-47.94C103.128,30.251,83.734,9.558,52.183,9.558z M5.477,420.56h92.184v-277.32H5.477V420.56z\"/></svg>\n</span><span class=\"username\">KrauseFx</span></a>\n\n        </li>\n    </ul>\n\n    <hr />\n\n    <a href=\"https://howisFelix.today\" target=\"_blank\" id=\"howisfelix-today\">\n        <div style=\"width: 22px; display: inline-block; vertical-align: middle; padding-right: 5px;\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#828282\" stroke-width=\"2\">\n  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7\" />\n</svg>\n        </div>\n        <span class=\"username\">howisFelix.today?</span>\n    </a>\n\n    <hr /> <p class=\"subscribe-newsletter\">\n  Want to be the first to hear about more privacy and mobile related essays?\n</p>\n\n<form class=\"subscribe-form\" action=\"https://krausefx.us10.list-manage.com/subscribe/post?u=a84ca3495977afb89bf2b98fb&amp;id=d9610c8987\" method=\"post\" target=\"popupwindow\" onsubmit=\"window.open('https://krausefx.us10.list-manage.com/subscribe/post?u=a84ca3495977afb89bf2b98fb', 'popupwindow', 'scrollbars=yes,width=600,height=620');return true\">\n  <label for=\"tlemail\"></label>\n  <input type=\"text\" placeholder=\"Email Address\" name=\"EMAIL\" id=\"tlemail\">\n  <input type=\"hidden\" value=\"1\" name=\"embed\">\n  <button type=\"submit\" name=\"subscribe\">\n    Subscribe\n  </button>\n</form>\n\n</div>\n\n        <article class=\"post\" itemscope itemtype=\"http://schema.org/BlogPosting\">\n  <header class=\"post-header\">\n    <h1 class=\"post-title\" itemprop=\"name headline\"><a href=\"/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser\">iOS Privacy: Instagram and Facebook can track anything you do on any website in their in-app browser</a></h1>\n    <p class=\"post-meta\">\n      <time datetime=\"2022-08-10T00:00:00+00:00\" itemprop=\"datePublished\">\n        \n        Aug 10, 2022\n      </time> &nbsp; | &nbsp; \n      <a href=\"https://github.com/KrauseFx/krausefx.com/edit/master/_posts/2022-08-10-ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser.md\" target=\"_blank\" class=\"forkButton\">\n  <svg viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\"><path fill=\"#828282\" d=\"M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z\"/></svg>\n \n  Edit on GitHub\n</a>\n  </header>\n\n  <div class=\"post-content\" itemprop=\"articleBody\">\n    <div id=\"instagram-framed-top\">\n  <a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" target=\"_blank\">\n    <img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" style=\"width: 250px\" alt=\"An iPhone screenshot, showing a website, rendering what commands got executed by the Instagram app in their in-app browser: \n      Detected JavaScript Events:\n        1.\n        document. addEventListener ('selectionchange'\n        2.\n        function ()\n        {\n        window.webkit.messageHandlers.fb getSelecti\n        onScriptMessageHandler.postMessage(getSelec\n        tedText)):\n        3. }\n        4.\n        document. getElementById('iab-pcm-sdk')\n        5.\n        document.createElement ('script')\n        6.\n        FakeScriptobj.src\n        'https://connect.facebook.net/en US/pcm.is'\n        7. document. getElementsByTagName ('script')\n        8.\n        TagObjectArr[0]\n        9.\n        TagObjectArr[x].parentNode\n        10.\n        TagobjectArr[x].parentNode.insertBefore\n        11.\n        document.getElementsByTagName('iframe')\" />\n  </a>\n</div>\n\n<p>The iOS Instagram and Facebook app render all third party links and ads within their app using a custom in-app browser. This <a href=\"https://krausefx.com/blog/follow-user\">causes various risks for the user</a>, with the host app being able to track every single interaction with external websites, from all form inputs like passwords and addresses, to every single tap.</p>\n\n<div style=\"border-left: 2px solid #00558d; padding-left: 20px; padding: 10px; background-color: rgba(0, 150, 200, 0.1);\">\n  <b>Note:</b> To keep this post simple, I'll use \"Instagram\" instead of \"Meta\" or \"Facebook\"\n</div>\n\n<h3 id=\"what-does-instagram-do\">What does Instagram do?</h3>\n\n<ul>\n  <li>Links to external websites are rendered inside the Instagram app, instead of using the built-in Safari.</li>\n  <li>This allows Instagram to monitor everything happening on external websites, without the consent from the user, nor the website provider.</li>\n  <li>The Instagram app injects <a href=\"https://developers.facebook.com/docs/meta-pixel\">their tracking code</a> into every website shown, including when clicking on ads, enabling them monitor all user interactions, like every button &amp; link tapped, text selections, screenshots, as well as any form inputs, like passwords, addresses and credit card numbers.</li>\n</ul>\n\n<h3 id=\"why-is-this-a-big-deal\">Why is this a big deal?</h3>\n\n<ul>\n  <li>Apple actively works against this kind of cross-host tracking:\n    <ul>\n      <li>As of iOS 14.5 <a href=\"https://support.apple.com/en-us/HT212025\">App Tracking Transparency puts the user in control</a>: Apps need to get the userâs permission before tracking their data across apps owned by other companies.</li>\n      <li>Safari already <a href=\"https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/\">blocks third party cookies by default</a></li>\n    </ul>\n  </li>\n  <li>Google Chrome is <a href=\"https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html\">soon phasing out third party cookies</a></li>\n  <li>Firefox just announced <a href=\"https://blog.mozilla.org/en/products/firefox/firefox-rolls-out-total-cookie-protection-by-default-to-all-users-worldwide/\">Total Cookie Protection</a> by default to prevent any cross-page tracking</li>\n  <li>Some ISPs <a href=\"https://www.infoworld.com/article/2925839/code-injection-new-low-isps.html\">used to inject their own tracking/ad code into all websites</a>, however they could only do it for unencrypted pages. With the <a href=\"https://transparencyreport.google.com/https/overview\">rise of HTTPs by default</a>, this isnât an option any more. The approach the Instagram &amp; Facebook app uses here works for any website, no matter if itâs encrypted or not.</li>\n</ul>\n\n<p>Instagram is purposely working around the App Tracking Transparency permission system, which was designed to prevent this exact type of data collection. After its introduction, <i>Meta</i> announced:</p>\n\n<blockquote>\n  <p>Appleâs simple iPhone alert is <strong>costing Facebook $10 billion a year</strong></p>\n</blockquote>\n\n<blockquote>\n  <p>Facebook complained that Appleâs App Tracking Transparency favors companies like Google because App Tracking Transparency âcarves out browsers from the tracking prompts Apple requires for apps.â</p>\n</blockquote>\n\n<blockquote>\n  <p>Websites you visit on iOS donât trigger tracking prompts because the anti-tracking features are built in.</p>\n</blockquote>\n\n<p>â <a href=\"https://daringfireball.net/linked/2022/02/03/facebook-apple-browser-carve-out\">Daring Fireball</a> &amp; <a href=\"https://www.macworld.com/article/611551/facebook-app-tracking-transparency-iphone-quarterly-results.html\">MacWorld</a></p>\n\n<p>With 1 Billion active Instagram users, the amount of data Instagram can collect by injecting the tracking code into every third party website opened from the Instagram &amp; Facebook app is a staggering amount.</p>\n\n<p>With web browsers and iOS adding more and more privacy controls into the userâs hands, it becomes clear why Instagram is interested in monitoring all web traffic of external websites.</p>\n\n<blockquote>\n  <p>Facebook bombarded its users with messages begging them to turn tracking back on. It threatened an antitrust suit against Apple. It got small businesses to defend user-tracking, claiming that when a giant corporation spies on billions of people, thatâs a form of small business development.</p>\n</blockquote>\n\n<p>â <a href=\"https://www.eff.org/deeplinks/2022/06/facebook-says-apple-too-powerful-theyre-right\">EFF - Facebook Says Apple is Too Powerful. Theyâre Right.</a></p>\n\n<h2 id=\"faqs-for-non-tech-readers\">FAQs for non-tech readers</h2>\n\n<ul>\n  <li><strong>Can Instagram/Facebook read everything I do online?</strong> No! Instagram is only able to read and watch your online activities when you open a link or ad from within their apps.</li>\n  <li><strong>Does Facebook actually steal my passwords, address and credit card numbers?</strong> No! I didnât prove the exact data Instagram is tracking, but wanted to showcase the kind of data they <em>could</em> get without you knowing. As shown in the past, if itâs possible for a company to get access to data for free, without asking the user for permission, <a href=\"https://twitter.com/steipete/status/1025024813889478656?lang=en\">they will track it</a>.</li>\n  <li><strong>How can I protect myself?</strong> For full details <a href=\"#how-to-protect-yourself-as-a-user\">scroll down to the end of the article</a>. Summary: Whenever you open a link from Instagram (or Facebook or Messenger), make sure to click the dots in the corner to open the page in Safari instead.</li>\n  <li><strong>Is Instagram doing this on purpose?</strong> I canât say how the decisions were made internally. All I can say is that building your own in-app browser takes a non-trivial time to program and maintain, significantly more than just using the privacy and user-friendly alternative thatâs already been built into the iPhone for the past 7 years.</li>\n</ul>\n\n<hr />\n\n<h3 id=\"meta-pixel\">Meta Pixel</h3>\n\n<p>The external JavaScript file the Instagram app injects (<a href=\"https://connect.facebook.net/en_US/pcm.js\">connect.facebook.net/en_US/pcm.js</a>) is the Meta Pixel, as well as some code to build a bridge to communicate with the host app. This is not just a pixel/image, but actual JavaScript code that gets executed:</p>\n\n<blockquote>\n  <p>The Meta Pixel is a snippet of JavaScript code that <strong>allows you to track visitor activity on your website</strong>. It works by loading a small library of functions which you can use whenever a site visitor takes an action that you want to track [â¦]</p>\n\n  <p>The Meta Pixel can collect the following data:</p>\n  <ul>\n    <li>[â¦]</li>\n    <li>Button Click Data â Includes any buttons clicked by site visitors, the labels of those buttons and any pages visited as a result of the button clicks.</li>\n    <li>Form Field Names â Includes website field names like email, address, quantity, etc., for when you purchase a product or service. We donât capture field values unless you include them as part of Advanced Matching or optional values.</li>\n  </ul>\n</blockquote>\n\n<p>â <a href=\"https://developers.facebook.com/docs/meta-pixel\">developers.facebook.com/docs/meta-pixel</a> <small>(June 2022)</small></p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">\"The Meta Pixel allows you to track visitor activity on your website\"</code> - This is the problem: Itâs perfectly okay for a website provider to decide to implement the Meta pixel to track visitor activity. However in this case, the website operator <strong>did not</strong> consent to having the Meta Pixel installed. On top of that, the <strong>website provider doesnât even have a way to opt-out</strong>.</p>\n\n<h3 id=\"disclaimer\">Disclaimer</h3>\n\n<p>I donât have a list of precise data Instagram sends back home. I do have proof that the Instagram and Facebook app actively run JavaScript commands to inject an additional JS SDK without the userâs consent, as well as tracking the userâs text selections. If Instagram is doing this already, they could also inject any other JS code. The Instagram app itself is well protected against human-in-the-middle attacks, and only by modifying the Android binary to remove certificate pinning and running it in a simulator, I was able to inspect some of its web traffic.</p>\n\n<p><a href=\"https://krausefx.com/assets/posts/injecting-code/proxyman-android-details-3.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/proxyman-android-details-3.png\" /></a></p>\n\n<p>Even then, most of the actual data had another layer of encryption/compression. It is clear that they really donât want you to investigate what kind of data is sent back to the API. I have decided not to spend more time on this.</p>\n\n<hr />\n\n<p>Overall the goal of this project wasnât to get a precise list of data that is sent back, but to highlight the privacy &amp; security issues that are caused by the use of in-app browsers, as well as to <strong>prove that apps like Instagram are already exploiting this loophole</strong>.</p>\n\n<p>To summarize the risks and disadvantages of having in-app browsers:</p>\n\n<ul>\n  <li><strong>Privacy &amp; Analytics:</strong> The host app can track literally everything happening on the website, every tap, input, scrolling behavior, which content gets copy &amp; pasted, as well as data shown like online purchases</li>\n  <li><strong>Stealing of user credentials, physical addresses</strong>, API keys, etc.</li>\n  <li><strong>Ads &amp; Referrals:</strong> The host app can inject advertisements into the website, or replace the ads API key to steal revenue from the host app, or replace all URLs to include your referral code (<a href=\"https://twitter.com/cryptonator1337/status/1269201480105578496\">this happened before</a>)</li>\n  <li><strong>Security:</strong> Browsers spent years optimizing the security UX of the web, like showing the HTTPs encryption status, warning the user about sketchy or unencrypted websites, and more</li>\n  <li>Injecting additional JavaScript code onto a third party website can cause issues and glitches, potentially breaking the website</li>\n  <li>The userâs browser extensions &amp; content blockers arenât available</li>\n  <li>Deep linking doesnât work well in most cases</li>\n  <li>Often no easy way to share a link via other platforms (e.g. via Email, AirDrop, etc.)</li>\n</ul>\n\n<p>Instagramâs in-app browser supports auto-fill of your address and payment information. However there is no legit reason for this to exist in the first place, with all of this already built into the operating system, or the web browser itself.</p>\n\n<h2 id=\"testing-various-metas-apps\">Testing various Metaâs apps</h2>\n\n<table class=\"hijacking-report-screenshot-table\">\n  <tr>\n    <th>Instagram iOS</th>\n    <th>Messenger iOS</th>\n  </tr>\n  <tr>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" alt=\"An iPhone screenshot, showing a website, rendering what commands got executed by the Instagram app in their in-app browser: \n      Detected JavaScript Events:\n        1.\n        document. addEventListener ('selectionchange'\n        2.\n        function ()\n        {\n        window.webkit.messageHandlers.fb getSelecti\n        onScriptMessageHandler.postMessage(getSelec\n        tedText)):\n        3. }\n        4.\n        document. getElementById('iab-pcm-sdk')\n        5.\n        document.createElement ('script')\n        6.\n        FakeScriptobj.src\n        'https://connect.facebook.net/en US/pcm.is'\n        7. document. getElementsByTagName ('script')\n        8.\n        TagObjectArr[0]\n        9.\n        TagObjectArr[x].parentNode\n        10.\n        TagobjectArr[x].parentNode.insertBefore\n        11.\n        document.getElementsByTagName('iframe')\" /></a></td>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/messenger_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/messenger_framed.png\" alt=\"The same code as the previous photo, however this time inside Facebook Messenger\" /></a></td>\n  </tr>\n</table>\n<table class=\"hijacking-report-screenshot-table\">\n  <tr>\n    <th>Facebook iOS</th>\n    <th>Instagram Android</th>\n  </tr>\n  <tr>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/facebook_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/facebook_framed.png\" alt=\"The same code as the previous photo, however this time inside the Facebook iOS app\" /></a></td>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/android_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/android_framed.png\" alt=\"The same code as the previous photo, however this time inside Android Instagram\" /></a></td>\n  </tr>\n</table>\n\n<p>WhatsApp is opening iOS Safari by default, therefore no issues.</p>\n\n<h2 id=\"how-it-works\">How it works</h2>\n\n<p>To my knowledge, there is no good way to monitor all JavaScript commands that get executed by the host iOS app (<a href=\"https://twitter.com/KrauseFx\">would love to hear if there is a better way</a>).</p>\n\n<p>I created a new, plain HTML file, with some JS code to override some of the <code class=\"language-plaintext highlighter-rouge\">document.</code> methods:</p>\n\n<div class=\"language-javascript highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">appendCommand</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">document.getElementById(\"</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">a</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">\")</span><span class=\"dl\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nx\">originalGetElementById</span><span class=\"p\">.</span><span class=\"nx\">apply</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">arguments</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>Opening that HTML file from the iOS Instagram app yielded the following:</p>\n\n<div style=\"text-align: center\">\n  <a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed_cut.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed_cut.png\" alt=\"The same code as the previous screenshots\" style=\"max-width: 310px; margin-bottom: 20px;\" /></a>\n</div>\n\n<p>Comparing this to what happens when using a normal browser, or in this case, Telegram, which uses the recommended <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a>:</p>\n\n<div style=\"text-align: center\">\n  <a href=\"https://krausefx.com/assets/posts/injecting-code/SFSafariViewController_framed_cut.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/SFSafariViewController_framed_cut.png\" style=\"max-width: 310px; margin-bottom: 20px;\" alt=\"SFSafariViewController rendering the same page, but this time no JavaScript events were tracked, and a green check mark is shown\" /></a>\n</div>\n\n<p>As you can see, a regular browser, or <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a> doesnât run any JS code. <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a> is a great way for app developers to show third party web content to the user, without them leaving your app, while still preserving the privacy and comfort for the user.</p>\n\n<h2 id=\"technical-details\">Technical Details</h2>\n\n<div style=\"text-align: center; margin-bottom: 15px;\">\n  <a href=\"https://krausefx.com/assets/posts/injecting-code/flow-chart.png\" target=\"_blank\">\n    <img src=\"https://krausefx.com/assets/posts/injecting-code/flow-chart.png\" id=\"inject-code-style\" alt=\"A simple flowchart: starting with the use of the Instagram iOS app. For 3 paths (user taps a link in DMs, user taps a link in bio, user taps a link on an ad), the flow continues to 'Instagram renders external page inside app'. It then subscribes to text selections, and checks if an SDK named 'iab-pcm-sdk' is installed. If no, the Meta tracking pixel is installed. In all cases, the Instagram app queries for a list of iFrames.\" />\n  </a>\n</div>\n\n<ul>\n  <li>Instagram adds a new event listener, to get details about every time the user selects any text on the website. This, in combination with listening to screenshots, gives Instagram full insight over what specific piece of information was selected &amp; shared</li>\n  <li>The Instagram app checks if there is an element with the ID <code class=\"language-plaintext highlighter-rouge\">iab-pcm-sdk</code>: surprisingly I found very little information about this online. Basically it seems to be a <a href=\"https://iabtechlab.com/wp-content/uploads/2021/04/Authenticated-UID-APAC-v2.0-Deck.pdf\">cross-platform tracking SDK provided by IAB Tech Lab</a>, however I donât know enough about the relationship between Instagram and <a href=\"https://iabtechlab.com/\">IAB Tech Lab</a> (e.g. <a href=\"https://twitter.com/IABTechLab/status/1519414703239438336\">this tweet</a>)</li>\n  <li>If no element with the ID <code class=\"language-plaintext highlighter-rouge\">iab-pcm-sdk</code> was found, Instagram creates a new <code class=\"language-plaintext highlighter-rouge\">script</code> element, sets its source to <a href=\"https://connect.facebook.net/en_US/pcm.js\"><code class=\"language-plaintext highlighter-rouge\">https://connect.facebook.net/en_US/pcm.js</code></a>, which is the source code for the Meta tracking pixel</li>\n  <li>It then finds the first <code class=\"language-plaintext highlighter-rouge\">script</code> element on your website to insert the Meta Pixel right before, <strong>injecting the Meta Pixel onto your website</strong></li>\n  <li>Instagram also queries for <code class=\"language-plaintext highlighter-rouge\">iframes</code> on your website, however I couldnât find any indication of what theyâre doing with it</li>\n</ul>\n\n<h3 id=\"how-to-protect-yourself-as-a-user\">How to protect yourself as a user?</h3>\n\n<div style=\"float: right; margin-left: 20px;\">\n  <a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_open_in_safari_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_open_in_safari_framed.png\" style=\"max-height: 180px; margin-top: 20px;\" alt=\"A screenshot of the Instagram iOS app when you click the 3 dots on the top right while viewing an external website, that allows people to open the page in their default browser\" /></a>\n</div>\n\n<h4 id=\"escape-the-in-app-webview\">Escape the in-app-webview</h4>\n\n<p>Most in-app browsers have a way to open the currently rendered website in Safari. As soon as you land on that screen, just use that option to escape it. If that button isnât available, you will have to copy &amp; paste the URL to open the link in the browser of your choice.</p>\n\n<h4 id=\"use-the-web-version\">Use the web version</h4>\n\n<p>Most social networks, including Instagram and Facebook, offer a decent mobile-web version, offering a similar feature set. You can use <code class=\"language-plaintext highlighter-rouge\">https://instagram.com</code> without issues in iOS Safari.</p>\n\n<h3 id=\"how-to-protect-yourself-as-a-website-provider\">How to protect yourself as a website provider?</h3>\n\n<p>Until Instagram resolves this issue (if ever), you can quite easily trick the Instagram and Facebook app to believe the tracking code is already installed. Just add the following to your HTML code:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;span id=\"iab-pcm-sdk\"&gt;&lt;/span&gt;\n&lt;span id=\"iab-autofill-sdk\"&gt;&lt;/span&gt;\n</code></pre></div></div>\n\n<p>Additionally, to prevent Instagram from tracking the userâs text selections on your website:</p>\n\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">const</span> <span class=\"nx\">originalEventListener</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span>\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span> <span class=\"o\">=</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">a</span><span class=\"p\">,</span> <span class=\"nx\">b</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">b</span><span class=\"p\">.</span><span class=\"nx\">toString</span><span class=\"p\">().</span><span class=\"nx\">indexOf</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">messageHandlers.fb_getSelection</span><span class=\"dl\">\"</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"nx\">originalEventListener</span><span class=\"p\">.</span><span class=\"nx\">apply</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">,</span> <span class=\"nx\">arguments</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div></div>\n\n<p>This will not solve the actual problem of Instagram running JavaScript code against your website, but at least no additional JS scripts will be injected, as well as less data being tracked.</p>\n\n<p>Itâs also easy for an app to detect if the current browser is the Instagram/Facebook app by checking the user agent, however I couldnât find a good way to pop out of the in-app browser automatically to open Safari instead. If you know a solution, Iâd <a href=\"https://twitter.com/KrauseFx\">love to know</a>.</p>\n\n<h2 id=\"proposals\">Proposals</h2>\n\n<h3 id=\"for-apple\">For Apple</h3>\n\n<p>Apple is doing a fantastic job building their platform with the userâs privacy in mind. One of the 4 privacy principles:</p>\n\n<blockquote>\n  <p><strong>User Transparency and Control:</strong> Making sure that users know what data is shared and how it is used, and that they can exercise control over it.</p>\n</blockquote>\n\n<p>â <a href=\"https://www.apple.com/privacy/docs/A_Day_in_the_Life_of_Your_Data.pdf\">Apple Privacy PDF</a> <small>(April 2021)</small></p>\n\n<p>At the moment of writing, there is no AppStore Review Rule that prohibits companies from building their own in-app browser to track the user, read their inputs, and inject additional ads to third party websites. However Apple is clearly recommending that to use <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a>:</p>\n\n<blockquote>\n  <p>Avoid using a web view to build a web browser. Using a web view to let people briefly access a website without leaving the context of your app is fine, but Safari is the primary way people browse the web. <strong>Attempting to replicate the functionality of Safari in your app is unnecessary and discouraged.</strong></p>\n</blockquote>\n\n<p>â <a href=\"https://developer.apple.com/design/human-interface-guidelines/components/content/web-views/\">Apple Human Interface Guidelines</a> <small>(June 2022)</small></p>\n\n<blockquote>\n  <p><strong>If your app lets users view websites from anywhere on the Internet, use the <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a> class</strong>. If your app customizes, interacts with, or controls the display of web content, use the <code class=\"language-plaintext highlighter-rouge\">WKWebView</code> class.</p>\n</blockquote>\n\n<p>â <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\">Apple SFSafariViewController docs</a> <small>(June 2022)</small></p>\n\n<p><strong>Introducing <code class=\"language-plaintext highlighter-rouge\">App-Bound Domains</code></strong></p>\n\n<p><a href=\"https://webkit.org/blog/10882/app-bound-domains/\">App-Bound Domains</a> is an excellent new <code class=\"language-plaintext highlighter-rouge\">WebKit</code> feature making it possible for developers to offer a safer in-app browsing experience when using <code class=\"language-plaintext highlighter-rouge\">WKWebView</code>. As an app developer, you can define which domains your app can access, and all web requests will be restricted to them. To disable the protection, a user would have to explicitly disable it in the iOS settings app.</p>\n\n<p>App-Bound Domains went live with iOS 14 (~1.5 years ago), however itâs only an opt-in option for developers, meaning the vast majority of iOS apps donât make use of this feature.</p>\n\n<blockquote>\n  <p>If the developers of SocialApp <strong>want a better user privacy experience</strong> they have two paths forward:</p>\n  <ul>\n    <li>Use <code class=\"language-plaintext highlighter-rouge\">SafariViewController</code> instead of <code class=\"language-plaintext highlighter-rouge\">WKWebView</code> for in-app browsing. <code class=\"language-plaintext highlighter-rouge\">SafariViewController</code> protects user data from SocialApp by loading pages outside of SocialAppâs process space. SocialApp can guarantee it is giving its users the best available user privacy experience while using SafariViewController.</li>\n    <li>Opt-in to App-Bound Domains. The additional <code class=\"language-plaintext highlighter-rouge\">WKWebView</code> restrictions from App-Bound Domains ensure that SocialApp is not able to track users using the APIs outlined above.</li>\n  </ul>\n</blockquote>\n\n<p>I highlighted the <code class=\"language-plaintext highlighter-rouge\">\"want a better user privacy experience\"</code> part, as this is the missing piece: App-Bound Domains should be a requirement for all iOS apps, since the social media apps are the ones injecting the tracking code.</p>\n\n<p>In July 2022 Apple introduced the <a href=\"https://www.apple.com/newsroom/2022/07/apple-expands-commitment-to-protect-users-from-mercenary-spyware/\">Lockdown Mode</a> to better protect people who are at high risk. Unfortunately the iOS Lockdown Mode doesnât change the way in-app web views work. I have filed a radar with Apple: <a href=\"https://openradar.appspot.com/radar?id=5500665535135744\">rdar://10735684</a>, for which Apple has responded with âThis isnât what Lockdown Mode is forâ</p>\n\n<div style=\"text-align: center; margin-bottom: 20px;\">\n  <img src=\"https://krausefx.com/assets/posts/injecting-code/apple-response.png\" style=\"max-width: 500px; border: 1px solid #ccc;\" />\n</div>\n\n<p><strong>A few immediate steps for Apple to take:</strong></p>\n\n<p>Update the App Review Rules to require the use of <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a> or <a href=\"https://webkit.org/blog/10882/app-bound-domains/\">App-Bound Domains</a> when displaying any third party websites.</p>\n\n<ul>\n  <li>There should be only a few exception (e.g. browser apps), that require two extra steps:\n    <ul>\n      <li>Request an extra entitlement to ensure itâs a valid use-case</li>\n      <li>Have the user confirm the extra permission</li>\n    </ul>\n  </li>\n  <li>First-party websites/content can still be displayed using the <code class=\"language-plaintext highlighter-rouge\">WKWebView</code> class, as they are often used for UI elements, or the app actually modifying their first party content (e.g. auto-dismissing of their own cookie banners)</li>\n</ul>\n\n<p>Iâve also submitted a radar (<a href=\"https://openradar.appspot.com/radar?id=4963695432040448\">rdar://38109139</a>) to Apple as part of my <a href=\"https://krausefx.com/blog/follow-user\">past blog post</a>.</p>\n\n<h3 id=\"for-meta\">For Meta</h3>\n\n<p>Do what Meta is already doing with WhatsApp: Stop modifying third party websites, and use Safari or <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code class=\"language-plaintext highlighter-rouge\">SFSafariViewController</code></a> for all third party websites. Itâs whatâs best for the user, and the right thing to do.</p>\n\n<p>Iâve disclosed this issue with Meta through their <a href=\"https://www.facebook.com/whitehat/profile/FelixKrause\">Bug Bounty Program</a>, where within a few hours they confirmed they were able to reproduce the âissueâ, however I havenât heard back anything else within the last 9 weeks, besides asking me to wait longer until they have a full report. Since there hasnât been any responses on my follow-up questions, nor did they stop injecting tracking code into external websites, Iâve decided to go public with this information (after giving them another 2 weeks heads-up)</p>\n\n<p>Check out my <a href=\"/privacy\">other privacy and security related publications</a>.</p>\n\n<style type=\"text/css\">\n  .hijacking-report-screenshot-table {\n    width: 98%;\n  }\n  .hijacking-report-screenshot-table th {\n    text-align: center;\n  }\n  .hijacking-report-screenshot-table td {\n    text-align: center;\n  }\n  .hijacking-report-screenshot-table img {\n    max-height: 540px;\n  }\n  #instagram-framed-top { \n    float: right;\n    margin-right: -60px;\n    margin-left: 10px;\n  }\n  #inject-code-style {\n    max-width: 450px;\n  }\n  @media screen and (max-width: 1000px) {\n    #instagram-framed-top {\n      display: none;\n    }\n    #inject-code-style {\n      max-width: 100%;\n    }\n  }\n</style>\n\n\n\n    <!-- <p style=\"margin-top: 30px\" class=\"side-projects-note\">\n  <small>Unless otherwise mentioned in the post, those projects are side projects which I work on on weekends and evenings, and are not affiliated with my work or employer.</small>\n</p>\n -->\n  </div>\n\n  <p class=\"extra-info\">\n    \n      Tags: ios, privacy, hijacking, instagram, meta, facebook, sniffing &nbsp; | &nbsp; \n    \n    <a href=\"https://github.com/KrauseFx/krausefx.com/edit/master/_posts/2022-08-10-ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser.md\" target=\"_blank\" class=\"forkButton\">\n  <svg viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\"><path fill=\"#828282\" d=\"M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z\"/></svg>\n \n  Edit on GitHub\n</a>\n  </p>\n</article>\n\n      </div>\n    </main>\n\n    <footer class=\"site-footer\">\n  <div class=\"wrapper\">\n    <div class=\"footer-col-wrapper\">\n      <div class=\"footer-col footer-col-2\">\n        <ul class=\"social-media-list\">\n          <li>\n            <a href=\"https://github.com/KrauseFx\" target=\"_blank\"><span class=\"icon icon--github\"><svg viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\"><path fill=\"#828282\" d=\"M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761 c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32 c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472 c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037 C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65 c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261 c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082 c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129 c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z\"/></svg>\n</span><span class=\"username\">KrauseFx</span></a>\n\n          </li>\n          <li>\n            <a href=\"https://twitter.com/KrauseFx\" target=\"_blank\"><span class=\"icon icon--twitter\"><svg viewBox=\"0 0 16 16\" width=\"16px\" height=\"16px\"><path fill=\"#828282\" d=\"M15.969,3.058c-0.586,0.26-1.217,0.436-1.878,0.515c0.675-0.405,1.194-1.045,1.438-1.809c-0.632,0.375-1.332,0.647-2.076,0.793c-0.596-0.636-1.446-1.033-2.387-1.033c-1.806,0-3.27,1.464-3.27,3.27 c0,0.256,0.029,0.506,0.085,0.745C5.163,5.404,2.753,4.102,1.14,2.124C0.859,2.607,0.698,3.168,0.698,3.767 c0,1.134,0.577,2.135,1.455,2.722C1.616,6.472,1.112,6.325,0.671,6.08c0,0.014,0,0.027,0,0.041c0,1.584,1.127,2.906,2.623,3.206 C3.02,9.402,2.731,9.442,2.433,9.442c-0.211,0-0.416-0.021-0.615-0.059c0.416,1.299,1.624,2.245,3.055,2.271 c-1.119,0.877-2.529,1.4-4.061,1.4c-0.264,0-0.524-0.015-0.78-0.046c1.447,0.928,3.166,1.469,5.013,1.469 c6.015,0,9.304-4.983,9.304-9.304c0-0.142-0.003-0.283-0.009-0.423C14.976,4.29,15.531,3.714,15.969,3.058z\"/></svg>\n</span><span class=\"username\">KrauseFx</span></a>\n\n          </li>\n        </ul>\n      </div>\n      <div class=\"footer-col footer-col-2\"></div>\n      <div class=\"footer-col footer-col-3\">\n        <p class=\"subscribe-newsletter\">\n  Want to be the first to hear about more privacy and mobile related essays?\n</p>\n\n<form class=\"subscribe-form\" action=\"https://krausefx.us10.list-manage.com/subscribe/post?u=a84ca3495977afb89bf2b98fb&amp;id=d9610c8987\" method=\"post\" target=\"popupwindow\" onsubmit=\"window.open('https://krausefx.us10.list-manage.com/subscribe/post?u=a84ca3495977afb89bf2b98fb', 'popupwindow', 'scrollbars=yes,width=600,height=620');return true\">\n  <label for=\"tlemail\"></label>\n  <input type=\"text\" placeholder=\"Email Address\" name=\"EMAIL\" id=\"tlemail\">\n  <input type=\"hidden\" value=\"1\" name=\"embed\">\n  <button type=\"submit\" name=\"subscribe\">\n    Subscribe\n  </button>\n</form>\n\n      </div>\n    </div>\n\n  </div>\n</footer>\n\n<script type=\"text/javascript\">\n  var links = document.links;\n  for (var i = 0, linksLength = links.length; i < linksLength; i++) {\n    if (links[i].hostname != window.location.hostname) {\n      links[i].target = '_blank';\n    } \n  }\n</script>\n\n\n  </body>\n\n</html>\n","oembed":false,"readabilityObject":{"title":"Instagram and Facebook can track anything you do on any website in their in-app browser Â· Felix Krause","content":"<div id=\"readability-page-1\" class=\"page\"><div aria-label=\"Content\">\n        \n\n        <article itemscope=\"\" itemtype=\"http://schema.org/BlogPosting\">\n  \n\n  <div itemprop=\"articleBody\">\n    <p><a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" target=\"_blank\">\n    <img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" alt=\"An iPhone screenshot, showing a website, rendering what commands got executed by the Instagram app in their in-app browser: \n      Detected JavaScript Events:\n        1.\n        document. addEventListener ('selectionchange'\n        2.\n        function ()\n        {\n        window.webkit.messageHandlers.fb getSelecti\n        onScriptMessageHandler.postMessage(getSelec\n        tedText)):\n        3. }\n        4.\n        document. getElementById('iab-pcm-sdk')\n        5.\n        document.createElement ('script')\n        6.\n        FakeScriptobj.src\n        'https://connect.facebook.net/en US/pcm.is'\n        7. document. getElementsByTagName ('script')\n        8.\n        TagObjectArr[0]\n        9.\n        TagObjectArr[x].parentNode\n        10.\n        TagobjectArr[x].parentNode.insertBefore\n        11.\n        document.getElementsByTagName('iframe')\">\n  </a>\n</p>\n\n<p>The iOS Instagram and Facebook app render all third party links and ads within their app using a custom in-app browser. This <a href=\"https://krausefx.com/blog/follow-user\">causes various risks for the user</a>, with the host app being able to track every single interaction with external websites, from all form inputs like passwords and addresses, to every single tap.</p>\n\n<p><b>Note:</b> To keep this post simple, I'll use \"Instagram\" instead of \"Meta\" or \"Facebook\"\n</p>\n\n<h3 id=\"what-does-instagram-do\">What does Instagram do?</h3>\n\n<ul>\n  <li>Links to external websites are rendered inside the Instagram app, instead of using the built-in Safari.</li>\n  <li>This allows Instagram to monitor everything happening on external websites, without the consent from the user, nor the website provider.</li>\n  <li>The Instagram app injects <a href=\"https://developers.facebook.com/docs/meta-pixel\">their tracking code</a> into every website shown, including when clicking on ads, enabling them monitor all user interactions, like every button &amp; link tapped, text selections, screenshots, as well as any form inputs, like passwords, addresses and credit card numbers.</li>\n</ul>\n\n<h3 id=\"why-is-this-a-big-deal\">Why is this a big deal?</h3>\n\n<ul>\n  <li>Apple actively works against this kind of cross-host tracking:\n    <ul>\n      <li>As of iOS 14.5 <a href=\"https://support.apple.com/en-us/HT212025\">App Tracking Transparency puts the user in control</a>: Apps need to get the userâs permission before tracking their data across apps owned by other companies.</li>\n      <li>Safari already <a href=\"https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/\">blocks third party cookies by default</a></li>\n    </ul>\n  </li>\n  <li>Google Chrome is <a href=\"https://blog.chromium.org/2020/01/building-more-private-web-path-towards.html\">soon phasing out third party cookies</a></li>\n  <li>Firefox just announced <a href=\"https://blog.mozilla.org/en/products/firefox/firefox-rolls-out-total-cookie-protection-by-default-to-all-users-worldwide/\">Total Cookie Protection</a> by default to prevent any cross-page tracking</li>\n  <li>Some ISPs <a href=\"https://www.infoworld.com/article/2925839/code-injection-new-low-isps.html\">used to inject their own tracking/ad code into all websites</a>, however they could only do it for unencrypted pages. With the <a href=\"https://transparencyreport.google.com/https/overview\">rise of HTTPs by default</a>, this isnât an option any more. The approach the Instagram &amp; Facebook app uses here works for any website, no matter if itâs encrypted or not.</li>\n</ul>\n\n<p>Instagram is purposely working around the App Tracking Transparency permission system, which was designed to prevent this exact type of data collection. After its introduction, <i>Meta</i> announced:</p>\n\n<blockquote>\n  <p>Appleâs simple iPhone alert is <strong>costing Facebook $10 billion a year</strong></p>\n</blockquote>\n\n<blockquote>\n  <p>Facebook complained that Appleâs App Tracking Transparency favors companies like Google because App Tracking Transparency âcarves out browsers from the tracking prompts Apple requires for apps.â</p>\n</blockquote>\n\n<blockquote>\n  <p>Websites you visit on iOS donât trigger tracking prompts because the anti-tracking features are built in.</p>\n</blockquote>\n\n<p>â <a href=\"https://daringfireball.net/linked/2022/02/03/facebook-apple-browser-carve-out\">Daring Fireball</a> &amp; <a href=\"https://www.macworld.com/article/611551/facebook-app-tracking-transparency-iphone-quarterly-results.html\">MacWorld</a></p>\n\n<p>With 1 Billion active Instagram users, the amount of data Instagram can collect by injecting the tracking code into every third party website opened from the Instagram &amp; Facebook app is a staggering amount.</p>\n\n<p>With web browsers and iOS adding more and more privacy controls into the userâs hands, it becomes clear why Instagram is interested in monitoring all web traffic of external websites.</p>\n\n<blockquote>\n  <p>Facebook bombarded its users with messages begging them to turn tracking back on. It threatened an antitrust suit against Apple. It got small businesses to defend user-tracking, claiming that when a giant corporation spies on billions of people, thatâs a form of small business development.</p>\n</blockquote>\n\n<p>â <a href=\"https://www.eff.org/deeplinks/2022/06/facebook-says-apple-too-powerful-theyre-right\">EFF - Facebook Says Apple is Too Powerful. Theyâre Right.</a></p>\n\n<h2 id=\"faqs-for-non-tech-readers\">FAQs for non-tech readers</h2>\n\n<ul>\n  <li><strong>Can Instagram/Facebook read everything I do online?</strong> No! Instagram is only able to read and watch your online activities when you open a link or ad from within their apps.</li>\n  <li><strong>Does Facebook actually steal my passwords, address and credit card numbers?</strong> No! I didnât prove the exact data Instagram is tracking, but wanted to showcase the kind of data they <em>could</em> get without you knowing. As shown in the past, if itâs possible for a company to get access to data for free, without asking the user for permission, <a href=\"https://twitter.com/steipete/status/1025024813889478656?lang=en\">they will track it</a>.</li>\n  <li><strong>How can I protect myself?</strong> For full details <a href=\"#how-to-protect-yourself-as-a-user\">scroll down to the end of the article</a>. Summary: Whenever you open a link from Instagram (or Facebook or Messenger), make sure to click the dots in the corner to open the page in Safari instead.</li>\n  <li><strong>Is Instagram doing this on purpose?</strong> I canât say how the decisions were made internally. All I can say is that building your own in-app browser takes a non-trivial time to program and maintain, significantly more than just using the privacy and user-friendly alternative thatâs already been built into the iPhone for the past 7 years.</li>\n</ul>\n\n<hr>\n\n<h3 id=\"meta-pixel\">Meta Pixel</h3>\n\n<p>The external JavaScript file the Instagram app injects (<a href=\"https://connect.facebook.net/en_US/pcm.js\">connect.facebook.net/en_US/pcm.js</a>) is the Meta Pixel, as well as some code to build a bridge to communicate with the host app. This is not just a pixel/image, but actual JavaScript code that gets executed:</p>\n\n<blockquote>\n  <p>The Meta Pixel is a snippet of JavaScript code that <strong>allows you to track visitor activity on your website</strong>. It works by loading a small library of functions which you can use whenever a site visitor takes an action that you want to track [â¦]</p>\n\n  <p>The Meta Pixel can collect the following data:</p>\n  <ul>\n    <li>[â¦]</li>\n    <li>Button Click Data â Includes any buttons clicked by site visitors, the labels of those buttons and any pages visited as a result of the button clicks.</li>\n    <li>Form Field Names â Includes website field names like email, address, quantity, etc., for when you purchase a product or service. We donât capture field values unless you include them as part of Advanced Matching or optional values.</li>\n  </ul>\n</blockquote>\n\n<p>â <a href=\"https://developers.facebook.com/docs/meta-pixel\">developers.facebook.com/docs/meta-pixel</a> <small>(June 2022)</small></p>\n\n<p><code>\"The Meta Pixel allows you to track visitor activity on your website\"</code> - This is the problem: Itâs perfectly okay for a website provider to decide to implement the Meta pixel to track visitor activity. However in this case, the website operator <strong>did not</strong> consent to having the Meta Pixel installed. On top of that, the <strong>website provider doesnât even have a way to opt-out</strong>.</p>\n\n<h3 id=\"disclaimer\">Disclaimer</h3>\n\n<p>I donât have a list of precise data Instagram sends back home. I do have proof that the Instagram and Facebook app actively run JavaScript commands to inject an additional JS SDK without the userâs consent, as well as tracking the userâs text selections. If Instagram is doing this already, they could also inject any other JS code. The Instagram app itself is well protected against human-in-the-middle attacks, and only by modifying the Android binary to remove certificate pinning and running it in a simulator, I was able to inspect some of its web traffic.</p>\n\n<p><a href=\"https://krausefx.com/assets/posts/injecting-code/proxyman-android-details-3.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/proxyman-android-details-3.png\"></a></p>\n\n<p>Even then, most of the actual data had another layer of encryption/compression. It is clear that they really donât want you to investigate what kind of data is sent back to the API. I have decided not to spend more time on this.</p>\n\n<hr>\n\n<p>Overall the goal of this project wasnât to get a precise list of data that is sent back, but to highlight the privacy &amp; security issues that are caused by the use of in-app browsers, as well as to <strong>prove that apps like Instagram are already exploiting this loophole</strong>.</p>\n\n<p>To summarize the risks and disadvantages of having in-app browsers:</p>\n\n<ul>\n  <li><strong>Privacy &amp; Analytics:</strong> The host app can track literally everything happening on the website, every tap, input, scrolling behavior, which content gets copy &amp; pasted, as well as data shown like online purchases</li>\n  <li><strong>Stealing of user credentials, physical addresses</strong>, API keys, etc.</li>\n  <li><strong>Ads &amp; Referrals:</strong> The host app can inject advertisements into the website, or replace the ads API key to steal revenue from the host app, or replace all URLs to include your referral code (<a href=\"https://twitter.com/cryptonator1337/status/1269201480105578496\">this happened before</a>)</li>\n  <li><strong>Security:</strong> Browsers spent years optimizing the security UX of the web, like showing the HTTPs encryption status, warning the user about sketchy or unencrypted websites, and more</li>\n  <li>Injecting additional JavaScript code onto a third party website can cause issues and glitches, potentially breaking the website</li>\n  <li>The userâs browser extensions &amp; content blockers arenât available</li>\n  <li>Deep linking doesnât work well in most cases</li>\n  <li>Often no easy way to share a link via other platforms (e.g. via Email, AirDrop, etc.)</li>\n</ul>\n\n<p>Instagramâs in-app browser supports auto-fill of your address and payment information. However there is no legit reason for this to exist in the first place, with all of this already built into the operating system, or the web browser itself.</p>\n\n\n\n<table>\n  <tbody><tr>\n    <th>Instagram iOS</th>\n    <th>Messenger iOS</th>\n  </tr>\n  <tr>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed.png\" alt=\"An iPhone screenshot, showing a website, rendering what commands got executed by the Instagram app in their in-app browser: \n      Detected JavaScript Events:\n        1.\n        document. addEventListener ('selectionchange'\n        2.\n        function ()\n        {\n        window.webkit.messageHandlers.fb getSelecti\n        onScriptMessageHandler.postMessage(getSelec\n        tedText)):\n        3. }\n        4.\n        document. getElementById('iab-pcm-sdk')\n        5.\n        document.createElement ('script')\n        6.\n        FakeScriptobj.src\n        'https://connect.facebook.net/en US/pcm.is'\n        7. document. getElementsByTagName ('script')\n        8.\n        TagObjectArr[0]\n        9.\n        TagObjectArr[x].parentNode\n        10.\n        TagobjectArr[x].parentNode.insertBefore\n        11.\n        document.getElementsByTagName('iframe')\"></a></td>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/messenger_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/messenger_framed.png\" alt=\"The same code as the previous photo, however this time inside Facebook Messenger\"></a></td>\n  </tr>\n</tbody></table>\n<table>\n  <tbody><tr>\n    <th>Facebook iOS</th>\n    <th>Instagram Android</th>\n  </tr>\n  <tr>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/facebook_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/facebook_framed.png\" alt=\"The same code as the previous photo, however this time inside the Facebook iOS app\"></a></td>\n    <td><a href=\"https://krausefx.com/assets/posts/injecting-code/android_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/android_framed.png\" alt=\"The same code as the previous photo, however this time inside Android Instagram\"></a></td>\n  </tr>\n</tbody></table>\n\n<p>WhatsApp is opening iOS Safari by default, therefore no issues.</p>\n\n<h2 id=\"how-it-works\">How it works</h2>\n\n<p>To my knowledge, there is no good way to monitor all JavaScript commands that get executed by the host iOS app (<a href=\"https://twitter.com/KrauseFx\">would love to hear if there is a better way</a>).</p>\n\n<p>I created a new, plain HTML file, with some JS code to override some of the <code>document.</code> methods:</p>\n\n<div><pre><code><span>document</span><span>.</span><span>getElementById</span> <span>=</span> <span>function</span><span>(</span><span>a</span><span>,</span> <span>b</span><span>)</span> <span>{</span>\n    <span>appendCommand</span><span>(</span><span>'</span><span>document.getElementById(\"</span><span>'</span> <span>+</span> <span>a</span> <span>+</span> <span>'</span><span>\")</span><span>'</span><span>)</span>\n    <span>return</span> <span>originalGetElementById</span><span>.</span><span>apply</span><span>(</span><span>this</span><span>,</span> <span>arguments</span><span>);</span>\n<span>}</span>\n</code></pre></div>\n\n<p>Opening that HTML file from the iOS Instagram app yielded the following:</p>\n\n<p><a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed_cut.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_framed_cut.png\" alt=\"The same code as the previous screenshots\"></a>\n</p>\n\n<p>Comparing this to what happens when using a normal browser, or in this case, Telegram, which uses the recommended <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a>:</p>\n\n<p><a href=\"https://krausefx.com/assets/posts/injecting-code/SFSafariViewController_framed_cut.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/SFSafariViewController_framed_cut.png\" alt=\"SFSafariViewController rendering the same page, but this time no JavaScript events were tracked, and a green check mark is shown\"></a>\n</p>\n\n<p>As you can see, a regular browser, or <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a> doesnât run any JS code. <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a> is a great way for app developers to show third party web content to the user, without them leaving your app, while still preserving the privacy and comfort for the user.</p>\n\n<h2 id=\"technical-details\">Technical Details</h2>\n\n<p><a href=\"https://krausefx.com/assets/posts/injecting-code/flow-chart.png\" target=\"_blank\">\n    <img src=\"https://krausefx.com/assets/posts/injecting-code/flow-chart.png\" id=\"inject-code-style\" alt=\"A simple flowchart: starting with the use of the Instagram iOS app. For 3 paths (user taps a link in DMs, user taps a link in bio, user taps a link on an ad), the flow continues to 'Instagram renders external page inside app'. It then subscribes to text selections, and checks if an SDK named 'iab-pcm-sdk' is installed. If no, the Meta tracking pixel is installed. In all cases, the Instagram app queries for a list of iFrames.\">\n  </a>\n</p>\n\n<ul>\n  <li>Instagram adds a new event listener, to get details about every time the user selects any text on the website. This, in combination with listening to screenshots, gives Instagram full insight over what specific piece of information was selected &amp; shared</li>\n  <li>The Instagram app checks if there is an element with the ID <code>iab-pcm-sdk</code>: surprisingly I found very little information about this online. Basically it seems to be a <a href=\"https://iabtechlab.com/wp-content/uploads/2021/04/Authenticated-UID-APAC-v2.0-Deck.pdf\">cross-platform tracking SDK provided by IAB Tech Lab</a>, however I donât know enough about the relationship between Instagram and <a href=\"https://iabtechlab.com/\">IAB Tech Lab</a> (e.g. <a href=\"https://twitter.com/IABTechLab/status/1519414703239438336\">this tweet</a>)</li>\n  <li>If no element with the ID <code>iab-pcm-sdk</code> was found, Instagram creates a new <code>script</code> element, sets its source to <a href=\"https://connect.facebook.net/en_US/pcm.js\"><code>https://connect.facebook.net/en_US/pcm.js</code></a>, which is the source code for the Meta tracking pixel</li>\n  <li>It then finds the first <code>script</code> element on your website to insert the Meta Pixel right before, <strong>injecting the Meta Pixel onto your website</strong></li>\n  <li>Instagram also queries for <code>iframes</code> on your website, however I couldnât find any indication of what theyâre doing with it</li>\n</ul>\n\n<h3 id=\"how-to-protect-yourself-as-a-user\">How to protect yourself as a user?</h3>\n\n<p><a href=\"https://krausefx.com/assets/posts/injecting-code/instagram_open_in_safari_framed.png\" target=\"_blank\"><img src=\"https://krausefx.com/assets/posts/injecting-code/instagram_open_in_safari_framed.png\" alt=\"A screenshot of the Instagram iOS app when you click the 3 dots on the top right while viewing an external website, that allows people to open the page in their default browser\"></a>\n</p>\n\n<h4 id=\"escape-the-in-app-webview\">Escape the in-app-webview</h4>\n\n<p>Most in-app browsers have a way to open the currently rendered website in Safari. As soon as you land on that screen, just use that option to escape it. If that button isnât available, you will have to copy &amp; paste the URL to open the link in the browser of your choice.</p>\n\n<h4 id=\"use-the-web-version\">Use the web version</h4>\n\n<p>Most social networks, including Instagram and Facebook, offer a decent mobile-web version, offering a similar feature set. You can use <code>https://instagram.com</code> without issues in iOS Safari.</p>\n\n<h3 id=\"how-to-protect-yourself-as-a-website-provider\">How to protect yourself as a website provider?</h3>\n\n<p>Until Instagram resolves this issue (if ever), you can quite easily trick the Instagram and Facebook app to believe the tracking code is already installed. Just add the following to your HTML code:</p>\n\n<div><pre><code>&lt;span id=\"iab-pcm-sdk\"&gt;&lt;/span&gt;\n&lt;span id=\"iab-autofill-sdk\"&gt;&lt;/span&gt;\n</code></pre></div>\n\n<p>Additionally, to prevent Instagram from tracking the userâs text selections on your website:</p>\n\n<div><pre><code><span>const</span> <span>originalEventListener</span> <span>=</span> <span>document</span><span>.</span><span>addEventListener</span>\n<span>document</span><span>.</span><span>addEventListener</span> <span>=</span> <span>function</span><span>(</span><span>a</span><span>,</span> <span>b</span><span>)</span> <span>{</span>\n    <span>if</span> <span>(</span><span>b</span><span>.</span><span>toString</span><span>().</span><span>indexOf</span><span>(</span><span>\"</span><span>messageHandlers.fb_getSelection</span><span>\"</span><span>)</span> <span>&gt;</span> <span>-</span><span>1</span><span>)</span> <span>{</span>\n        <span>return</span> <span>null</span><span>;</span>\n    <span>}</span>\n    <span>return</span> <span>originalEventListener</span><span>.</span><span>apply</span><span>(</span><span>this</span><span>,</span> <span>arguments</span><span>);</span>\n<span>}</span>\n</code></pre></div>\n\n<p>This will not solve the actual problem of Instagram running JavaScript code against your website, but at least no additional JS scripts will be injected, as well as less data being tracked.</p>\n\n<p>Itâs also easy for an app to detect if the current browser is the Instagram/Facebook app by checking the user agent, however I couldnât find a good way to pop out of the in-app browser automatically to open Safari instead. If you know a solution, Iâd <a href=\"https://twitter.com/KrauseFx\">love to know</a>.</p>\n\n<h2 id=\"proposals\">Proposals</h2>\n\n<h3 id=\"for-apple\">For Apple</h3>\n\n<p>Apple is doing a fantastic job building their platform with the userâs privacy in mind. One of the 4 privacy principles:</p>\n\n<blockquote>\n  <p><strong>User Transparency and Control:</strong> Making sure that users know what data is shared and how it is used, and that they can exercise control over it.</p>\n</blockquote>\n\n<p>â <a href=\"https://www.apple.com/privacy/docs/A_Day_in_the_Life_of_Your_Data.pdf\">Apple Privacy PDF</a> <small>(April 2021)</small></p>\n\n<p>At the moment of writing, there is no AppStore Review Rule that prohibits companies from building their own in-app browser to track the user, read their inputs, and inject additional ads to third party websites. However Apple is clearly recommending that to use <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a>:</p>\n\n<blockquote>\n  <p>Avoid using a web view to build a web browser. Using a web view to let people briefly access a website without leaving the context of your app is fine, but Safari is the primary way people browse the web. <strong>Attempting to replicate the functionality of Safari in your app is unnecessary and discouraged.</strong></p>\n</blockquote>\n\n<p>â <a href=\"https://developer.apple.com/design/human-interface-guidelines/components/content/web-views/\">Apple Human Interface Guidelines</a> <small>(June 2022)</small></p>\n\n<blockquote>\n  <p><strong>If your app lets users view websites from anywhere on the Internet, use the <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a> class</strong>. If your app customizes, interacts with, or controls the display of web content, use the <code>WKWebView</code> class.</p>\n</blockquote>\n\n<p>â <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\">Apple SFSafariViewController docs</a> <small>(June 2022)</small></p>\n\n<p><strong>Introducing <code>App-Bound Domains</code></strong></p>\n\n<p><a href=\"https://webkit.org/blog/10882/app-bound-domains/\">App-Bound Domains</a> is an excellent new <code>WebKit</code> feature making it possible for developers to offer a safer in-app browsing experience when using <code>WKWebView</code>. As an app developer, you can define which domains your app can access, and all web requests will be restricted to them. To disable the protection, a user would have to explicitly disable it in the iOS settings app.</p>\n\n<p>App-Bound Domains went live with iOS 14 (~1.5 years ago), however itâs only an opt-in option for developers, meaning the vast majority of iOS apps donât make use of this feature.</p>\n\n<blockquote>\n  <p>If the developers of SocialApp <strong>want a better user privacy experience</strong> they have two paths forward:</p>\n  <ul>\n    <li>Use <code>SafariViewController</code> instead of <code>WKWebView</code> for in-app browsing. <code>SafariViewController</code> protects user data from SocialApp by loading pages outside of SocialAppâs process space. SocialApp can guarantee it is giving its users the best available user privacy experience while using SafariViewController.</li>\n    <li>Opt-in to App-Bound Domains. The additional <code>WKWebView</code> restrictions from App-Bound Domains ensure that SocialApp is not able to track users using the APIs outlined above.</li>\n  </ul>\n</blockquote>\n\n<p>I highlighted the <code>\"want a better user privacy experience\"</code> part, as this is the missing piece: App-Bound Domains should be a requirement for all iOS apps, since the social media apps are the ones injecting the tracking code.</p>\n\n<p>In July 2022 Apple introduced the <a href=\"https://www.apple.com/newsroom/2022/07/apple-expands-commitment-to-protect-users-from-mercenary-spyware/\">Lockdown Mode</a> to better protect people who are at high risk. Unfortunately the iOS Lockdown Mode doesnât change the way in-app web views work. I have filed a radar with Apple: <a href=\"https://openradar.appspot.com/radar?id=5500665535135744\">rdar://10735684</a>, for which Apple has responded with âThis isnât what Lockdown Mode is forâ</p>\n\n<p><img src=\"https://krausefx.com/assets/posts/injecting-code/apple-response.png\">\n</p>\n\n<p><strong>A few immediate steps for Apple to take:</strong></p>\n\n<p>Update the App Review Rules to require the use of <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a> or <a href=\"https://webkit.org/blog/10882/app-bound-domains/\">App-Bound Domains</a> when displaying any third party websites.</p>\n\n<ul>\n  <li>There should be only a few exception (e.g. browser apps), that require two extra steps:\n    <ul>\n      <li>Request an extra entitlement to ensure itâs a valid use-case</li>\n      <li>Have the user confirm the extra permission</li>\n    </ul>\n  </li>\n  <li>First-party websites/content can still be displayed using the <code>WKWebView</code> class, as they are often used for UI elements, or the app actually modifying their first party content (e.g. auto-dismissing of their own cookie banners)</li>\n</ul>\n\n<p>Iâve also submitted a radar (<a href=\"https://openradar.appspot.com/radar?id=4963695432040448\">rdar://38109139</a>) to Apple as part of my <a href=\"https://krausefx.com/blog/follow-user\">past blog post</a>.</p>\n\n<h3 id=\"for-meta\">For Meta</h3>\n\n<p>Do what Meta is already doing with WhatsApp: Stop modifying third party websites, and use Safari or <a href=\"https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller\"><code>SFSafariViewController</code></a> for all third party websites. Itâs whatâs best for the user, and the right thing to do.</p>\n\n<p>Iâve disclosed this issue with Meta through their <a href=\"https://www.facebook.com/whitehat/profile/FelixKrause\">Bug Bounty Program</a>, where within a few hours they confirmed they were able to reproduce the âissueâ, however I havenât heard back anything else within the last 9 weeks, besides asking me to wait longer until they have a full report. Since there hasnât been any responses on my follow-up questions, nor did they stop injecting tracking code into external websites, Iâve decided to go public with this information (after giving them another 2 weeks heads-up)</p>\n\n<p>Check out my <a href=\"/privacy\">other privacy and security related publications</a>.</p>\n\n\n\n\n\n    <!-- <p style=\"margin-top: 30px\" class=\"side-projects-note\">\n  <small>Unless otherwise mentioned in the post, those projects are side projects which I work on on weekends and evenings, and are not affiliated with my work or employer.</small>\n</p>\n -->\n  </div>\n\n  \n</article>\n\n      </div></div>","textContent":"\n        \n\n        \n  \n\n  \n    \n    \n  \n\n\nThe iOS Instagram and Facebook app render all third party links and ads within their app using a custom in-app browser. This causes various risks for the user, with the host app being able to track every single interaction with external websites, from all form inputs like passwords and addresses, to every single tap.\n\nNote: To keep this post simple, I'll use \"Instagram\" instead of \"Meta\" or \"Facebook\"\n\n\nWhat does Instagram do?\n\n\n  Links to external websites are rendered inside the Instagram app, instead of using the built-in Safari.\n  This allows Instagram to monitor everything happening on external websites, without the consent from the user, nor the website provider.\n  The Instagram app injects their tracking code into every website shown, including when clicking on ads, enabling them monitor all user interactions, like every button & link tapped, text selections, screenshots, as well as any form inputs, like passwords, addresses and credit card numbers.\n\n\nWhy is this a big deal?\n\n\n  Apple actively works against this kind of cross-host tracking:\n    \n      As of iOS 14.5 App Tracking Transparency puts the user in control: Apps need to get the userâs permission before tracking their data across apps owned by other companies.\n      Safari already blocks third party cookies by default\n    \n  \n  Google Chrome is soon phasing out third party cookies\n  Firefox just announced Total Cookie Protection by default to prevent any cross-page tracking\n  Some ISPs used to inject their own tracking/ad code into all websites, however they could only do it for unencrypted pages. With the rise of HTTPs by default, this isnât an option any more. The approach the Instagram & Facebook app uses here works for any website, no matter if itâs encrypted or not.\n\n\nInstagram is purposely working around the App Tracking Transparency permission system, which was designed to prevent this exact type of data collection. After its introduction, Meta announced:\n\n\n  Appleâs simple iPhone alert is costing Facebook $10 billion a year\n\n\n\n  Facebook complained that Appleâs App Tracking Transparency favors companies like Google because App Tracking Transparency âcarves out browsers from the tracking prompts Apple requires for apps.â\n\n\n\n  Websites you visit on iOS donât trigger tracking prompts because the anti-tracking features are built in.\n\n\nâ Daring Fireball & MacWorld\n\nWith 1 Billion active Instagram users, the amount of data Instagram can collect by injecting the tracking code into every third party website opened from the Instagram & Facebook app is a staggering amount.\n\nWith web browsers and iOS adding more and more privacy controls into the userâs hands, it becomes clear why Instagram is interested in monitoring all web traffic of external websites.\n\n\n  Facebook bombarded its users with messages begging them to turn tracking back on. It threatened an antitrust suit against Apple. It got small businesses to defend user-tracking, claiming that when a giant corporation spies on billions of people, thatâs a form of small business development.\n\n\nâ EFF - Facebook Says Apple is Too Powerful. Theyâre Right.\n\nFAQs for non-tech readers\n\n\n  Can Instagram/Facebook read everything I do online? No! Instagram is only able to read and watch your online activities when you open a link or ad from within their apps.\n  Does Facebook actually steal my passwords, address and credit card numbers? No! I didnât prove the exact data Instagram is tracking, but wanted to showcase the kind of data they could get without you knowing. As shown in the past, if itâs possible for a company to get access to data for free, without asking the user for permission, they will track it.\n  How can I protect myself? For full details scroll down to the end of the article. Summary: Whenever you open a link from Instagram (or Facebook or Messenger), make sure to click the dots in the corner to open the page in Safari instead.\n  Is Instagram doing this on purpose? I canât say how the decisions were made internally. All I can say is that building your own in-app browser takes a non-trivial time to program and maintain, significantly more than just using the privacy and user-friendly alternative thatâs already been built into the iPhone for the past 7 years.\n\n\n\n\nMeta Pixel\n\nThe external JavaScript file the Instagram app injects (connect.facebook.net/en_US/pcm.js) is the Meta Pixel, as well as some code to build a bridge to communicate with the host app. This is not just a pixel/image, but actual JavaScript code that gets executed:\n\n\n  The Meta Pixel is a snippet of JavaScript code that allows you to track visitor activity on your website. It works by loading a small library of functions which you can use whenever a site visitor takes an action that you want to track [â¦]\n\n  The Meta Pixel can collect the following data:\n  \n    [â¦]\n    Button Click Data â Includes any buttons clicked by site visitors, the labels of those buttons and any pages visited as a result of the button clicks.\n    Form Field Names â Includes website field names like email, address, quantity, etc., for when you purchase a product or service. We donât capture field values unless you include them as part of Advanced Matching or optional values.\n  \n\n\nâ developers.facebook.com/docs/meta-pixel (June 2022)\n\n\"The Meta Pixel allows you to track visitor activity on your website\" - This is the problem: Itâs perfectly okay for a website provider to decide to implement the Meta pixel to track visitor activity. However in this case, the website operator did not consent to having the Meta Pixel installed. On top of that, the website provider doesnât even have a way to opt-out.\n\nDisclaimer\n\nI donât have a list of precise data Instagram sends back home. I do have proof that the Instagram and Facebook app actively run JavaScript commands to inject an additional JS SDK without the userâs consent, as well as tracking the userâs text selections. If Instagram is doing this already, they could also inject any other JS code. The Instagram app itself is well protected against human-in-the-middle attacks, and only by modifying the Android binary to remove certificate pinning and running it in a simulator, I was able to inspect some of its web traffic.\n\n\n\nEven then, most of the actual data had another layer of encryption/compression. It is clear that they really donât want you to investigate what kind of data is sent back to the API. I have decided not to spend more time on this.\n\n\n\nOverall the goal of this project wasnât to get a precise list of data that is sent back, but to highlight the privacy & security issues that are caused by the use of in-app browsers, as well as to prove that apps like Instagram are already exploiting this loophole.\n\nTo summarize the risks and disadvantages of having in-app browsers:\n\n\n  Privacy & Analytics: The host app can track literally everything happening on the website, every tap, input, scrolling behavior, which content gets copy & pasted, as well as data shown like online purchases\n  Stealing of user credentials, physical addresses, API keys, etc.\n  Ads & Referrals: The host app can inject advertisements into the website, or replace the ads API key to steal revenue from the host app, or replace all URLs to include your referral code (this happened before)\n  Security: Browsers spent years optimizing the security UX of the web, like showing the HTTPs encryption status, warning the user about sketchy or unencrypted websites, and more\n  Injecting additional JavaScript code onto a third party website can cause issues and glitches, potentially breaking the website\n  The userâs browser extensions & content blockers arenât available\n  Deep linking doesnât work well in most cases\n  Often no easy way to share a link via other platforms (e.g. via Email, AirDrop, etc.)\n\n\nInstagramâs in-app browser supports auto-fill of your address and payment information. However there is no legit reason for this to exist in the first place, with all of this already built into the operating system, or the web browser itself.\n\n\n\n\n  \n    Instagram iOS\n    Messenger iOS\n  \n  \n    \n    \n  \n\n\n  \n    Facebook iOS\n    Instagram Android\n  \n  \n    \n    \n  \n\n\nWhatsApp is opening iOS Safari by default, therefore no issues.\n\nHow it works\n\nTo my knowledge, there is no good way to monitor all JavaScript commands that get executed by the host iOS app (would love to hear if there is a better way).\n\nI created a new, plain HTML file, with some JS code to override some of the document. methods:\n\ndocument.getElementById = function(a, b) {\n    appendCommand('document.getElementById(\"' + a + '\")')\n    return originalGetElementById.apply(this, arguments);\n}\n\n\nOpening that HTML file from the iOS Instagram app yielded the following:\n\n\n\n\nComparing this to what happens when using a normal browser, or in this case, Telegram, which uses the recommended SFSafariViewController:\n\n\n\n\nAs you can see, a regular browser, or SFSafariViewController doesnât run any JS code. SFSafariViewController is a great way for app developers to show third party web content to the user, without them leaving your app, while still preserving the privacy and comfort for the user.\n\nTechnical Details\n\n\n    \n  \n\n\n\n  Instagram adds a new event listener, to get details about every time the user selects any text on the website. This, in combination with listening to screenshots, gives Instagram full insight over what specific piece of information was selected & shared\n  The Instagram app checks if there is an element with the ID iab-pcm-sdk: surprisingly I found very little information about this online. Basically it seems to be a cross-platform tracking SDK provided by IAB Tech Lab, however I donât know enough about the relationship between Instagram and IAB Tech Lab (e.g. this tweet)\n  If no element with the ID iab-pcm-sdk was found, Instagram creates a new script element, sets its source to https://connect.facebook.net/en_US/pcm.js, which is the source code for the Meta tracking pixel\n  It then finds the first script element on your website to insert the Meta Pixel right before, injecting the Meta Pixel onto your website\n  Instagram also queries for iframes on your website, however I couldnât find any indication of what theyâre doing with it\n\n\nHow to protect yourself as a user?\n\n\n\n\nEscape the in-app-webview\n\nMost in-app browsers have a way to open the currently rendered website in Safari. As soon as you land on that screen, just use that option to escape it. If that button isnât available, you will have to copy & paste the URL to open the link in the browser of your choice.\n\nUse the web version\n\nMost social networks, including Instagram and Facebook, offer a decent mobile-web version, offering a similar feature set. You can use https://instagram.com without issues in iOS Safari.\n\nHow to protect yourself as a website provider?\n\nUntil Instagram resolves this issue (if ever), you can quite easily trick the Instagram and Facebook app to believe the tracking code is already installed. Just add the following to your HTML code:\n\n<span id=\"iab-pcm-sdk\"></span>\n<span id=\"iab-autofill-sdk\"></span>\n\n\nAdditionally, to prevent Instagram from tracking the userâs text selections on your website:\n\nconst originalEventListener = document.addEventListener\ndocument.addEventListener = function(a, b) {\n    if (b.toString().indexOf(\"messageHandlers.fb_getSelection\") > -1) {\n        return null;\n    }\n    return originalEventListener.apply(this, arguments);\n}\n\n\nThis will not solve the actual problem of Instagram running JavaScript code against your website, but at least no additional JS scripts will be injected, as well as less data being tracked.\n\nItâs also easy for an app to detect if the current browser is the Instagram/Facebook app by checking the user agent, however I couldnât find a good way to pop out of the in-app browser automatically to open Safari instead. If you know a solution, Iâd love to know.\n\nProposals\n\nFor Apple\n\nApple is doing a fantastic job building their platform with the userâs privacy in mind. One of the 4 privacy principles:\n\n\n  User Transparency and Control: Making sure that users know what data is shared and how it is used, and that they can exercise control over it.\n\n\nâ Apple Privacy PDF (April 2021)\n\nAt the moment of writing, there is no AppStore Review Rule that prohibits companies from building their own in-app browser to track the user, read their inputs, and inject additional ads to third party websites. However Apple is clearly recommending that to use SFSafariViewController:\n\n\n  Avoid using a web view to build a web browser. Using a web view to let people briefly access a website without leaving the context of your app is fine, but Safari is the primary way people browse the web. Attempting to replicate the functionality of Safari in your app is unnecessary and discouraged.\n\n\nâ Apple Human Interface Guidelines (June 2022)\n\n\n  If your app lets users view websites from anywhere on the Internet, use the SFSafariViewController class. If your app customizes, interacts with, or controls the display of web content, use the WKWebView class.\n\n\nâ Apple SFSafariViewController docs (June 2022)\n\nIntroducing App-Bound Domains\n\nApp-Bound Domains is an excellent new WebKit feature making it possible for developers to offer a safer in-app browsing experience when using WKWebView. As an app developer, you can define which domains your app can access, and all web requests will be restricted to them. To disable the protection, a user would have to explicitly disable it in the iOS settings app.\n\nApp-Bound Domains went live with iOS 14 (~1.5 years ago), however itâs only an opt-in option for developers, meaning the vast majority of iOS apps donât make use of this feature.\n\n\n  If the developers of SocialApp want a better user privacy experience they have two paths forward:\n  \n    Use SafariViewController instead of WKWebView for in-app browsing. SafariViewController protects user data from SocialApp by loading pages outside of SocialAppâs process space. SocialApp can guarantee it is giving its users the best available user privacy experience while using SafariViewController.\n    Opt-in to App-Bound Domains. The additional WKWebView restrictions from App-Bound Domains ensure that SocialApp is not able to track users using the APIs outlined above.\n  \n\n\nI highlighted the \"want a better user privacy experience\" part, as this is the missing piece: App-Bound Domains should be a requirement for all iOS apps, since the social media apps are the ones injecting the tracking code.\n\nIn July 2022 Apple introduced the Lockdown Mode to better protect people who are at high risk. Unfortunately the iOS Lockdown Mode doesnât change the way in-app web views work. I have filed a radar with Apple: rdar://10735684, for which Apple has responded with âThis isnât what Lockdown Mode is forâ\n\n\n\n\nA few immediate steps for Apple to take:\n\nUpdate the App Review Rules to require the use of SFSafariViewController or App-Bound Domains when displaying any third party websites.\n\n\n  There should be only a few exception (e.g. browser apps), that require two extra steps:\n    \n      Request an extra entitlement to ensure itâs a valid use-case\n      Have the user confirm the extra permission\n    \n  \n  First-party websites/content can still be displayed using the WKWebView class, as they are often used for UI elements, or the app actually modifying their first party content (e.g. auto-dismissing of their own cookie banners)\n\n\nIâve also submitted a radar (rdar://38109139) to Apple as part of my past blog post.\n\nFor Meta\n\nDo what Meta is already doing with WhatsApp: Stop modifying third party websites, and use Safari or SFSafariViewController for all third party websites. Itâs whatâs best for the user, and the right thing to do.\n\nIâve disclosed this issue with Meta through their Bug Bounty Program, where within a few hours they confirmed they were able to reproduce the âissueâ, however I havenât heard back anything else within the last 9 weeks, besides asking me to wait longer until they have a full report. Since there hasnât been any responses on my follow-up questions, nor did they stop injecting tracking code into external websites, Iâve decided to go public with this information (after giving them another 2 weeks heads-up)\n\nCheck out my other privacy and security related publications.\n\n\n\n\n\n    \n  \n\n  \n\n\n      ","length":16437,"excerpt":"","byline":null,"dir":null,"siteName":null,"lang":"en"},"finalizedMeta":{"title":"\n    \n      iOS Privacy: Instagram and Facebook can track anything you do on any website in their in-app browser Â· Felix Krause\n    \n  ","description":"","author":false,"creator":"","publisher":false,"date":"2022-08-10T21:57:56.912Z","topics":[]},"jsonLd":{"@type":false,"headline":false,"description":false,"image":[],"mainEntityOfPage":{"@type":false,"@id":false},"datePublished":false,"dateModified":false,"isAccessibleForFree":false,"isPartOf":{"@type":[],"name":false,"productID":false},"discussionUrl":false,"license":false,"author":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false},"publisher":{"@type":false,"name":false,"description":false,"sameAs":false,"logo":{"@type":false,"url":false},"publishingPrinciples":false},"editor":{"@type":false,"name":false,"description":false,"sameAs":false,"image":{"@type":false,"url":false},"givenName":false,"familyName":false,"alternateName":false,"publishingPrinciples":false}},"twitterObj":false,"status":200,"metadata":{"author":false,"title":"\n    \n      iOS Privacy: Instagram and Facebook can track anything you do on any website in their in-app browser Â· Felix Krause\n    \n  ","description":false,"canonical":"https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","keywords":[],"image":"","firstParagraph":"Founder of fastlane.tools"},"dublinCore":{},"opengraph":{"title":false,"description":false,"url":false,"site_name":false,"locale":false,"type":false,"typeObject":{"published_time":false,"modified_time":false,"author":false,"publisher":false,"section":false,"tag":[]},"image":false},"twitter":{"site":false,"description":false,"card":false,"creator":false,"title":false,"image":false},"archivedData":{"link":"https://web.archive.org/web/20220810183555/https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser","wayback":"https://web.archive.org/web/20220810183555/https://krausefx.com/blog/ios-privacy-instagram-and-facebook-can-track-anything-you-do-on-any-website-in-their-in-app-browser"}}}